{"version":3,"sources":["main/board.tsx","main/globals.ts","main/is.ts","main/iso_lang_codes.ts","main/range.ts","main/shuffle.ts","main/lexicon.ts","main/lexicons.ts","main/lexiconIndex.ts","main/game.tsx","reportWebVitals.ts","main/instructions.tsx","main/scramble.tsx","App.tsx","index.tsx"],"names":["Letter","letter","selected","setSelected","isWord","boardSize","size","a","scale","n","onClick","style","backgroundColor","color","padding","margin","width","fontSize","borderWidth","borderStyle","borderRadius","textAlign","Word","word","selectedIndex","setSelectedIndex","display","justifyContent","alignItems","alignContent","fontWeight","toUpperCase","map","i","Board","shuffleWords","words","check","wordChecker","Solution","solution","shuffled","initState","useCallback","isFirst","x","y","solved","numMoves","useState","setState","showingSolution","setWords","args","move","useEffect","console","log","join","j","splitWords","temp","setIJ","length","showSolution","shuffle","globals","obj","Object","assign","globalThis","isNotUndefined","t","undefined","iso_lang_codes","toIsoLangId","id","byId","hasOwnProperty","ids","keys","lowerCaseId","toLowerCase","find","langId","toBaseIsoLang","lang","baseId","split","browserLanguage","navigator","language","browserLanguages","languages","filter","range_iter","start","stop","step","range","iterate","Math","floor","random","LexiconMetadataImpl","metadata","this","name","numWords","fileSize","numBytes","Lexicon","handle","rawWordsByLength","s","toSet","wordsByLength","e","reduce","max","toArray","push","maxLengthBound","lengthRange","hasLength","has","every","checkWord","checkWords","Error","randomWord","ShuffledWords","randomWords","_shuffled","letters","shuffledString","end","slice","doShuffle","LexiconHandleImpl","lexicon","fetch","url","response","text","startsWith","Promise","lexiconPromise","then","process","Symbol","iterator","Lexicons","index","defaultName","handles","defaultNameKey","entries","getDefaultName","default","get","values","names","iter","isName","localStorage","getItem","setItem","isMetadata","nameError","updateDefault","langCodeToLexiconName","convert","English","Catalan","Danish","Dutch","Faroese","French","Galician","Italian","German","Polish","Spanish","Swedish","Ukrainian","lexiconName","baseLang","error","lexicons","onPerfEntry","GameSolution","Game","randomShuffledWords","NewGameChooser","options","setOptions","starting","again","lexiconHandle","setLexiconHandle","getCached","setLexicon","setSize","newLexicon","tryUpdateDefault","disabled","value","label","onChange","tryGet","consecutiveLengths","toString","parseInt","Games","Instructions","marginLeft","marginRight","minWidth","Scramble","App","ReactDOM","render","StrictMode","document","querySelector","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.89813e58.chunk.js","sourcesContent":["import {FC, useCallback, useEffect, useState} from \"react\";\nimport {ShuffledWords, WordChecker} from \"./lexicon\";\n\nconst Letter: FC<{\n    letter: string;\n    selected: boolean;\n    setSelected: () => void;\n    isWord: boolean;\n    boardSize: number;\n}> = ({letter, selected, setSelected, isWord, boardSize}) => {\n    const size = ((): (n: number) => number => {\n        // we want to pin these two scales and adjust in-between\n        // use point-slope form to calculate scale\n        interface Point {\n            readonly boardSize: number;\n            readonly scale: number;\n        }\n        \n        const a: Point = {boardSize: 5, scale: 1};\n        const b: Point = {boardSize: 25, scale: 2};\n        const slope = (a.scale - b.scale) / (a.boardSize - b.boardSize);\n        const scale = slope * (boardSize - a.boardSize) + a.scale;\n        return n => (n / scale) * 1.5;\n    })();\n    \n    return <div\n        onClick={setSelected}\n        style={{\n            backgroundColor: selected ? \"yellow\" : isWord ? \"#13E049\" : \"white\",\n            color: selected ? \"black\" : isWord ? \"red\" : \"black\",\n            padding: `${size(1)}%`,\n            margin: `${size(0.2)}%`,\n            width: `${size(3)}%`,\n            fontSize: `${size(3)}vw`,\n            borderWidth: `${size(1)}vw`,\n            borderStyle: selected ? \"inset\" : \"outset\",\n            borderRadius: isWord ? `${size(2)}vw` : 0,\n            textAlign: \"center\",\n        }}\n    >\n        {letter}\n    </div>;\n};\n\nconst Word: FC<{\n    word: string;\n    isWord: boolean;\n    selectedIndex: number;\n    setSelectedIndex: (index: number) => void;\n    boardSize: number;\n}> = ({word, isWord, selectedIndex, setSelectedIndex, boardSize}) => {\n    return <div style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        fontWeight: isWord ? \"bold\" : \"normal\",\n    }}>\n        {[...word.toUpperCase()].map((letter, i) => <Letter\n            key={i}\n            letter={letter}\n            selected={selectedIndex === i}\n            setSelected={() => setSelectedIndex(i)}\n            isWord={isWord}\n            boardSize={boardSize}\n        />)}\n    </div>;\n};\n\nexport interface SolutionProps {\n    solved: boolean;\n    showingSolution: boolean;\n    showSolution: () => void;\n    numMoves: number;\n    shuffle: () => void;\n}\n\nexport const Board: FC<{\n    words: ShuffledWords;\n    wordChecker: WordChecker;\n    Solution: FC<SolutionProps>;\n}> = ({words: shuffleWords, wordChecker: check, Solution}) => {\n    const {solution, shuffled} = shuffleWords;\n    \n    const initState = useCallback((isFirst: boolean) => {\n        return {isFirst, x: -1, y: -1, words: shuffled, solved: check.words(shuffled), numMoves: 0};\n    }, [check, shuffled]);\n    \n    const [{isFirst, x, y, words, solved, numMoves}, setState] = useState(initState(true));\n    const showingSolution = words === solution;\n    \n    function setWords(args: {words: readonly string[]; move: boolean, solved?: boolean}) {\n        setState({\n            isFirst: false,\n            x: -1,\n            y: -1,\n            words: args.words,\n            solved: args.solved ?? check.words(args.words),\n            numMoves: numMoves + (args.move ? 1 : 0),\n        });\n    }\n    \n    useEffect(() => {\n        if (!isFirst) {\n            console.log(solution.join(\"\\n\"));\n        }\n    }, [isFirst, solution])\n    \n    useEffect(() => {\n        setState(initState(false));\n    }, [initState]);\n    \n    function setIJ(i: number, j: number) {\n        if (y === -1 || x === -1) {\n            // no letters clicked on yet\n            setState({isFirst: false, x: i, y: j, words, solved, numMoves});\n        } else if (x === i && y === j) {\n            // clicked on same letter twice\n            setWords({words, move: false, solved});\n        } else {\n            // one letter clicked on, so swap them now\n            const splitWords = words.map(word => [...word]);\n            const temp = splitWords[i][j];\n            splitWords[i][j] = splitWords[x][y];\n            splitWords[x][y] = temp;\n            setWords({words: splitWords.map(word => word.join(\"\")), move: true});\n        }\n    }\n    \n    return <>\n        <div>\n            {words.map((word, i) => <Word\n                key={i}\n                word={word}\n                isWord={check.word(word)}\n                selectedIndex={i === x ? y : -1}\n                setSelectedIndex={j => setIJ(i, j)}\n                boardSize={words.length}\n            />)}\n        </div>\n        <Solution\n            solved={solved}\n            showingSolution={showingSolution}\n            showSolution={() => setWords({words: solution, move: false, solved: true})}\n            numMoves={numMoves}\n            shuffle={() => setWords({words: shuffleWords.shuffle(), move: false})}\n        />\n    </>;\n};\n","export function globals(obj: object) {\n    Object.assign(globalThis, obj);\n}\n","export function isUndefined<T>(t: T | undefined): t is undefined {\n    return t === undefined;\n}\n\nexport function isNull<T>(t: T | null): t is null {\n    return t === null;\n}\n\nexport function isNotUndefined<T>(t: T | undefined): t is T {\n    return t !== undefined;\n}\n\nexport function isNotNull<T>(t: T | null): t is T {\n    return t !== null;\n}\n\nexport function isNullish<T>(t: T | null | undefined): t is null | undefined {\n    return isUndefined(t) || isNull(t);\n}\n\nexport function isNotNullish<T>(t: T | null | undefined): t is T {\n    return isNotUndefined(t) && isNotNull(t);\n}\n\nexport function isBoolean(b: unknown): b is boolean {\n    return typeof b === \"boolean\";\n}\n\nexport function isNumber(n: unknown): n is number {\n    return typeof n === \"number\";\n}\n\nexport function isBigInt(n: unknown): n is bigint {\n    return typeof n === \"bigint\";\n}\n\nexport function isString(s: unknown): s is string {\n    return typeof s === \"string\";\n}\n","// https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers\n\n// this code is to run in the above website to generate the list of codes\n\nimport {globals} from \"./globals\";\nimport {isNotUndefined} from \"./is\";\n\ninterface GenericIsoLangCode {\n    readonly code: number;\n    readonly id: string;\n    readonly name: string;\n}\n\nfunction queryIsoLangCodes(): readonly GenericIsoLangCode[] {\n    return [...document.querySelectorAll(\"tr\")]\n        .map(e => [...e.children]\n            .map(e => typeof e === \"string\" ? e : e instanceof HTMLElement ? e.innerText : null)\n            .filter((e: string | null): e is string => e !== null),\n        )\n        .map(([value, id, name]) => ({value, id, name}))\n        .filter(e => e.value.match(/0x([0-9a-f]{4})/))\n        .map(({value, id, name}) => ({code: parseInt(value), id, name}));\n}\n\nfunction isoLangCodesByKey<K extends keyof GenericIsoLangCode>(codes: readonly GenericIsoLangCode[],\n                                                               key: K): {readonly [key: string]: GenericIsoLangCode} {\n    return codes.reduce((obj, code) => {\n        obj[code[key]] = code;\n        return obj;\n    }, {} as {[key: string]: GenericIsoLangCode});\n}\n\nfunction createIsoLangCodes() {\n    const codes = queryIsoLangCodes();\n    const byCode = isoLangCodesByKey(codes, \"code\");\n    const byId = isoLangCodesByKey(codes, \"id\");\n    const byName = isoLangCodesByKey(codes, \"name\");\n    return {byCode, byId, byName};\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction isoLangCodesString() {\n    return JSON.stringify(createIsoLangCodes(), null, 4);\n}\n\nexport const iso_lang_codes = {\n    \"byCode\": {\n        \"1\": {\n            \"code\": 1,\n            \"id\": \"ar\",\n            \"name\": \"Arabic\"\n        },\n        \"2\": {\n            \"code\": 2,\n            \"id\": \"bg\",\n            \"name\": \"Bulgarian\"\n        },\n        \"3\": {\n            \"code\": 3,\n            \"id\": \"ca\",\n            \"name\": \"Catalan\"\n        },\n        \"4\": {\n            \"code\": 4,\n            \"id\": \"zh-Hans\",\n            \"name\": \"Chinese, Han (Simplified variant)\"\n        },\n        \"5\": {\n            \"code\": 5,\n            \"id\": \"cs\",\n            \"name\": \"Czech\"\n        },\n        \"6\": {\n            \"code\": 6,\n            \"id\": \"da\",\n            \"name\": \"Danish\"\n        },\n        \"7\": {\n            \"code\": 7,\n            \"id\": \"de\",\n            \"name\": \"German\"\n        },\n        \"8\": {\n            \"code\": 8,\n            \"id\": \"el\",\n            \"name\": \"Modern Greek (1453 and later)\"\n        },\n        \"9\": {\n            \"code\": 9,\n            \"id\": \"en\",\n            \"name\": \"English\"\n        },\n        \"10\": {\n            \"code\": 10,\n            \"id\": \"es\",\n            \"name\": \"Spanish\"\n        },\n        \"11\": {\n            \"code\": 11,\n            \"id\": \"fi\",\n            \"name\": \"Finnish\"\n        },\n        \"12\": {\n            \"code\": 12,\n            \"id\": \"fr\",\n            \"name\": \"French\"\n        },\n        \"13\": {\n            \"code\": 13,\n            \"id\": \"he\",\n            \"name\": \"Hebrew\"\n        },\n        \"14\": {\n            \"code\": 14,\n            \"id\": \"hu\",\n            \"name\": \"Hungarian\"\n        },\n        \"15\": {\n            \"code\": 15,\n            \"id\": \"is\",\n            \"name\": \"Icelandic\"\n        },\n        \"16\": {\n            \"code\": 16,\n            \"id\": \"it\",\n            \"name\": \"Italian\"\n        },\n        \"17\": {\n            \"code\": 17,\n            \"id\": \"ja\",\n            \"name\": \"Japanese\"\n        },\n        \"18\": {\n            \"code\": 18,\n            \"id\": \"ko\",\n            \"name\": \"Korean\"\n        },\n        \"19\": {\n            \"code\": 19,\n            \"id\": \"nl\",\n            \"name\": \"Dutch\"\n        },\n        \"20\": {\n            \"code\": 20,\n            \"id\": \"no\",\n            \"name\": \"Norwegian\"\n        },\n        \"21\": {\n            \"code\": 21,\n            \"id\": \"pl\",\n            \"name\": \"Polish\"\n        },\n        \"22\": {\n            \"code\": 22,\n            \"id\": \"pt\",\n            \"name\": \"Portuguese\"\n        },\n        \"23\": {\n            \"code\": 23,\n            \"id\": \"rm\",\n            \"name\": \"Romansh\"\n        },\n        \"24\": {\n            \"code\": 24,\n            \"id\": \"ro\",\n            \"name\": \"Romanian\"\n        },\n        \"25\": {\n            \"code\": 25,\n            \"id\": \"ru\",\n            \"name\": \"Russian\"\n        },\n        \"26\": {\n            \"code\": 26,\n            \"id\": \"hr\",\n            \"name\": \"Croatian\"\n        },\n        \"27\": {\n            \"code\": 27,\n            \"id\": \"sk\",\n            \"name\": \"Slovak\"\n        },\n        \"28\": {\n            \"code\": 28,\n            \"id\": \"sq\",\n            \"name\": \"Albanian\"\n        },\n        \"29\": {\n            \"code\": 29,\n            \"id\": \"sv\",\n            \"name\": \"Swedish\"\n        },\n        \"30\": {\n            \"code\": 30,\n            \"id\": \"th\",\n            \"name\": \"Thai\"\n        },\n        \"31\": {\n            \"code\": 31,\n            \"id\": \"tr\",\n            \"name\": \"Turkish\"\n        },\n        \"32\": {\n            \"code\": 32,\n            \"id\": \"ur\",\n            \"name\": \"Urdu\"\n        },\n        \"33\": {\n            \"code\": 33,\n            \"id\": \"id\",\n            \"name\": \"Indonesian\"\n        },\n        \"34\": {\n            \"code\": 34,\n            \"id\": \"uk\",\n            \"name\": \"Ukrainian\"\n        },\n        \"35\": {\n            \"code\": 35,\n            \"id\": \"be\",\n            \"name\": \"Belarusian\"\n        },\n        \"36\": {\n            \"code\": 36,\n            \"id\": \"sl\",\n            \"name\": \"Slovenian\"\n        },\n        \"37\": {\n            \"code\": 37,\n            \"id\": \"et\",\n            \"name\": \"Estonian\"\n        },\n        \"38\": {\n            \"code\": 38,\n            \"id\": \"lv\",\n            \"name\": \"Latvian\"\n        },\n        \"39\": {\n            \"code\": 39,\n            \"id\": \"lt\",\n            \"name\": \"Lithuanian\"\n        },\n        \"40\": {\n            \"code\": 40,\n            \"id\": \"tg\",\n            \"name\": \"Tajik\"\n        },\n        \"41\": {\n            \"code\": 41,\n            \"id\": \"fa\",\n            \"name\": \"Persian\"\n        },\n        \"42\": {\n            \"code\": 42,\n            \"id\": \"vi\",\n            \"name\": \"Vietnamese\"\n        },\n        \"43\": {\n            \"code\": 43,\n            \"id\": \"hy\",\n            \"name\": \"Armenian\"\n        },\n        \"44\": {\n            \"code\": 44,\n            \"id\": \"az\",\n            \"name\": \"Azerbaijani\"\n        },\n        \"45\": {\n            \"code\": 45,\n            \"id\": \"eu\",\n            \"name\": \"Basque\"\n        },\n        \"46\": {\n            \"code\": 46,\n            \"id\": \"hsb\",\n            \"name\": \"Upper Sorbian\"\n        },\n        \"47\": {\n            \"code\": 47,\n            \"id\": \"mk\",\n            \"name\": \"Macedonian\"\n        },\n        \"50\": {\n            \"code\": 50,\n            \"id\": \"tn\",\n            \"name\": \"Tswana\"\n        },\n        \"52\": {\n            \"code\": 52,\n            \"id\": \"xh\",\n            \"name\": \"Xhosa\"\n        },\n        \"53\": {\n            \"code\": 53,\n            \"id\": \"zu\",\n            \"name\": \"Zulu\"\n        },\n        \"54\": {\n            \"code\": 54,\n            \"id\": \"af\",\n            \"name\": \"Afrikaans\"\n        },\n        \"55\": {\n            \"code\": 55,\n            \"id\": \"ka\",\n            \"name\": \"Georgian\"\n        },\n        \"56\": {\n            \"code\": 56,\n            \"id\": \"fo\",\n            \"name\": \"Faroese\"\n        },\n        \"57\": {\n            \"code\": 57,\n            \"id\": \"hi\",\n            \"name\": \"Hindi\"\n        },\n        \"58\": {\n            \"code\": 58,\n            \"id\": \"mt\",\n            \"name\": \"Maltese\"\n        },\n        \"59\": {\n            \"code\": 59,\n            \"id\": \"se\",\n            \"name\": \"Northern Sami\"\n        },\n        \"60\": {\n            \"code\": 60,\n            \"id\": \"ga\",\n            \"name\": \"Irish\"\n        },\n        \"62\": {\n            \"code\": 62,\n            \"id\": \"ms\",\n            \"name\": \"Malay (macrolanguage)\"\n        },\n        \"63\": {\n            \"code\": 63,\n            \"id\": \"kk\",\n            \"name\": \"Kazakh\"\n        },\n        \"64\": {\n            \"code\": 64,\n            \"id\": \"ky\",\n            \"name\": \"Kirghiz\"\n        },\n        \"65\": {\n            \"code\": 65,\n            \"id\": \"sw\",\n            \"name\": \"Swahili (macrolanguage)\"\n        },\n        \"66\": {\n            \"code\": 66,\n            \"id\": \"tk\",\n            \"name\": \"Turkmen\"\n        },\n        \"67\": {\n            \"code\": 67,\n            \"id\": \"uz\",\n            \"name\": \"Uzbek\"\n        },\n        \"68\": {\n            \"code\": 68,\n            \"id\": \"tt\",\n            \"name\": \"Tatar\"\n        },\n        \"69\": {\n            \"code\": 69,\n            \"id\": \"bn\",\n            \"name\": \"Bengali\"\n        },\n        \"70\": {\n            \"code\": 70,\n            \"id\": \"pa\",\n            \"name\": \"Panjabi\"\n        },\n        \"71\": {\n            \"code\": 71,\n            \"id\": \"gu\",\n            \"name\": \"Gujarati\"\n        },\n        \"72\": {\n            \"code\": 72,\n            \"id\": \"or\",\n            \"name\": \"Oriya\"\n        },\n        \"73\": {\n            \"code\": 73,\n            \"id\": \"ta\",\n            \"name\": \"Tamil\"\n        },\n        \"74\": {\n            \"code\": 74,\n            \"id\": \"te\",\n            \"name\": \"Telugu\"\n        },\n        \"75\": {\n            \"code\": 75,\n            \"id\": \"kn\",\n            \"name\": \"Kannada\"\n        },\n        \"76\": {\n            \"code\": 76,\n            \"id\": \"ml\",\n            \"name\": \"Malayalam\"\n        },\n        \"77\": {\n            \"code\": 77,\n            \"id\": \"as\",\n            \"name\": \"Assamese\"\n        },\n        \"78\": {\n            \"code\": 78,\n            \"id\": \"mr\",\n            \"name\": \"Marathi\"\n        },\n        \"79\": {\n            \"code\": 79,\n            \"id\": \"sa\",\n            \"name\": \"Sanskrit\"\n        },\n        \"80\": {\n            \"code\": 80,\n            \"id\": \"mn\",\n            \"name\": \"Mongolian\"\n        },\n        \"81\": {\n            \"code\": 81,\n            \"id\": \"bo\",\n            \"name\": \"Tibetan\"\n        },\n        \"82\": {\n            \"code\": 82,\n            \"id\": \"cy\",\n            \"name\": \"Welsh\"\n        },\n        \"83\": {\n            \"code\": 83,\n            \"id\": \"km\",\n            \"name\": \"Central Khmer\"\n        },\n        \"84\": {\n            \"code\": 84,\n            \"id\": \"lo\",\n            \"name\": \"Lao\"\n        },\n        \"86\": {\n            \"code\": 86,\n            \"id\": \"gl\",\n            \"name\": \"Galician\"\n        },\n        \"87\": {\n            \"code\": 87,\n            \"id\": \"kok\",\n            \"name\": \"Konkani (macrolanguage)\"\n        },\n        \"90\": {\n            \"code\": 90,\n            \"id\": \"syr\",\n            \"name\": \"Syriac\"\n        },\n        \"91\": {\n            \"code\": 91,\n            \"id\": \"si\",\n            \"name\": \"Sinhala\"\n        },\n        \"93\": {\n            \"code\": 93,\n            \"id\": \"iu\",\n            \"name\": \"Inuktitut\"\n        },\n        \"94\": {\n            \"code\": 94,\n            \"id\": \"am\",\n            \"name\": \"Amharic\"\n        },\n        \"95\": {\n            \"code\": 95,\n            \"id\": \"tzm\",\n            \"name\": \"Central Atlas Tamazight\"\n        },\n        \"97\": {\n            \"code\": 97,\n            \"id\": \"ne\",\n            \"name\": \"Nepali\"\n        },\n        \"98\": {\n            \"code\": 98,\n            \"id\": \"fy\",\n            \"name\": \"Western Frisian\"\n        },\n        \"99\": {\n            \"code\": 99,\n            \"id\": \"ps\",\n            \"name\": \"Pushto\"\n        },\n        \"100\": {\n            \"code\": 100,\n            \"id\": \"fil\",\n            \"name\": \"Filipino\"\n        },\n        \"101\": {\n            \"code\": 101,\n            \"id\": \"dv\",\n            \"name\": \"Dhivehi\"\n        },\n        \"104\": {\n            \"code\": 104,\n            \"id\": \"ha\",\n            \"name\": \"Hausa\"\n        },\n        \"106\": {\n            \"code\": 106,\n            \"id\": \"yo\",\n            \"name\": \"Yoruba\"\n        },\n        \"107\": {\n            \"code\": 107,\n            \"id\": \"quz\",\n            \"name\": \"Cusco Quechua\"\n        },\n        \"108\": {\n            \"code\": 108,\n            \"id\": \"nso\",\n            \"name\": \"Pedi\"\n        },\n        \"109\": {\n            \"code\": 109,\n            \"id\": \"ba\",\n            \"name\": \"Bashkir\"\n        },\n        \"110\": {\n            \"code\": 110,\n            \"id\": \"lb\",\n            \"name\": \"Luxembourgish\"\n        },\n        \"111\": {\n            \"code\": 111,\n            \"id\": \"kl\",\n            \"name\": \"Kalaallisut\"\n        },\n        \"112\": {\n            \"code\": 112,\n            \"id\": \"ig\",\n            \"name\": \"Igbo\"\n        },\n        \"120\": {\n            \"code\": 120,\n            \"id\": \"ii\",\n            \"name\": \"Sichuan Yi\"\n        },\n        \"122\": {\n            \"code\": 122,\n            \"id\": \"arn\",\n            \"name\": \"Mapudungun\"\n        },\n        \"124\": {\n            \"code\": 124,\n            \"id\": \"moh\",\n            \"name\": \"Mohawk\"\n        },\n        \"126\": {\n            \"code\": 126,\n            \"id\": \"br\",\n            \"name\": \"Breton\"\n        },\n        \"128\": {\n            \"code\": 128,\n            \"id\": \"ug\",\n            \"name\": \"Uighur\"\n        },\n        \"129\": {\n            \"code\": 129,\n            \"id\": \"mi\",\n            \"name\": \"Maori\"\n        },\n        \"130\": {\n            \"code\": 130,\n            \"id\": \"oc\",\n            \"name\": \"Occitan (post 1500)\"\n        },\n        \"131\": {\n            \"code\": 131,\n            \"id\": \"co\",\n            \"name\": \"Corsican\"\n        },\n        \"132\": {\n            \"code\": 132,\n            \"id\": \"gsw\",\n            \"name\": \"Swiss German\"\n        },\n        \"133\": {\n            \"code\": 133,\n            \"id\": \"sah\",\n            \"name\": \"Yakut\"\n        },\n        \"134\": {\n            \"code\": 134,\n            \"id\": \"qut\",\n            \"name\": \"Guatemala\"\n        },\n        \"135\": {\n            \"code\": 135,\n            \"id\": \"rw\",\n            \"name\": \"Kinyarwanda\"\n        },\n        \"136\": {\n            \"code\": 136,\n            \"id\": \"wo\",\n            \"name\": \"Wolof\"\n        },\n        \"140\": {\n            \"code\": 140,\n            \"id\": \"prs\",\n            \"name\": \"Dari\"\n        },\n        \"145\": {\n            \"code\": 145,\n            \"id\": \"gd\",\n            \"name\": \"Scottish Gaelic\"\n        },\n        \"1025\": {\n            \"code\": 1025,\n            \"id\": \"ar-SA\",\n            \"name\": \"Arabic, Saudi Arabia\"\n        },\n        \"1026\": {\n            \"code\": 1026,\n            \"id\": \"bg-BG\",\n            \"name\": \"Bulgarian, Bulgaria\"\n        },\n        \"1027\": {\n            \"code\": 1027,\n            \"id\": \"ca-ES\",\n            \"name\": \"Catalan, Spain\"\n        },\n        \"1028\": {\n            \"code\": 1028,\n            \"id\": \"zh-TW\",\n            \"name\": \"Chinese, Taiwan, Province of China\"\n        },\n        \"1029\": {\n            \"code\": 1029,\n            \"id\": \"cs-CZ\",\n            \"name\": \"Czech, Czech Republic\"\n        },\n        \"1030\": {\n            \"code\": 1030,\n            \"id\": \"da-DK\",\n            \"name\": \"Danish, Denmark\"\n        },\n        \"1031\": {\n            \"code\": 1031,\n            \"id\": \"de-DE\",\n            \"name\": \"German, Germany\"\n        },\n        \"1032\": {\n            \"code\": 1032,\n            \"id\": \"el-GR\",\n            \"name\": \"Modern Greek (1453-), Greece\"\n        },\n        \"1033\": {\n            \"code\": 1033,\n            \"id\": \"en-US\",\n            \"name\": \"English, United States\"\n        },\n        \"1034\": {\n            \"code\": 1034,\n            \"id\": \"es-ES_tradnl\",\n            \"name\": \"Spanish\"\n        },\n        \"1035\": {\n            \"code\": 1035,\n            \"id\": \"fi-FI\",\n            \"name\": \"Finnish, Finland\"\n        },\n        \"1036\": {\n            \"code\": 1036,\n            \"id\": \"fr-FR\",\n            \"name\": \"French, France\"\n        },\n        \"1037\": {\n            \"code\": 1037,\n            \"id\": \"he-IL\",\n            \"name\": \"Hebrew, Israel\"\n        },\n        \"1038\": {\n            \"code\": 1038,\n            \"id\": \"hu-HU\",\n            \"name\": \"Hungarian, Hungary\"\n        },\n        \"1039\": {\n            \"code\": 1039,\n            \"id\": \"is-IS\",\n            \"name\": \"Icelandic, Iceland\"\n        },\n        \"1040\": {\n            \"code\": 1040,\n            \"id\": \"it-IT\",\n            \"name\": \"Italian, Italy\"\n        },\n        \"1041\": {\n            \"code\": 1041,\n            \"id\": \"ja-JP\",\n            \"name\": \"Japanese, Japan\"\n        },\n        \"1042\": {\n            \"code\": 1042,\n            \"id\": \"ko-KR\",\n            \"name\": \"Korean, Republic of Korea\"\n        },\n        \"1043\": {\n            \"code\": 1043,\n            \"id\": \"nl-NL\",\n            \"name\": \"Dutch, Netherlands\"\n        },\n        \"1044\": {\n            \"code\": 1044,\n            \"id\": \"nb-NO\",\n            \"name\": \"Norwegian Bokmål, Norway\"\n        },\n        \"1045\": {\n            \"code\": 1045,\n            \"id\": \"pl-PL\",\n            \"name\": \"Polish, Poland\"\n        },\n        \"1046\": {\n            \"code\": 1046,\n            \"id\": \"pt-BR\",\n            \"name\": \"Portuguese, Brazil\"\n        },\n        \"1047\": {\n            \"code\": 1047,\n            \"id\": \"rm-CH\",\n            \"name\": \"Romansh, Switzerland\"\n        },\n        \"1048\": {\n            \"code\": 1048,\n            \"id\": \"ro-RO\",\n            \"name\": \"Romanian, Romania\"\n        },\n        \"1049\": {\n            \"code\": 1049,\n            \"id\": \"ru-RU\",\n            \"name\": \"Russian, Russian Federation\"\n        },\n        \"1050\": {\n            \"code\": 1050,\n            \"id\": \"hr-HR\",\n            \"name\": \"Croatian, Croatia\"\n        },\n        \"1051\": {\n            \"code\": 1051,\n            \"id\": \"sk-SK\",\n            \"name\": \"Slovak, Slovakia\"\n        },\n        \"1052\": {\n            \"code\": 1052,\n            \"id\": \"sq-AL\",\n            \"name\": \"Albanian, Albania\"\n        },\n        \"1053\": {\n            \"code\": 1053,\n            \"id\": \"sv-SE\",\n            \"name\": \"Swedish, Sweden\"\n        },\n        \"1054\": {\n            \"code\": 1054,\n            \"id\": \"th-TH\",\n            \"name\": \"Thai, Thailand\"\n        },\n        \"1055\": {\n            \"code\": 1055,\n            \"id\": \"tr-TR\",\n            \"name\": \"Turkish, Turkey\"\n        },\n        \"1056\": {\n            \"code\": 1056,\n            \"id\": \"ur-PK\",\n            \"name\": \"Urdu, Pakistan\"\n        },\n        \"1057\": {\n            \"code\": 1057,\n            \"id\": \"id-ID\",\n            \"name\": \"Indonesian, Indonesia\"\n        },\n        \"1058\": {\n            \"code\": 1058,\n            \"id\": \"uk-UA\",\n            \"name\": \"Ukrainian, Ukraine\"\n        },\n        \"1059\": {\n            \"code\": 1059,\n            \"id\": \"be-BY\",\n            \"name\": \"Belarusian, Belarus\"\n        },\n        \"1060\": {\n            \"code\": 1060,\n            \"id\": \"sl-SI\",\n            \"name\": \"Slovenian, Slovenia\"\n        },\n        \"1061\": {\n            \"code\": 1061,\n            \"id\": \"et-EE\",\n            \"name\": \"Estonian, Estonia\"\n        },\n        \"1062\": {\n            \"code\": 1062,\n            \"id\": \"lv-LV\",\n            \"name\": \"Latvian, Latvia\"\n        },\n        \"1063\": {\n            \"code\": 1063,\n            \"id\": \"lt-LT\",\n            \"name\": \"Lithuanian, Lithuania\"\n        },\n        \"1064\": {\n            \"code\": 1064,\n            \"id\": \"tg-Cyrl-TJ\",\n            \"name\": \"Tajik, Cyrillic, Tajikistan\"\n        },\n        \"1065\": {\n            \"code\": 1065,\n            \"id\": \"fa-IR\",\n            \"name\": \"Persian, Islamic Republic of Iran\"\n        },\n        \"1066\": {\n            \"code\": 1066,\n            \"id\": \"vi-VN\",\n            \"name\": \"Vietnamese, Viet Nam\"\n        },\n        \"1067\": {\n            \"code\": 1067,\n            \"id\": \"hy-AM\",\n            \"name\": \"Armenian, Armenia\"\n        },\n        \"1068\": {\n            \"code\": 1068,\n            \"id\": \"az-Latn-AZ\",\n            \"name\": \"Azerbaijani, Latin, Azerbaijan\"\n        },\n        \"1069\": {\n            \"code\": 1069,\n            \"id\": \"eu-ES\",\n            \"name\": \"Basque, Spain\"\n        },\n        \"1070\": {\n            \"code\": 1070,\n            \"id\": \"wen-DE\",\n            \"name\": \"Sorbian languages, Germany\"\n        },\n        \"1071\": {\n            \"code\": 1071,\n            \"id\": \"mk-MK\",\n            \"name\": \"Macedonian, The Former Yugoslav Republic of Macedonia\"\n        },\n        \"1072\": {\n            \"code\": 1072,\n            \"id\": \"st-ZA\",\n            \"name\": \"Southern Sotho, South Africa\"\n        },\n        \"1073\": {\n            \"code\": 1073,\n            \"id\": \"ts-ZA\",\n            \"name\": \"Tsonga, South Africa\"\n        },\n        \"1074\": {\n            \"code\": 1074,\n            \"id\": \"tn-ZA\",\n            \"name\": \"Tswana, South Africa\"\n        },\n        \"1075\": {\n            \"code\": 1075,\n            \"id\": \"ven-ZA\",\n            \"name\": \"South Africa\"\n        },\n        \"1076\": {\n            \"code\": 1076,\n            \"id\": \"xh-ZA\",\n            \"name\": \"Xhosa, South Africa\"\n        },\n        \"1077\": {\n            \"code\": 1077,\n            \"id\": \"zu-ZA\",\n            \"name\": \"Zulu, South Africa\"\n        },\n        \"1078\": {\n            \"code\": 1078,\n            \"id\": \"af-ZA\",\n            \"name\": \"Afrikaans, South Africa\"\n        },\n        \"1079\": {\n            \"code\": 1079,\n            \"id\": \"ka-GE\",\n            \"name\": \"Georgian, Georgia\"\n        },\n        \"1080\": {\n            \"code\": 1080,\n            \"id\": \"fo-FO\",\n            \"name\": \"Faroese, Faroe Islands\"\n        },\n        \"1081\": {\n            \"code\": 1081,\n            \"id\": \"hi-IN\",\n            \"name\": \"Hindi, India\"\n        },\n        \"1082\": {\n            \"code\": 1082,\n            \"id\": \"mt-MT\",\n            \"name\": \"Maltese, Malta\"\n        },\n        \"1083\": {\n            \"code\": 1083,\n            \"id\": \"se-NO\",\n            \"name\": \"Northern Sami, Norway\"\n        },\n        \"1086\": {\n            \"code\": 1086,\n            \"id\": \"ms-MY\",\n            \"name\": \"Malay (macrolanguage), Malaysia\"\n        },\n        \"1087\": {\n            \"code\": 1087,\n            \"id\": \"kk-KZ\",\n            \"name\": \"Kazakh, Kazakhstan\"\n        },\n        \"1088\": {\n            \"code\": 1088,\n            \"id\": \"ky-KG\",\n            \"name\": \"Kirghiz, Kyrgyzstan\"\n        },\n        \"1089\": {\n            \"code\": 1089,\n            \"id\": \"sw-KE\",\n            \"name\": \"Swahili (macrolanguage), Kenya\"\n        },\n        \"1090\": {\n            \"code\": 1090,\n            \"id\": \"tk-TM\",\n            \"name\": \"Turkmen, Turkmenistan\"\n        },\n        \"1091\": {\n            \"code\": 1091,\n            \"id\": \"uz-Latn-UZ\",\n            \"name\": \"Uzbek, Latin, Uzbekistan\"\n        },\n        \"1092\": {\n            \"code\": 1092,\n            \"id\": \"tt-RU\",\n            \"name\": \"Tatar, Russian Federation\"\n        },\n        \"1093\": {\n            \"code\": 1093,\n            \"id\": \"bn-IN\",\n            \"name\": \"Bengali, India\"\n        },\n        \"1094\": {\n            \"code\": 1094,\n            \"id\": \"pa-IN\",\n            \"name\": \"Panjabi, India\"\n        },\n        \"1095\": {\n            \"code\": 1095,\n            \"id\": \"gu-IN\",\n            \"name\": \"Gujarati, India\"\n        },\n        \"1096\": {\n            \"code\": 1096,\n            \"id\": \"or-IN\",\n            \"name\": \"Oriya, India\"\n        },\n        \"1097\": {\n            \"code\": 1097,\n            \"id\": \"ta-IN\",\n            \"name\": \"Tamil, India\"\n        },\n        \"1098\": {\n            \"code\": 1098,\n            \"id\": \"te-IN\",\n            \"name\": \"Telugu, India\"\n        },\n        \"1099\": {\n            \"code\": 1099,\n            \"id\": \"kn-IN\",\n            \"name\": \"Kannada, India\"\n        },\n        \"1100\": {\n            \"code\": 1100,\n            \"id\": \"ml-IN\",\n            \"name\": \"Malayalam, India\"\n        },\n        \"1101\": {\n            \"code\": 1101,\n            \"id\": \"as-IN\",\n            \"name\": \"Assamese, India\"\n        },\n        \"1102\": {\n            \"code\": 1102,\n            \"id\": \"mr-IN\",\n            \"name\": \"Marathi, India\"\n        },\n        \"1103\": {\n            \"code\": 1103,\n            \"id\": \"sa-IN\",\n            \"name\": \"Sanskrit, India\"\n        },\n        \"1104\": {\n            \"code\": 1104,\n            \"id\": \"mn-MN\",\n            \"name\": \"Mongolian, Mongolia\"\n        },\n        \"1105\": {\n            \"code\": 1105,\n            \"id\": \"bo-CN\",\n            \"name\": \"Tibetan, China\"\n        },\n        \"1106\": {\n            \"code\": 1106,\n            \"id\": \"cy-GB\",\n            \"name\": \"Welsh, United Kingdom\"\n        },\n        \"1107\": {\n            \"code\": 1107,\n            \"id\": \"km-KH\",\n            \"name\": \"Central Khmer, Cambodia\"\n        },\n        \"1108\": {\n            \"code\": 1108,\n            \"id\": \"lo-LA\",\n            \"name\": \"Lao, Lao People’s Democratic Republic\"\n        },\n        \"1109\": {\n            \"code\": 1109,\n            \"id\": \"my-MM\",\n            \"name\": \"Burmese, Myanmar\"\n        },\n        \"1110\": {\n            \"code\": 1110,\n            \"id\": \"gl-ES\",\n            \"name\": \"Galician, Spain\"\n        },\n        \"1111\": {\n            \"code\": 1111,\n            \"id\": \"kok-IN\",\n            \"name\": \"Konkani (macrolanguage), India\"\n        },\n        \"1112\": {\n            \"code\": 1112,\n            \"id\": \"mni\",\n            \"name\": \"Manipuri\"\n        },\n        \"1113\": {\n            \"code\": 1113,\n            \"id\": \"sd-IN\",\n            \"name\": \"Sindhi, India\"\n        },\n        \"1114\": {\n            \"code\": 1114,\n            \"id\": \"syr-SY\",\n            \"name\": \"Syriac, Syrian Arab Republic\"\n        },\n        \"1115\": {\n            \"code\": 1115,\n            \"id\": \"si-LK\",\n            \"name\": \"Sinhala, Sri Lanka\"\n        },\n        \"1116\": {\n            \"code\": 1116,\n            \"id\": \"chr-US\",\n            \"name\": \"Cherokee, United States\"\n        },\n        \"1117\": {\n            \"code\": 1117,\n            \"id\": \"iu-Cans-CA\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics, Canada\"\n        },\n        \"1118\": {\n            \"code\": 1118,\n            \"id\": \"am-ET\",\n            \"name\": \"Amharic, Ethiopia\"\n        },\n        \"1119\": {\n            \"code\": 1119,\n            \"id\": \"tmz\",\n            \"name\": \"Tamanaku\"\n        },\n        \"1121\": {\n            \"code\": 1121,\n            \"id\": \"ne-NP\",\n            \"name\": \"Nepali, Nepal\"\n        },\n        \"1122\": {\n            \"code\": 1122,\n            \"id\": \"fy-NL\",\n            \"name\": \"Western Frisian, Netherlands\"\n        },\n        \"1123\": {\n            \"code\": 1123,\n            \"id\": \"ps-AF\",\n            \"name\": \"Pushto, Afghanistan\"\n        },\n        \"1124\": {\n            \"code\": 1124,\n            \"id\": \"fil-PH\",\n            \"name\": \"Filipino, Philippines\"\n        },\n        \"1125\": {\n            \"code\": 1125,\n            \"id\": \"dv-MV\",\n            \"name\": \"Dhivehi, Maldives\"\n        },\n        \"1126\": {\n            \"code\": 1126,\n            \"id\": \"bin-NG\",\n            \"name\": \"Bini, Nigeria\"\n        },\n        \"1127\": {\n            \"code\": 1127,\n            \"id\": \"fuv-NG\",\n            \"name\": \"Nigerian Fulfulde, Nigeria\"\n        },\n        \"1128\": {\n            \"code\": 1128,\n            \"id\": \"ha-Latn-NG\",\n            \"name\": \"Hausa, Latin, Nigeria\"\n        },\n        \"1129\": {\n            \"code\": 1129,\n            \"id\": \"ibb-NG\",\n            \"name\": \"Ibibio, Nigeria\"\n        },\n        \"1130\": {\n            \"code\": 1130,\n            \"id\": \"yo-NG\",\n            \"name\": \"Yoruba, Nigeria\"\n        },\n        \"1131\": {\n            \"code\": 1131,\n            \"id\": \"quz-BO\",\n            \"name\": \"Cusco Quechua, Bolivia\"\n        },\n        \"1132\": {\n            \"code\": 1132,\n            \"id\": \"nso-ZA\",\n            \"name\": \"Pedi, South Africa\"\n        },\n        \"1133\": {\n            \"code\": 1133,\n            \"id\": \"ba-RU\",\n            \"name\": \"Bashkir, Russian Federation\"\n        },\n        \"1134\": {\n            \"code\": 1134,\n            \"id\": \"lb-LU\",\n            \"name\": \"Luxembourgish, Luxembourg\"\n        },\n        \"1135\": {\n            \"code\": 1135,\n            \"id\": \"kl-GL\",\n            \"name\": \"Kalaallisut, Greenland\"\n        },\n        \"1136\": {\n            \"code\": 1136,\n            \"id\": \"ig-NG\",\n            \"name\": \"Igbo, Nigeria\"\n        },\n        \"1137\": {\n            \"code\": 1137,\n            \"id\": \"kr-NG\",\n            \"name\": \"Kanuri, Nigeria\"\n        },\n        \"1138\": {\n            \"code\": 1138,\n            \"id\": \"gaz-ET\",\n            \"name\": \"West Central Oromo, Ethiopia\"\n        },\n        \"1139\": {\n            \"code\": 1139,\n            \"id\": \"ti-ER\",\n            \"name\": \"Tigrinya, Eritrea\"\n        },\n        \"1140\": {\n            \"code\": 1140,\n            \"id\": \"gn-PY\",\n            \"name\": \"Guarani, Paraguay\"\n        },\n        \"1141\": {\n            \"code\": 1141,\n            \"id\": \"haw-US\",\n            \"name\": \"Hawaiian, United States\"\n        },\n        \"1143\": {\n            \"code\": 1143,\n            \"id\": \"so-SO\",\n            \"name\": \"Somali, Somalia\"\n        },\n        \"1144\": {\n            \"code\": 1144,\n            \"id\": \"ii-CN\",\n            \"name\": \"Sichuan Yi, China\"\n        },\n        \"1145\": {\n            \"code\": 1145,\n            \"id\": \"pap-AN\",\n            \"name\": \"Papiamento, Netherlands Antilles\"\n        },\n        \"1146\": {\n            \"code\": 1146,\n            \"id\": \"arn-CL\",\n            \"name\": \"Mapudungun, Chile\"\n        },\n        \"1148\": {\n            \"code\": 1148,\n            \"id\": \"moh-CA\",\n            \"name\": \"Mohawk, Canada\"\n        },\n        \"1150\": {\n            \"code\": 1150,\n            \"id\": \"br-FR\",\n            \"name\": \"Breton, France\"\n        },\n        \"1152\": {\n            \"code\": 1152,\n            \"id\": \"ug-CN\",\n            \"name\": \"Uighur, China\"\n        },\n        \"1153\": {\n            \"code\": 1153,\n            \"id\": \"mi-NZ\",\n            \"name\": \"Maori, New Zealand\"\n        },\n        \"1154\": {\n            \"code\": 1154,\n            \"id\": \"oc-FR\",\n            \"name\": \"Occitan (post 1500), France\"\n        },\n        \"1155\": {\n            \"code\": 1155,\n            \"id\": \"co-FR\",\n            \"name\": \"Corsican, France\"\n        },\n        \"1156\": {\n            \"code\": 1156,\n            \"id\": \"gsw-FR\",\n            \"name\": \"Swiss German, France\"\n        },\n        \"1157\": {\n            \"code\": 1157,\n            \"id\": \"sah-RU\",\n            \"name\": \"Yakut, Russian Federation\"\n        },\n        \"1158\": {\n            \"code\": 1158,\n            \"id\": \"qut-GT\",\n            \"name\": \"Guatemala\"\n        },\n        \"1159\": {\n            \"code\": 1159,\n            \"id\": \"rw-RW\",\n            \"name\": \"Kinyarwanda, Rwanda\"\n        },\n        \"1160\": {\n            \"code\": 1160,\n            \"id\": \"wo-SN\",\n            \"name\": \"Wolof, Senegal\"\n        },\n        \"1164\": {\n            \"code\": 1164,\n            \"id\": \"prs-AF\",\n            \"name\": \"Dari, Afghanistan\"\n        },\n        \"1165\": {\n            \"code\": 1165,\n            \"id\": \"plt-MG\",\n            \"name\": \"Plateau Malagasy, Madagascar\"\n        },\n        \"1169\": {\n            \"code\": 1169,\n            \"id\": \"gd-GB\",\n            \"name\": \"Scottish Gaelic, United Kingdom\"\n        },\n        \"2049\": {\n            \"code\": 2049,\n            \"id\": \"ar-IQ\",\n            \"name\": \"Arabic, Iraq\"\n        },\n        \"2052\": {\n            \"code\": 2052,\n            \"id\": \"zh-CN\",\n            \"name\": \"Chinese, China\"\n        },\n        \"2055\": {\n            \"code\": 2055,\n            \"id\": \"de-CH\",\n            \"name\": \"German, Switzerland\"\n        },\n        \"2057\": {\n            \"code\": 2057,\n            \"id\": \"en-GB\",\n            \"name\": \"English, United Kingdom\"\n        },\n        \"2058\": {\n            \"code\": 2058,\n            \"id\": \"es-MX\",\n            \"name\": \"Spanish, Mexico\"\n        },\n        \"2060\": {\n            \"code\": 2060,\n            \"id\": \"fr-BE\",\n            \"name\": \"French, Belgium\"\n        },\n        \"2064\": {\n            \"code\": 2064,\n            \"id\": \"it-CH\",\n            \"name\": \"Italian, Switzerland\"\n        },\n        \"2067\": {\n            \"code\": 2067,\n            \"id\": \"nl-BE\",\n            \"name\": \"Dutch, Belgium\"\n        },\n        \"2068\": {\n            \"code\": 2068,\n            \"id\": \"nn-NO\",\n            \"name\": \"Norwegian Nynorsk, Norway\"\n        },\n        \"2070\": {\n            \"code\": 2070,\n            \"id\": \"pt-PT\",\n            \"name\": \"Portuguese, Portugal\"\n        },\n        \"2072\": {\n            \"code\": 2072,\n            \"id\": \"ro-MO\",\n            \"name\": \"Romanian, Macao\"\n        },\n        \"2073\": {\n            \"code\": 2073,\n            \"id\": \"ru-MO\",\n            \"name\": \"Russian, Macao\"\n        },\n        \"2074\": {\n            \"code\": 2074,\n            \"id\": \"sr-Latn-CS\",\n            \"name\": \"Serbian, Latin, Serbia and Montenegro\"\n        },\n        \"2077\": {\n            \"code\": 2077,\n            \"id\": \"sv-FI\",\n            \"name\": \"Swedish, Finland\"\n        },\n        \"2080\": {\n            \"code\": 2080,\n            \"id\": \"ur-IN\",\n            \"name\": \"Urdu, India\"\n        },\n        \"2092\": {\n            \"code\": 2092,\n            \"id\": \"az-Cyrl-AZ\",\n            \"name\": \"Azerbaijani, Cyrillic, Azerbaijan\"\n        },\n        \"2094\": {\n            \"code\": 2094,\n            \"id\": \"dsb-DE\",\n            \"name\": \"Lower Sorbian, Germany\"\n        },\n        \"2107\": {\n            \"code\": 2107,\n            \"id\": \"se-SE\",\n            \"name\": \"Northern Sami, Sweden\"\n        },\n        \"2108\": {\n            \"code\": 2108,\n            \"id\": \"ga-IE\",\n            \"name\": \"Irish, Ireland\"\n        },\n        \"2110\": {\n            \"code\": 2110,\n            \"id\": \"ms-BN\",\n            \"name\": \"Malay (macrolanguage), Brunei Darussalam\"\n        },\n        \"2115\": {\n            \"code\": 2115,\n            \"id\": \"uz-Cyrl-UZ\",\n            \"name\": \"Uzbek, Cyrillic, Uzbekistan\"\n        },\n        \"2117\": {\n            \"code\": 2117,\n            \"id\": \"bn-BD\",\n            \"name\": \"Bengali, Bangladesh\"\n        },\n        \"2118\": {\n            \"code\": 2118,\n            \"id\": \"pa-PK\",\n            \"name\": \"Panjabi, Pakistan\"\n        },\n        \"2128\": {\n            \"code\": 2128,\n            \"id\": \"mn-Mong-CN\",\n            \"name\": \"Mongolian, Mongolian, China\"\n        },\n        \"2129\": {\n            \"code\": 2129,\n            \"id\": \"bo-BT\",\n            \"name\": \"Tibetan, Bhutan\"\n        },\n        \"2137\": {\n            \"code\": 2137,\n            \"id\": \"sd-PK\",\n            \"name\": \"Sindhi, Pakistan\"\n        },\n        \"2141\": {\n            \"code\": 2141,\n            \"id\": \"iu-Latn-CA\",\n            \"name\": \"Inuktitut, Latin, Canada\"\n        },\n        \"2143\": {\n            \"code\": 2143,\n            \"id\": \"tzm-Latn-DZ\",\n            \"name\": \"Central Atlas Tamazight, Latin, Algeria\"\n        },\n        \"2145\": {\n            \"code\": 2145,\n            \"id\": \"ne-IN\",\n            \"name\": \"Nepali, India\"\n        },\n        \"2155\": {\n            \"code\": 2155,\n            \"id\": \"quz-EC\",\n            \"name\": \"Cusco Quechua, Ecuador\"\n        },\n        \"2163\": {\n            \"code\": 2163,\n            \"id\": \"ti-ET\",\n            \"name\": \"Tigrinya, Ethiopia\"\n        },\n        \"3073\": {\n            \"code\": 3073,\n            \"id\": \"ar-EG\",\n            \"name\": \"Arabic, Egypt\"\n        },\n        \"3076\": {\n            \"code\": 3076,\n            \"id\": \"zh-HK\",\n            \"name\": \"Chinese, Hong Kong\"\n        },\n        \"3079\": {\n            \"code\": 3079,\n            \"id\": \"de-AT\",\n            \"name\": \"German, Austria\"\n        },\n        \"3081\": {\n            \"code\": 3081,\n            \"id\": \"en-AU\",\n            \"name\": \"English, Australia\"\n        },\n        \"3082\": {\n            \"code\": 3082,\n            \"id\": \"es-ES\",\n            \"name\": \"Spanish, Spain\"\n        },\n        \"3084\": {\n            \"code\": 3084,\n            \"id\": \"fr-CA\",\n            \"name\": \"French, Canada\"\n        },\n        \"3098\": {\n            \"code\": 3098,\n            \"id\": \"sr-Cyrl-CS\",\n            \"name\": \"Serbian, Cyrillic, Serbia and Montenegro\"\n        },\n        \"3131\": {\n            \"code\": 3131,\n            \"id\": \"se-FI\",\n            \"name\": \"Northern Sami, Finland\"\n        },\n        \"3167\": {\n            \"code\": 3167,\n            \"id\": \"tmz-MA\",\n            \"name\": \"Tamanaku, Morocco\"\n        },\n        \"3179\": {\n            \"code\": 3179,\n            \"id\": \"quz-PE\",\n            \"name\": \"Cusco Quechua, Peru\"\n        },\n        \"4097\": {\n            \"code\": 4097,\n            \"id\": \"ar-LY\",\n            \"name\": \"Arabic, Libyan Arab Jamahiriya\"\n        },\n        \"4100\": {\n            \"code\": 4100,\n            \"id\": \"zh-SG\",\n            \"name\": \"Chinese, Singapore\"\n        },\n        \"4103\": {\n            \"code\": 4103,\n            \"id\": \"de-LU\",\n            \"name\": \"German, Luxembourg\"\n        },\n        \"4105\": {\n            \"code\": 4105,\n            \"id\": \"en-CA\",\n            \"name\": \"English, Canada\"\n        },\n        \"4106\": {\n            \"code\": 4106,\n            \"id\": \"es-GT\",\n            \"name\": \"Spanish, Guatemala\"\n        },\n        \"4108\": {\n            \"code\": 4108,\n            \"id\": \"fr-CH\",\n            \"name\": \"French, Switzerland\"\n        },\n        \"4122\": {\n            \"code\": 4122,\n            \"id\": \"hr-BA\",\n            \"name\": \"Croatian, Bosnia and Herzegovina\"\n        },\n        \"4155\": {\n            \"code\": 4155,\n            \"id\": \"smj-NO\",\n            \"name\": \"Lule Sami, Norway\"\n        },\n        \"5121\": {\n            \"code\": 5121,\n            \"id\": \"ar-DZ\",\n            \"name\": \"Arabic, Algeria\"\n        },\n        \"5124\": {\n            \"code\": 5124,\n            \"id\": \"zh-MO\",\n            \"name\": \"Chinese, Macao\"\n        },\n        \"5127\": {\n            \"code\": 5127,\n            \"id\": \"de-LI\",\n            \"name\": \"German, Liechtenstein\"\n        },\n        \"5129\": {\n            \"code\": 5129,\n            \"id\": \"en-NZ\",\n            \"name\": \"English, New Zealand\"\n        },\n        \"5130\": {\n            \"code\": 5130,\n            \"id\": \"es-CR\",\n            \"name\": \"Spanish, Costa Rica\"\n        },\n        \"5132\": {\n            \"code\": 5132,\n            \"id\": \"fr-LU\",\n            \"name\": \"French, Luxembourg\"\n        },\n        \"5146\": {\n            \"code\": 5146,\n            \"id\": \"bs-Latn-BA\",\n            \"name\": \"Bosnian, Latin, Bosnia and Herzegovina\"\n        },\n        \"5179\": {\n            \"code\": 5179,\n            \"id\": \"smj-SE\",\n            \"name\": \"Lule Sami, Sweden\"\n        },\n        \"6145\": {\n            \"code\": 6145,\n            \"id\": \"ar-MA\",\n            \"name\": \"Arabic, Morocco\"\n        },\n        \"6153\": {\n            \"code\": 6153,\n            \"id\": \"en-IE\",\n            \"name\": \"English, Ireland\"\n        },\n        \"6154\": {\n            \"code\": 6154,\n            \"id\": \"es-PA\",\n            \"name\": \"Spanish, Panama\"\n        },\n        \"6156\": {\n            \"code\": 6156,\n            \"id\": \"fr-MC\",\n            \"name\": \"French, Monaco\"\n        },\n        \"6170\": {\n            \"code\": 6170,\n            \"id\": \"sr-Latn-BA\",\n            \"name\": \"Serbian, Latin, Bosnia and Herzegovina\"\n        },\n        \"6203\": {\n            \"code\": 6203,\n            \"id\": \"sma-NO\",\n            \"name\": \"Southern Sami, Norway\"\n        },\n        \"7169\": {\n            \"code\": 7169,\n            \"id\": \"ar-TN\",\n            \"name\": \"Arabic, Tunisia\"\n        },\n        \"7177\": {\n            \"code\": 7177,\n            \"id\": \"en-ZA\",\n            \"name\": \"English, South Africa\"\n        },\n        \"7178\": {\n            \"code\": 7178,\n            \"id\": \"es-DO\",\n            \"name\": \"Spanish, Dominican Republic\"\n        },\n        \"7180\": {\n            \"code\": 7180,\n            \"id\": \"fr-West\",\n            \"name\": \"French\"\n        },\n        \"7194\": {\n            \"code\": 7194,\n            \"id\": \"sr-Cyrl-BA\",\n            \"name\": \"Serbian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"7227\": {\n            \"code\": 7227,\n            \"id\": \"sma-SE\",\n            \"name\": \"Southern Sami, Sweden\"\n        },\n        \"8193\": {\n            \"code\": 8193,\n            \"id\": \"ar-OM\",\n            \"name\": \"Arabic, Oman\"\n        },\n        \"8201\": {\n            \"code\": 8201,\n            \"id\": \"en-JM\",\n            \"name\": \"English, Jamaica\"\n        },\n        \"8202\": {\n            \"code\": 8202,\n            \"id\": \"es-VE\",\n            \"name\": \"Spanish, Venezuela\"\n        },\n        \"8204\": {\n            \"code\": 8204,\n            \"id\": \"fr-RE\",\n            \"name\": \"French, Réunion\"\n        },\n        \"8218\": {\n            \"code\": 8218,\n            \"id\": \"bs-Cyrl-BA\",\n            \"name\": \"Bosnian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"8251\": {\n            \"code\": 8251,\n            \"id\": \"sms-FI\",\n            \"name\": \"Skolt Sami, Finland\"\n        },\n        \"9217\": {\n            \"code\": 9217,\n            \"id\": \"ar-YE\",\n            \"name\": \"Arabic, Yemen\"\n        },\n        \"9225\": {\n            \"code\": 9225,\n            \"id\": \"en-CB\",\n            \"name\": \"English\"\n        },\n        \"9226\": {\n            \"code\": 9226,\n            \"id\": \"es-CO\",\n            \"name\": \"Spanish, Colombia\"\n        },\n        \"9228\": {\n            \"code\": 9228,\n            \"id\": \"fr-CG\",\n            \"name\": \"French, Congo\"\n        },\n        \"9242\": {\n            \"code\": 9242,\n            \"id\": \"sr-Latn-RS\",\n            \"name\": \"Serbian, Latin, Serbia\"\n        },\n        \"9275\": {\n            \"code\": 9275,\n            \"id\": \"smn-FI\",\n            \"name\": \"Inari Sami, Finland\"\n        },\n        \"10241\": {\n            \"code\": 10241,\n            \"id\": \"ar-SY\",\n            \"name\": \"Arabic, Syrian Arab Republic\"\n        },\n        \"10249\": {\n            \"code\": 10249,\n            \"id\": \"en-BZ\",\n            \"name\": \"English, Belize\"\n        },\n        \"10250\": {\n            \"code\": 10250,\n            \"id\": \"es-PE\",\n            \"name\": \"Spanish, Peru\"\n        },\n        \"10252\": {\n            \"code\": 10252,\n            \"id\": \"fr-SN\",\n            \"name\": \"French, Senegal\"\n        },\n        \"10266\": {\n            \"code\": 10266,\n            \"id\": \"sr-Cyrl-RS\",\n            \"name\": \"Serbian, Cyrillic, Serbia\"\n        },\n        \"11265\": {\n            \"code\": 11265,\n            \"id\": \"ar-JO\",\n            \"name\": \"Arabic, Jordan\"\n        },\n        \"11273\": {\n            \"code\": 11273,\n            \"id\": \"en-TT\",\n            \"name\": \"English, Trinidad and Tobago\"\n        },\n        \"11274\": {\n            \"code\": 11274,\n            \"id\": \"es-AR\",\n            \"name\": \"Spanish, Argentina\"\n        },\n        \"11276\": {\n            \"code\": 11276,\n            \"id\": \"fr-CM\",\n            \"name\": \"French, Cameroon\"\n        },\n        \"11290\": {\n            \"code\": 11290,\n            \"id\": \"sr-Latn-ME\",\n            \"name\": \"Serbian, Latin, Montenegro\"\n        },\n        \"12289\": {\n            \"code\": 12289,\n            \"id\": \"ar-LB\",\n            \"name\": \"Arabic, Lebanon\"\n        },\n        \"12297\": {\n            \"code\": 12297,\n            \"id\": \"en-ZW\",\n            \"name\": \"English, Zimbabwe\"\n        },\n        \"12298\": {\n            \"code\": 12298,\n            \"id\": \"es-EC\",\n            \"name\": \"Spanish, Ecuador\"\n        },\n        \"12300\": {\n            \"code\": 12300,\n            \"id\": \"fr-CI\",\n            \"name\": \"French, Côte d’Ivoire\"\n        },\n        \"12314\": {\n            \"code\": 12314,\n            \"id\": \"sr-Cyrl-ME\",\n            \"name\": \"Serbian, Cyrillic, Montenegro\"\n        },\n        \"13313\": {\n            \"code\": 13313,\n            \"id\": \"ar-KW\",\n            \"name\": \"Arabic, Kuwait\"\n        },\n        \"13321\": {\n            \"code\": 13321,\n            \"id\": \"en-PH\",\n            \"name\": \"English, Philippines\"\n        },\n        \"13322\": {\n            \"code\": 13322,\n            \"id\": \"es-CL\",\n            \"name\": \"Spanish, Chile\"\n        },\n        \"13324\": {\n            \"code\": 13324,\n            \"id\": \"fr-ML\",\n            \"name\": \"French, Mali\"\n        },\n        \"14337\": {\n            \"code\": 14337,\n            \"id\": \"ar-AE\",\n            \"name\": \"Arabic, United Arab Emirates\"\n        },\n        \"14345\": {\n            \"code\": 14345,\n            \"id\": \"en-ID\",\n            \"name\": \"English, Indonesia\"\n        },\n        \"14346\": {\n            \"code\": 14346,\n            \"id\": \"es-UY\",\n            \"name\": \"Spanish, Uruguay\"\n        },\n        \"14348\": {\n            \"code\": 14348,\n            \"id\": \"fr-MA\",\n            \"name\": \"French, Morocco\"\n        },\n        \"15361\": {\n            \"code\": 15361,\n            \"id\": \"ar-BH\",\n            \"name\": \"Arabic, Bahrain\"\n        },\n        \"15369\": {\n            \"code\": 15369,\n            \"id\": \"en-HK\",\n            \"name\": \"English, Hong Kong\"\n        },\n        \"15370\": {\n            \"code\": 15370,\n            \"id\": \"es-PY\",\n            \"name\": \"Spanish, Paraguay\"\n        },\n        \"15372\": {\n            \"code\": 15372,\n            \"id\": \"fr-HT\",\n            \"name\": \"French, Haiti\"\n        },\n        \"16385\": {\n            \"code\": 16385,\n            \"id\": \"ar-QA\",\n            \"name\": \"Arabic, Qatar\"\n        },\n        \"16393\": {\n            \"code\": 16393,\n            \"id\": \"en-IN\",\n            \"name\": \"English, India\"\n        },\n        \"16394\": {\n            \"code\": 16394,\n            \"id\": \"es-BO\",\n            \"name\": \"Spanish, Bolivia\"\n        },\n        \"17417\": {\n            \"code\": 17417,\n            \"id\": \"en-MY\",\n            \"name\": \"English, Malaysia\"\n        },\n        \"17418\": {\n            \"code\": 17418,\n            \"id\": \"es-SV\",\n            \"name\": \"Spanish, El Salvador\"\n        },\n        \"18441\": {\n            \"code\": 18441,\n            \"id\": \"en-SG\",\n            \"name\": \"English, Singapore\"\n        },\n        \"18442\": {\n            \"code\": 18442,\n            \"id\": \"es-HN\",\n            \"name\": \"Spanish, Honduras\"\n        },\n        \"19466\": {\n            \"code\": 19466,\n            \"id\": \"es-NI\",\n            \"name\": \"Spanish, Nicaragua\"\n        },\n        \"20490\": {\n            \"code\": 20490,\n            \"id\": \"es-PR\",\n            \"name\": \"Spanish, Puerto Rico\"\n        },\n        \"21514\": {\n            \"code\": 21514,\n            \"id\": \"es-US\",\n            \"name\": \"Spanish, United States\"\n        },\n        \"25626\": {\n            \"code\": 25626,\n            \"id\": \"bs-Cyrl\",\n            \"name\": \"Bosnian, Cyrillic\"\n        },\n        \"26650\": {\n            \"code\": 26650,\n            \"id\": \"bs-Latn\",\n            \"name\": \"Bosnian, Latin\"\n        },\n        \"27674\": {\n            \"code\": 27674,\n            \"id\": \"sr-Cyrl\",\n            \"name\": \"Serbian, Cyrillic\"\n        },\n        \"28698\": {\n            \"code\": 28698,\n            \"id\": \"sr-Latn\",\n            \"name\": \"Serbian, Latin\"\n        },\n        \"28731\": {\n            \"code\": 28731,\n            \"id\": \"smn\",\n            \"name\": \"Inari Sami\"\n        },\n        \"29740\": {\n            \"code\": 29740,\n            \"id\": \"az-Cyrl\",\n            \"name\": \"Azerbaijani, Cyrillic\"\n        },\n        \"29755\": {\n            \"code\": 29755,\n            \"id\": \"sms\",\n            \"name\": \"Skolt Sami\"\n        },\n        \"30724\": {\n            \"code\": 30724,\n            \"id\": \"zh\",\n            \"name\": \"Chinese\"\n        },\n        \"30740\": {\n            \"code\": 30740,\n            \"id\": \"nn\",\n            \"name\": \"Norwegian Nynorsk\"\n        },\n        \"30746\": {\n            \"code\": 30746,\n            \"id\": \"bs\",\n            \"name\": \"Bosnian\"\n        },\n        \"30764\": {\n            \"code\": 30764,\n            \"id\": \"az-Latn\",\n            \"name\": \"Azerbaijani, Latin\"\n        },\n        \"30779\": {\n            \"code\": 30779,\n            \"id\": \"sma\",\n            \"name\": \"Southern Sami\"\n        },\n        \"30787\": {\n            \"code\": 30787,\n            \"id\": \"uz-Cyrl\",\n            \"name\": \"Uzbek, Cyrillic\"\n        },\n        \"30800\": {\n            \"code\": 30800,\n            \"id\": \"mn-Cyrl\",\n            \"name\": \"Mongolian, Cyrillic\"\n        },\n        \"30813\": {\n            \"code\": 30813,\n            \"id\": \"iu-Cans\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics\"\n        },\n        \"31748\": {\n            \"code\": 31748,\n            \"id\": \"zh-Hant\",\n            \"name\": \"Chinese, Han (Traditional variant)\"\n        },\n        \"31764\": {\n            \"code\": 31764,\n            \"id\": \"nb\",\n            \"name\": \"Norwegian Bokmål\"\n        },\n        \"31770\": {\n            \"code\": 31770,\n            \"id\": \"sr\",\n            \"name\": \"Serbian\"\n        },\n        \"31784\": {\n            \"code\": 31784,\n            \"id\": \"tg-Cyrl\",\n            \"name\": \"Tajik, Cyrillic\"\n        },\n        \"31790\": {\n            \"code\": 31790,\n            \"id\": \"dsb\",\n            \"name\": \"Lower Sorbian\"\n        },\n        \"31803\": {\n            \"code\": 31803,\n            \"id\": \"smj\",\n            \"name\": \"Lule Sami\"\n        },\n        \"31811\": {\n            \"code\": 31811,\n            \"id\": \"uz-Latn\",\n            \"name\": \"Uzbek, Latin\"\n        },\n        \"31824\": {\n            \"code\": 31824,\n            \"id\": \"mn-Mong\",\n            \"name\": \"Mongolian, Mongolian\"\n        },\n        \"31837\": {\n            \"code\": 31837,\n            \"id\": \"iu-Latn\",\n            \"name\": \"Inuktitut, Latin\"\n        },\n        \"31839\": {\n            \"code\": 31839,\n            \"id\": \"tzm-Latn\",\n            \"name\": \"Central Atlas Tamazight, Latin\"\n        },\n        \"31848\": {\n            \"code\": 31848,\n            \"id\": \"ha-Latn\",\n            \"name\": \"Hausa, Latin\"\n        }\n    },\n    \"byId\": {\n        \"ar\": {\n            \"code\": 1,\n            \"id\": \"ar\",\n            \"name\": \"Arabic\"\n        },\n        \"bg\": {\n            \"code\": 2,\n            \"id\": \"bg\",\n            \"name\": \"Bulgarian\"\n        },\n        \"ca\": {\n            \"code\": 3,\n            \"id\": \"ca\",\n            \"name\": \"Catalan\"\n        },\n        \"zh-Hans\": {\n            \"code\": 4,\n            \"id\": \"zh-Hans\",\n            \"name\": \"Chinese, Han (Simplified variant)\"\n        },\n        \"cs\": {\n            \"code\": 5,\n            \"id\": \"cs\",\n            \"name\": \"Czech\"\n        },\n        \"da\": {\n            \"code\": 6,\n            \"id\": \"da\",\n            \"name\": \"Danish\"\n        },\n        \"de\": {\n            \"code\": 7,\n            \"id\": \"de\",\n            \"name\": \"German\"\n        },\n        \"el\": {\n            \"code\": 8,\n            \"id\": \"el\",\n            \"name\": \"Modern Greek (1453 and later)\"\n        },\n        \"en\": {\n            \"code\": 9,\n            \"id\": \"en\",\n            \"name\": \"English\"\n        },\n        \"es\": {\n            \"code\": 10,\n            \"id\": \"es\",\n            \"name\": \"Spanish\"\n        },\n        \"fi\": {\n            \"code\": 11,\n            \"id\": \"fi\",\n            \"name\": \"Finnish\"\n        },\n        \"fr\": {\n            \"code\": 12,\n            \"id\": \"fr\",\n            \"name\": \"French\"\n        },\n        \"he\": {\n            \"code\": 13,\n            \"id\": \"he\",\n            \"name\": \"Hebrew\"\n        },\n        \"hu\": {\n            \"code\": 14,\n            \"id\": \"hu\",\n            \"name\": \"Hungarian\"\n        },\n        \"is\": {\n            \"code\": 15,\n            \"id\": \"is\",\n            \"name\": \"Icelandic\"\n        },\n        \"it\": {\n            \"code\": 16,\n            \"id\": \"it\",\n            \"name\": \"Italian\"\n        },\n        \"ja\": {\n            \"code\": 17,\n            \"id\": \"ja\",\n            \"name\": \"Japanese\"\n        },\n        \"ko\": {\n            \"code\": 18,\n            \"id\": \"ko\",\n            \"name\": \"Korean\"\n        },\n        \"nl\": {\n            \"code\": 19,\n            \"id\": \"nl\",\n            \"name\": \"Dutch\"\n        },\n        \"no\": {\n            \"code\": 20,\n            \"id\": \"no\",\n            \"name\": \"Norwegian\"\n        },\n        \"pl\": {\n            \"code\": 21,\n            \"id\": \"pl\",\n            \"name\": \"Polish\"\n        },\n        \"pt\": {\n            \"code\": 22,\n            \"id\": \"pt\",\n            \"name\": \"Portuguese\"\n        },\n        \"rm\": {\n            \"code\": 23,\n            \"id\": \"rm\",\n            \"name\": \"Romansh\"\n        },\n        \"ro\": {\n            \"code\": 24,\n            \"id\": \"ro\",\n            \"name\": \"Romanian\"\n        },\n        \"ru\": {\n            \"code\": 25,\n            \"id\": \"ru\",\n            \"name\": \"Russian\"\n        },\n        \"hr\": {\n            \"code\": 26,\n            \"id\": \"hr\",\n            \"name\": \"Croatian\"\n        },\n        \"sk\": {\n            \"code\": 27,\n            \"id\": \"sk\",\n            \"name\": \"Slovak\"\n        },\n        \"sq\": {\n            \"code\": 28,\n            \"id\": \"sq\",\n            \"name\": \"Albanian\"\n        },\n        \"sv\": {\n            \"code\": 29,\n            \"id\": \"sv\",\n            \"name\": \"Swedish\"\n        },\n        \"th\": {\n            \"code\": 30,\n            \"id\": \"th\",\n            \"name\": \"Thai\"\n        },\n        \"tr\": {\n            \"code\": 31,\n            \"id\": \"tr\",\n            \"name\": \"Turkish\"\n        },\n        \"ur\": {\n            \"code\": 32,\n            \"id\": \"ur\",\n            \"name\": \"Urdu\"\n        },\n        \"id\": {\n            \"code\": 33,\n            \"id\": \"id\",\n            \"name\": \"Indonesian\"\n        },\n        \"uk\": {\n            \"code\": 34,\n            \"id\": \"uk\",\n            \"name\": \"Ukrainian\"\n        },\n        \"be\": {\n            \"code\": 35,\n            \"id\": \"be\",\n            \"name\": \"Belarusian\"\n        },\n        \"sl\": {\n            \"code\": 36,\n            \"id\": \"sl\",\n            \"name\": \"Slovenian\"\n        },\n        \"et\": {\n            \"code\": 37,\n            \"id\": \"et\",\n            \"name\": \"Estonian\"\n        },\n        \"lv\": {\n            \"code\": 38,\n            \"id\": \"lv\",\n            \"name\": \"Latvian\"\n        },\n        \"lt\": {\n            \"code\": 39,\n            \"id\": \"lt\",\n            \"name\": \"Lithuanian\"\n        },\n        \"tg\": {\n            \"code\": 40,\n            \"id\": \"tg\",\n            \"name\": \"Tajik\"\n        },\n        \"fa\": {\n            \"code\": 41,\n            \"id\": \"fa\",\n            \"name\": \"Persian\"\n        },\n        \"vi\": {\n            \"code\": 42,\n            \"id\": \"vi\",\n            \"name\": \"Vietnamese\"\n        },\n        \"hy\": {\n            \"code\": 43,\n            \"id\": \"hy\",\n            \"name\": \"Armenian\"\n        },\n        \"az\": {\n            \"code\": 44,\n            \"id\": \"az\",\n            \"name\": \"Azerbaijani\"\n        },\n        \"eu\": {\n            \"code\": 45,\n            \"id\": \"eu\",\n            \"name\": \"Basque\"\n        },\n        \"hsb\": {\n            \"code\": 46,\n            \"id\": \"hsb\",\n            \"name\": \"Upper Sorbian\"\n        },\n        \"mk\": {\n            \"code\": 47,\n            \"id\": \"mk\",\n            \"name\": \"Macedonian\"\n        },\n        \"tn\": {\n            \"code\": 50,\n            \"id\": \"tn\",\n            \"name\": \"Tswana\"\n        },\n        \"xh\": {\n            \"code\": 52,\n            \"id\": \"xh\",\n            \"name\": \"Xhosa\"\n        },\n        \"zu\": {\n            \"code\": 53,\n            \"id\": \"zu\",\n            \"name\": \"Zulu\"\n        },\n        \"af\": {\n            \"code\": 54,\n            \"id\": \"af\",\n            \"name\": \"Afrikaans\"\n        },\n        \"ka\": {\n            \"code\": 55,\n            \"id\": \"ka\",\n            \"name\": \"Georgian\"\n        },\n        \"fo\": {\n            \"code\": 56,\n            \"id\": \"fo\",\n            \"name\": \"Faroese\"\n        },\n        \"hi\": {\n            \"code\": 57,\n            \"id\": \"hi\",\n            \"name\": \"Hindi\"\n        },\n        \"mt\": {\n            \"code\": 58,\n            \"id\": \"mt\",\n            \"name\": \"Maltese\"\n        },\n        \"se\": {\n            \"code\": 59,\n            \"id\": \"se\",\n            \"name\": \"Northern Sami\"\n        },\n        \"ga\": {\n            \"code\": 60,\n            \"id\": \"ga\",\n            \"name\": \"Irish\"\n        },\n        \"ms\": {\n            \"code\": 62,\n            \"id\": \"ms\",\n            \"name\": \"Malay (macrolanguage)\"\n        },\n        \"kk\": {\n            \"code\": 63,\n            \"id\": \"kk\",\n            \"name\": \"Kazakh\"\n        },\n        \"ky\": {\n            \"code\": 64,\n            \"id\": \"ky\",\n            \"name\": \"Kirghiz\"\n        },\n        \"sw\": {\n            \"code\": 65,\n            \"id\": \"sw\",\n            \"name\": \"Swahili (macrolanguage)\"\n        },\n        \"tk\": {\n            \"code\": 66,\n            \"id\": \"tk\",\n            \"name\": \"Turkmen\"\n        },\n        \"uz\": {\n            \"code\": 67,\n            \"id\": \"uz\",\n            \"name\": \"Uzbek\"\n        },\n        \"tt\": {\n            \"code\": 68,\n            \"id\": \"tt\",\n            \"name\": \"Tatar\"\n        },\n        \"bn\": {\n            \"code\": 69,\n            \"id\": \"bn\",\n            \"name\": \"Bengali\"\n        },\n        \"pa\": {\n            \"code\": 70,\n            \"id\": \"pa\",\n            \"name\": \"Panjabi\"\n        },\n        \"gu\": {\n            \"code\": 71,\n            \"id\": \"gu\",\n            \"name\": \"Gujarati\"\n        },\n        \"or\": {\n            \"code\": 72,\n            \"id\": \"or\",\n            \"name\": \"Oriya\"\n        },\n        \"ta\": {\n            \"code\": 73,\n            \"id\": \"ta\",\n            \"name\": \"Tamil\"\n        },\n        \"te\": {\n            \"code\": 74,\n            \"id\": \"te\",\n            \"name\": \"Telugu\"\n        },\n        \"kn\": {\n            \"code\": 75,\n            \"id\": \"kn\",\n            \"name\": \"Kannada\"\n        },\n        \"ml\": {\n            \"code\": 76,\n            \"id\": \"ml\",\n            \"name\": \"Malayalam\"\n        },\n        \"as\": {\n            \"code\": 77,\n            \"id\": \"as\",\n            \"name\": \"Assamese\"\n        },\n        \"mr\": {\n            \"code\": 78,\n            \"id\": \"mr\",\n            \"name\": \"Marathi\"\n        },\n        \"sa\": {\n            \"code\": 79,\n            \"id\": \"sa\",\n            \"name\": \"Sanskrit\"\n        },\n        \"mn\": {\n            \"code\": 80,\n            \"id\": \"mn\",\n            \"name\": \"Mongolian\"\n        },\n        \"bo\": {\n            \"code\": 81,\n            \"id\": \"bo\",\n            \"name\": \"Tibetan\"\n        },\n        \"cy\": {\n            \"code\": 82,\n            \"id\": \"cy\",\n            \"name\": \"Welsh\"\n        },\n        \"km\": {\n            \"code\": 83,\n            \"id\": \"km\",\n            \"name\": \"Central Khmer\"\n        },\n        \"lo\": {\n            \"code\": 84,\n            \"id\": \"lo\",\n            \"name\": \"Lao\"\n        },\n        \"gl\": {\n            \"code\": 86,\n            \"id\": \"gl\",\n            \"name\": \"Galician\"\n        },\n        \"kok\": {\n            \"code\": 87,\n            \"id\": \"kok\",\n            \"name\": \"Konkani (macrolanguage)\"\n        },\n        \"syr\": {\n            \"code\": 90,\n            \"id\": \"syr\",\n            \"name\": \"Syriac\"\n        },\n        \"si\": {\n            \"code\": 91,\n            \"id\": \"si\",\n            \"name\": \"Sinhala\"\n        },\n        \"iu\": {\n            \"code\": 93,\n            \"id\": \"iu\",\n            \"name\": \"Inuktitut\"\n        },\n        \"am\": {\n            \"code\": 94,\n            \"id\": \"am\",\n            \"name\": \"Amharic\"\n        },\n        \"tzm\": {\n            \"code\": 95,\n            \"id\": \"tzm\",\n            \"name\": \"Central Atlas Tamazight\"\n        },\n        \"ne\": {\n            \"code\": 97,\n            \"id\": \"ne\",\n            \"name\": \"Nepali\"\n        },\n        \"fy\": {\n            \"code\": 98,\n            \"id\": \"fy\",\n            \"name\": \"Western Frisian\"\n        },\n        \"ps\": {\n            \"code\": 99,\n            \"id\": \"ps\",\n            \"name\": \"Pushto\"\n        },\n        \"fil\": {\n            \"code\": 100,\n            \"id\": \"fil\",\n            \"name\": \"Filipino\"\n        },\n        \"dv\": {\n            \"code\": 101,\n            \"id\": \"dv\",\n            \"name\": \"Dhivehi\"\n        },\n        \"ha\": {\n            \"code\": 104,\n            \"id\": \"ha\",\n            \"name\": \"Hausa\"\n        },\n        \"yo\": {\n            \"code\": 106,\n            \"id\": \"yo\",\n            \"name\": \"Yoruba\"\n        },\n        \"quz\": {\n            \"code\": 107,\n            \"id\": \"quz\",\n            \"name\": \"Cusco Quechua\"\n        },\n        \"nso\": {\n            \"code\": 108,\n            \"id\": \"nso\",\n            \"name\": \"Pedi\"\n        },\n        \"ba\": {\n            \"code\": 109,\n            \"id\": \"ba\",\n            \"name\": \"Bashkir\"\n        },\n        \"lb\": {\n            \"code\": 110,\n            \"id\": \"lb\",\n            \"name\": \"Luxembourgish\"\n        },\n        \"kl\": {\n            \"code\": 111,\n            \"id\": \"kl\",\n            \"name\": \"Kalaallisut\"\n        },\n        \"ig\": {\n            \"code\": 112,\n            \"id\": \"ig\",\n            \"name\": \"Igbo\"\n        },\n        \"ii\": {\n            \"code\": 120,\n            \"id\": \"ii\",\n            \"name\": \"Sichuan Yi\"\n        },\n        \"arn\": {\n            \"code\": 122,\n            \"id\": \"arn\",\n            \"name\": \"Mapudungun\"\n        },\n        \"moh\": {\n            \"code\": 124,\n            \"id\": \"moh\",\n            \"name\": \"Mohawk\"\n        },\n        \"br\": {\n            \"code\": 126,\n            \"id\": \"br\",\n            \"name\": \"Breton\"\n        },\n        \"ug\": {\n            \"code\": 128,\n            \"id\": \"ug\",\n            \"name\": \"Uighur\"\n        },\n        \"mi\": {\n            \"code\": 129,\n            \"id\": \"mi\",\n            \"name\": \"Maori\"\n        },\n        \"oc\": {\n            \"code\": 130,\n            \"id\": \"oc\",\n            \"name\": \"Occitan (post 1500)\"\n        },\n        \"co\": {\n            \"code\": 131,\n            \"id\": \"co\",\n            \"name\": \"Corsican\"\n        },\n        \"gsw\": {\n            \"code\": 132,\n            \"id\": \"gsw\",\n            \"name\": \"Swiss German\"\n        },\n        \"sah\": {\n            \"code\": 133,\n            \"id\": \"sah\",\n            \"name\": \"Yakut\"\n        },\n        \"qut\": {\n            \"code\": 134,\n            \"id\": \"qut\",\n            \"name\": \"Guatemala\"\n        },\n        \"rw\": {\n            \"code\": 135,\n            \"id\": \"rw\",\n            \"name\": \"Kinyarwanda\"\n        },\n        \"wo\": {\n            \"code\": 136,\n            \"id\": \"wo\",\n            \"name\": \"Wolof\"\n        },\n        \"prs\": {\n            \"code\": 140,\n            \"id\": \"prs\",\n            \"name\": \"Dari\"\n        },\n        \"gd\": {\n            \"code\": 145,\n            \"id\": \"gd\",\n            \"name\": \"Scottish Gaelic\"\n        },\n        \"ar-SA\": {\n            \"code\": 1025,\n            \"id\": \"ar-SA\",\n            \"name\": \"Arabic, Saudi Arabia\"\n        },\n        \"bg-BG\": {\n            \"code\": 1026,\n            \"id\": \"bg-BG\",\n            \"name\": \"Bulgarian, Bulgaria\"\n        },\n        \"ca-ES\": {\n            \"code\": 1027,\n            \"id\": \"ca-ES\",\n            \"name\": \"Catalan, Spain\"\n        },\n        \"zh-TW\": {\n            \"code\": 1028,\n            \"id\": \"zh-TW\",\n            \"name\": \"Chinese, Taiwan, Province of China\"\n        },\n        \"cs-CZ\": {\n            \"code\": 1029,\n            \"id\": \"cs-CZ\",\n            \"name\": \"Czech, Czech Republic\"\n        },\n        \"da-DK\": {\n            \"code\": 1030,\n            \"id\": \"da-DK\",\n            \"name\": \"Danish, Denmark\"\n        },\n        \"de-DE\": {\n            \"code\": 1031,\n            \"id\": \"de-DE\",\n            \"name\": \"German, Germany\"\n        },\n        \"el-GR\": {\n            \"code\": 1032,\n            \"id\": \"el-GR\",\n            \"name\": \"Modern Greek (1453-), Greece\"\n        },\n        \"en-US\": {\n            \"code\": 1033,\n            \"id\": \"en-US\",\n            \"name\": \"English, United States\"\n        },\n        \"es-ES_tradnl\": {\n            \"code\": 1034,\n            \"id\": \"es-ES_tradnl\",\n            \"name\": \"Spanish\"\n        },\n        \"fi-FI\": {\n            \"code\": 1035,\n            \"id\": \"fi-FI\",\n            \"name\": \"Finnish, Finland\"\n        },\n        \"fr-FR\": {\n            \"code\": 1036,\n            \"id\": \"fr-FR\",\n            \"name\": \"French, France\"\n        },\n        \"he-IL\": {\n            \"code\": 1037,\n            \"id\": \"he-IL\",\n            \"name\": \"Hebrew, Israel\"\n        },\n        \"hu-HU\": {\n            \"code\": 1038,\n            \"id\": \"hu-HU\",\n            \"name\": \"Hungarian, Hungary\"\n        },\n        \"is-IS\": {\n            \"code\": 1039,\n            \"id\": \"is-IS\",\n            \"name\": \"Icelandic, Iceland\"\n        },\n        \"it-IT\": {\n            \"code\": 1040,\n            \"id\": \"it-IT\",\n            \"name\": \"Italian, Italy\"\n        },\n        \"ja-JP\": {\n            \"code\": 1041,\n            \"id\": \"ja-JP\",\n            \"name\": \"Japanese, Japan\"\n        },\n        \"ko-KR\": {\n            \"code\": 1042,\n            \"id\": \"ko-KR\",\n            \"name\": \"Korean, Republic of Korea\"\n        },\n        \"nl-NL\": {\n            \"code\": 1043,\n            \"id\": \"nl-NL\",\n            \"name\": \"Dutch, Netherlands\"\n        },\n        \"nb-NO\": {\n            \"code\": 1044,\n            \"id\": \"nb-NO\",\n            \"name\": \"Norwegian Bokmål, Norway\"\n        },\n        \"pl-PL\": {\n            \"code\": 1045,\n            \"id\": \"pl-PL\",\n            \"name\": \"Polish, Poland\"\n        },\n        \"pt-BR\": {\n            \"code\": 1046,\n            \"id\": \"pt-BR\",\n            \"name\": \"Portuguese, Brazil\"\n        },\n        \"rm-CH\": {\n            \"code\": 1047,\n            \"id\": \"rm-CH\",\n            \"name\": \"Romansh, Switzerland\"\n        },\n        \"ro-RO\": {\n            \"code\": 1048,\n            \"id\": \"ro-RO\",\n            \"name\": \"Romanian, Romania\"\n        },\n        \"ru-RU\": {\n            \"code\": 1049,\n            \"id\": \"ru-RU\",\n            \"name\": \"Russian, Russian Federation\"\n        },\n        \"hr-HR\": {\n            \"code\": 1050,\n            \"id\": \"hr-HR\",\n            \"name\": \"Croatian, Croatia\"\n        },\n        \"sk-SK\": {\n            \"code\": 1051,\n            \"id\": \"sk-SK\",\n            \"name\": \"Slovak, Slovakia\"\n        },\n        \"sq-AL\": {\n            \"code\": 1052,\n            \"id\": \"sq-AL\",\n            \"name\": \"Albanian, Albania\"\n        },\n        \"sv-SE\": {\n            \"code\": 1053,\n            \"id\": \"sv-SE\",\n            \"name\": \"Swedish, Sweden\"\n        },\n        \"th-TH\": {\n            \"code\": 1054,\n            \"id\": \"th-TH\",\n            \"name\": \"Thai, Thailand\"\n        },\n        \"tr-TR\": {\n            \"code\": 1055,\n            \"id\": \"tr-TR\",\n            \"name\": \"Turkish, Turkey\"\n        },\n        \"ur-PK\": {\n            \"code\": 1056,\n            \"id\": \"ur-PK\",\n            \"name\": \"Urdu, Pakistan\"\n        },\n        \"id-ID\": {\n            \"code\": 1057,\n            \"id\": \"id-ID\",\n            \"name\": \"Indonesian, Indonesia\"\n        },\n        \"uk-UA\": {\n            \"code\": 1058,\n            \"id\": \"uk-UA\",\n            \"name\": \"Ukrainian, Ukraine\"\n        },\n        \"be-BY\": {\n            \"code\": 1059,\n            \"id\": \"be-BY\",\n            \"name\": \"Belarusian, Belarus\"\n        },\n        \"sl-SI\": {\n            \"code\": 1060,\n            \"id\": \"sl-SI\",\n            \"name\": \"Slovenian, Slovenia\"\n        },\n        \"et-EE\": {\n            \"code\": 1061,\n            \"id\": \"et-EE\",\n            \"name\": \"Estonian, Estonia\"\n        },\n        \"lv-LV\": {\n            \"code\": 1062,\n            \"id\": \"lv-LV\",\n            \"name\": \"Latvian, Latvia\"\n        },\n        \"lt-LT\": {\n            \"code\": 1063,\n            \"id\": \"lt-LT\",\n            \"name\": \"Lithuanian, Lithuania\"\n        },\n        \"tg-Cyrl-TJ\": {\n            \"code\": 1064,\n            \"id\": \"tg-Cyrl-TJ\",\n            \"name\": \"Tajik, Cyrillic, Tajikistan\"\n        },\n        \"fa-IR\": {\n            \"code\": 1065,\n            \"id\": \"fa-IR\",\n            \"name\": \"Persian, Islamic Republic of Iran\"\n        },\n        \"vi-VN\": {\n            \"code\": 1066,\n            \"id\": \"vi-VN\",\n            \"name\": \"Vietnamese, Viet Nam\"\n        },\n        \"hy-AM\": {\n            \"code\": 1067,\n            \"id\": \"hy-AM\",\n            \"name\": \"Armenian, Armenia\"\n        },\n        \"az-Latn-AZ\": {\n            \"code\": 1068,\n            \"id\": \"az-Latn-AZ\",\n            \"name\": \"Azerbaijani, Latin, Azerbaijan\"\n        },\n        \"eu-ES\": {\n            \"code\": 1069,\n            \"id\": \"eu-ES\",\n            \"name\": \"Basque, Spain\"\n        },\n        \"wen-DE\": {\n            \"code\": 1070,\n            \"id\": \"wen-DE\",\n            \"name\": \"Sorbian languages, Germany\"\n        },\n        \"mk-MK\": {\n            \"code\": 1071,\n            \"id\": \"mk-MK\",\n            \"name\": \"Macedonian, The Former Yugoslav Republic of Macedonia\"\n        },\n        \"st-ZA\": {\n            \"code\": 1072,\n            \"id\": \"st-ZA\",\n            \"name\": \"Southern Sotho, South Africa\"\n        },\n        \"ts-ZA\": {\n            \"code\": 1073,\n            \"id\": \"ts-ZA\",\n            \"name\": \"Tsonga, South Africa\"\n        },\n        \"tn-ZA\": {\n            \"code\": 1074,\n            \"id\": \"tn-ZA\",\n            \"name\": \"Tswana, South Africa\"\n        },\n        \"ven-ZA\": {\n            \"code\": 1075,\n            \"id\": \"ven-ZA\",\n            \"name\": \"South Africa\"\n        },\n        \"xh-ZA\": {\n            \"code\": 1076,\n            \"id\": \"xh-ZA\",\n            \"name\": \"Xhosa, South Africa\"\n        },\n        \"zu-ZA\": {\n            \"code\": 1077,\n            \"id\": \"zu-ZA\",\n            \"name\": \"Zulu, South Africa\"\n        },\n        \"af-ZA\": {\n            \"code\": 1078,\n            \"id\": \"af-ZA\",\n            \"name\": \"Afrikaans, South Africa\"\n        },\n        \"ka-GE\": {\n            \"code\": 1079,\n            \"id\": \"ka-GE\",\n            \"name\": \"Georgian, Georgia\"\n        },\n        \"fo-FO\": {\n            \"code\": 1080,\n            \"id\": \"fo-FO\",\n            \"name\": \"Faroese, Faroe Islands\"\n        },\n        \"hi-IN\": {\n            \"code\": 1081,\n            \"id\": \"hi-IN\",\n            \"name\": \"Hindi, India\"\n        },\n        \"mt-MT\": {\n            \"code\": 1082,\n            \"id\": \"mt-MT\",\n            \"name\": \"Maltese, Malta\"\n        },\n        \"se-NO\": {\n            \"code\": 1083,\n            \"id\": \"se-NO\",\n            \"name\": \"Northern Sami, Norway\"\n        },\n        \"ms-MY\": {\n            \"code\": 1086,\n            \"id\": \"ms-MY\",\n            \"name\": \"Malay (macrolanguage), Malaysia\"\n        },\n        \"kk-KZ\": {\n            \"code\": 1087,\n            \"id\": \"kk-KZ\",\n            \"name\": \"Kazakh, Kazakhstan\"\n        },\n        \"ky-KG\": {\n            \"code\": 1088,\n            \"id\": \"ky-KG\",\n            \"name\": \"Kirghiz, Kyrgyzstan\"\n        },\n        \"sw-KE\": {\n            \"code\": 1089,\n            \"id\": \"sw-KE\",\n            \"name\": \"Swahili (macrolanguage), Kenya\"\n        },\n        \"tk-TM\": {\n            \"code\": 1090,\n            \"id\": \"tk-TM\",\n            \"name\": \"Turkmen, Turkmenistan\"\n        },\n        \"uz-Latn-UZ\": {\n            \"code\": 1091,\n            \"id\": \"uz-Latn-UZ\",\n            \"name\": \"Uzbek, Latin, Uzbekistan\"\n        },\n        \"tt-RU\": {\n            \"code\": 1092,\n            \"id\": \"tt-RU\",\n            \"name\": \"Tatar, Russian Federation\"\n        },\n        \"bn-IN\": {\n            \"code\": 1093,\n            \"id\": \"bn-IN\",\n            \"name\": \"Bengali, India\"\n        },\n        \"pa-IN\": {\n            \"code\": 1094,\n            \"id\": \"pa-IN\",\n            \"name\": \"Panjabi, India\"\n        },\n        \"gu-IN\": {\n            \"code\": 1095,\n            \"id\": \"gu-IN\",\n            \"name\": \"Gujarati, India\"\n        },\n        \"or-IN\": {\n            \"code\": 1096,\n            \"id\": \"or-IN\",\n            \"name\": \"Oriya, India\"\n        },\n        \"ta-IN\": {\n            \"code\": 1097,\n            \"id\": \"ta-IN\",\n            \"name\": \"Tamil, India\"\n        },\n        \"te-IN\": {\n            \"code\": 1098,\n            \"id\": \"te-IN\",\n            \"name\": \"Telugu, India\"\n        },\n        \"kn-IN\": {\n            \"code\": 1099,\n            \"id\": \"kn-IN\",\n            \"name\": \"Kannada, India\"\n        },\n        \"ml-IN\": {\n            \"code\": 1100,\n            \"id\": \"ml-IN\",\n            \"name\": \"Malayalam, India\"\n        },\n        \"as-IN\": {\n            \"code\": 1101,\n            \"id\": \"as-IN\",\n            \"name\": \"Assamese, India\"\n        },\n        \"mr-IN\": {\n            \"code\": 1102,\n            \"id\": \"mr-IN\",\n            \"name\": \"Marathi, India\"\n        },\n        \"sa-IN\": {\n            \"code\": 1103,\n            \"id\": \"sa-IN\",\n            \"name\": \"Sanskrit, India\"\n        },\n        \"mn-MN\": {\n            \"code\": 1104,\n            \"id\": \"mn-MN\",\n            \"name\": \"Mongolian, Mongolia\"\n        },\n        \"bo-CN\": {\n            \"code\": 1105,\n            \"id\": \"bo-CN\",\n            \"name\": \"Tibetan, China\"\n        },\n        \"cy-GB\": {\n            \"code\": 1106,\n            \"id\": \"cy-GB\",\n            \"name\": \"Welsh, United Kingdom\"\n        },\n        \"km-KH\": {\n            \"code\": 1107,\n            \"id\": \"km-KH\",\n            \"name\": \"Central Khmer, Cambodia\"\n        },\n        \"lo-LA\": {\n            \"code\": 1108,\n            \"id\": \"lo-LA\",\n            \"name\": \"Lao, Lao People’s Democratic Republic\"\n        },\n        \"my-MM\": {\n            \"code\": 1109,\n            \"id\": \"my-MM\",\n            \"name\": \"Burmese, Myanmar\"\n        },\n        \"gl-ES\": {\n            \"code\": 1110,\n            \"id\": \"gl-ES\",\n            \"name\": \"Galician, Spain\"\n        },\n        \"kok-IN\": {\n            \"code\": 1111,\n            \"id\": \"kok-IN\",\n            \"name\": \"Konkani (macrolanguage), India\"\n        },\n        \"mni\": {\n            \"code\": 1112,\n            \"id\": \"mni\",\n            \"name\": \"Manipuri\"\n        },\n        \"sd-IN\": {\n            \"code\": 1113,\n            \"id\": \"sd-IN\",\n            \"name\": \"Sindhi, India\"\n        },\n        \"syr-SY\": {\n            \"code\": 1114,\n            \"id\": \"syr-SY\",\n            \"name\": \"Syriac, Syrian Arab Republic\"\n        },\n        \"si-LK\": {\n            \"code\": 1115,\n            \"id\": \"si-LK\",\n            \"name\": \"Sinhala, Sri Lanka\"\n        },\n        \"chr-US\": {\n            \"code\": 1116,\n            \"id\": \"chr-US\",\n            \"name\": \"Cherokee, United States\"\n        },\n        \"iu-Cans-CA\": {\n            \"code\": 1117,\n            \"id\": \"iu-Cans-CA\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics, Canada\"\n        },\n        \"am-ET\": {\n            \"code\": 1118,\n            \"id\": \"am-ET\",\n            \"name\": \"Amharic, Ethiopia\"\n        },\n        \"tmz\": {\n            \"code\": 1119,\n            \"id\": \"tmz\",\n            \"name\": \"Tamanaku\"\n        },\n        \"ne-NP\": {\n            \"code\": 1121,\n            \"id\": \"ne-NP\",\n            \"name\": \"Nepali, Nepal\"\n        },\n        \"fy-NL\": {\n            \"code\": 1122,\n            \"id\": \"fy-NL\",\n            \"name\": \"Western Frisian, Netherlands\"\n        },\n        \"ps-AF\": {\n            \"code\": 1123,\n            \"id\": \"ps-AF\",\n            \"name\": \"Pushto, Afghanistan\"\n        },\n        \"fil-PH\": {\n            \"code\": 1124,\n            \"id\": \"fil-PH\",\n            \"name\": \"Filipino, Philippines\"\n        },\n        \"dv-MV\": {\n            \"code\": 1125,\n            \"id\": \"dv-MV\",\n            \"name\": \"Dhivehi, Maldives\"\n        },\n        \"bin-NG\": {\n            \"code\": 1126,\n            \"id\": \"bin-NG\",\n            \"name\": \"Bini, Nigeria\"\n        },\n        \"fuv-NG\": {\n            \"code\": 1127,\n            \"id\": \"fuv-NG\",\n            \"name\": \"Nigerian Fulfulde, Nigeria\"\n        },\n        \"ha-Latn-NG\": {\n            \"code\": 1128,\n            \"id\": \"ha-Latn-NG\",\n            \"name\": \"Hausa, Latin, Nigeria\"\n        },\n        \"ibb-NG\": {\n            \"code\": 1129,\n            \"id\": \"ibb-NG\",\n            \"name\": \"Ibibio, Nigeria\"\n        },\n        \"yo-NG\": {\n            \"code\": 1130,\n            \"id\": \"yo-NG\",\n            \"name\": \"Yoruba, Nigeria\"\n        },\n        \"quz-BO\": {\n            \"code\": 1131,\n            \"id\": \"quz-BO\",\n            \"name\": \"Cusco Quechua, Bolivia\"\n        },\n        \"nso-ZA\": {\n            \"code\": 1132,\n            \"id\": \"nso-ZA\",\n            \"name\": \"Pedi, South Africa\"\n        },\n        \"ba-RU\": {\n            \"code\": 1133,\n            \"id\": \"ba-RU\",\n            \"name\": \"Bashkir, Russian Federation\"\n        },\n        \"lb-LU\": {\n            \"code\": 1134,\n            \"id\": \"lb-LU\",\n            \"name\": \"Luxembourgish, Luxembourg\"\n        },\n        \"kl-GL\": {\n            \"code\": 1135,\n            \"id\": \"kl-GL\",\n            \"name\": \"Kalaallisut, Greenland\"\n        },\n        \"ig-NG\": {\n            \"code\": 1136,\n            \"id\": \"ig-NG\",\n            \"name\": \"Igbo, Nigeria\"\n        },\n        \"kr-NG\": {\n            \"code\": 1137,\n            \"id\": \"kr-NG\",\n            \"name\": \"Kanuri, Nigeria\"\n        },\n        \"gaz-ET\": {\n            \"code\": 1138,\n            \"id\": \"gaz-ET\",\n            \"name\": \"West Central Oromo, Ethiopia\"\n        },\n        \"ti-ER\": {\n            \"code\": 1139,\n            \"id\": \"ti-ER\",\n            \"name\": \"Tigrinya, Eritrea\"\n        },\n        \"gn-PY\": {\n            \"code\": 1140,\n            \"id\": \"gn-PY\",\n            \"name\": \"Guarani, Paraguay\"\n        },\n        \"haw-US\": {\n            \"code\": 1141,\n            \"id\": \"haw-US\",\n            \"name\": \"Hawaiian, United States\"\n        },\n        \"so-SO\": {\n            \"code\": 1143,\n            \"id\": \"so-SO\",\n            \"name\": \"Somali, Somalia\"\n        },\n        \"ii-CN\": {\n            \"code\": 1144,\n            \"id\": \"ii-CN\",\n            \"name\": \"Sichuan Yi, China\"\n        },\n        \"pap-AN\": {\n            \"code\": 1145,\n            \"id\": \"pap-AN\",\n            \"name\": \"Papiamento, Netherlands Antilles\"\n        },\n        \"arn-CL\": {\n            \"code\": 1146,\n            \"id\": \"arn-CL\",\n            \"name\": \"Mapudungun, Chile\"\n        },\n        \"moh-CA\": {\n            \"code\": 1148,\n            \"id\": \"moh-CA\",\n            \"name\": \"Mohawk, Canada\"\n        },\n        \"br-FR\": {\n            \"code\": 1150,\n            \"id\": \"br-FR\",\n            \"name\": \"Breton, France\"\n        },\n        \"ug-CN\": {\n            \"code\": 1152,\n            \"id\": \"ug-CN\",\n            \"name\": \"Uighur, China\"\n        },\n        \"mi-NZ\": {\n            \"code\": 1153,\n            \"id\": \"mi-NZ\",\n            \"name\": \"Maori, New Zealand\"\n        },\n        \"oc-FR\": {\n            \"code\": 1154,\n            \"id\": \"oc-FR\",\n            \"name\": \"Occitan (post 1500), France\"\n        },\n        \"co-FR\": {\n            \"code\": 1155,\n            \"id\": \"co-FR\",\n            \"name\": \"Corsican, France\"\n        },\n        \"gsw-FR\": {\n            \"code\": 1156,\n            \"id\": \"gsw-FR\",\n            \"name\": \"Swiss German, France\"\n        },\n        \"sah-RU\": {\n            \"code\": 1157,\n            \"id\": \"sah-RU\",\n            \"name\": \"Yakut, Russian Federation\"\n        },\n        \"qut-GT\": {\n            \"code\": 1158,\n            \"id\": \"qut-GT\",\n            \"name\": \"Guatemala\"\n        },\n        \"rw-RW\": {\n            \"code\": 1159,\n            \"id\": \"rw-RW\",\n            \"name\": \"Kinyarwanda, Rwanda\"\n        },\n        \"wo-SN\": {\n            \"code\": 1160,\n            \"id\": \"wo-SN\",\n            \"name\": \"Wolof, Senegal\"\n        },\n        \"prs-AF\": {\n            \"code\": 1164,\n            \"id\": \"prs-AF\",\n            \"name\": \"Dari, Afghanistan\"\n        },\n        \"plt-MG\": {\n            \"code\": 1165,\n            \"id\": \"plt-MG\",\n            \"name\": \"Plateau Malagasy, Madagascar\"\n        },\n        \"gd-GB\": {\n            \"code\": 1169,\n            \"id\": \"gd-GB\",\n            \"name\": \"Scottish Gaelic, United Kingdom\"\n        },\n        \"ar-IQ\": {\n            \"code\": 2049,\n            \"id\": \"ar-IQ\",\n            \"name\": \"Arabic, Iraq\"\n        },\n        \"zh-CN\": {\n            \"code\": 2052,\n            \"id\": \"zh-CN\",\n            \"name\": \"Chinese, China\"\n        },\n        \"de-CH\": {\n            \"code\": 2055,\n            \"id\": \"de-CH\",\n            \"name\": \"German, Switzerland\"\n        },\n        \"en-GB\": {\n            \"code\": 2057,\n            \"id\": \"en-GB\",\n            \"name\": \"English, United Kingdom\"\n        },\n        \"es-MX\": {\n            \"code\": 2058,\n            \"id\": \"es-MX\",\n            \"name\": \"Spanish, Mexico\"\n        },\n        \"fr-BE\": {\n            \"code\": 2060,\n            \"id\": \"fr-BE\",\n            \"name\": \"French, Belgium\"\n        },\n        \"it-CH\": {\n            \"code\": 2064,\n            \"id\": \"it-CH\",\n            \"name\": \"Italian, Switzerland\"\n        },\n        \"nl-BE\": {\n            \"code\": 2067,\n            \"id\": \"nl-BE\",\n            \"name\": \"Dutch, Belgium\"\n        },\n        \"nn-NO\": {\n            \"code\": 2068,\n            \"id\": \"nn-NO\",\n            \"name\": \"Norwegian Nynorsk, Norway\"\n        },\n        \"pt-PT\": {\n            \"code\": 2070,\n            \"id\": \"pt-PT\",\n            \"name\": \"Portuguese, Portugal\"\n        },\n        \"ro-MO\": {\n            \"code\": 2072,\n            \"id\": \"ro-MO\",\n            \"name\": \"Romanian, Macao\"\n        },\n        \"ru-MO\": {\n            \"code\": 2073,\n            \"id\": \"ru-MO\",\n            \"name\": \"Russian, Macao\"\n        },\n        \"sr-Latn-CS\": {\n            \"code\": 2074,\n            \"id\": \"sr-Latn-CS\",\n            \"name\": \"Serbian, Latin, Serbia and Montenegro\"\n        },\n        \"sv-FI\": {\n            \"code\": 2077,\n            \"id\": \"sv-FI\",\n            \"name\": \"Swedish, Finland\"\n        },\n        \"ur-IN\": {\n            \"code\": 2080,\n            \"id\": \"ur-IN\",\n            \"name\": \"Urdu, India\"\n        },\n        \"az-Cyrl-AZ\": {\n            \"code\": 2092,\n            \"id\": \"az-Cyrl-AZ\",\n            \"name\": \"Azerbaijani, Cyrillic, Azerbaijan\"\n        },\n        \"dsb-DE\": {\n            \"code\": 2094,\n            \"id\": \"dsb-DE\",\n            \"name\": \"Lower Sorbian, Germany\"\n        },\n        \"se-SE\": {\n            \"code\": 2107,\n            \"id\": \"se-SE\",\n            \"name\": \"Northern Sami, Sweden\"\n        },\n        \"ga-IE\": {\n            \"code\": 2108,\n            \"id\": \"ga-IE\",\n            \"name\": \"Irish, Ireland\"\n        },\n        \"ms-BN\": {\n            \"code\": 2110,\n            \"id\": \"ms-BN\",\n            \"name\": \"Malay (macrolanguage), Brunei Darussalam\"\n        },\n        \"uz-Cyrl-UZ\": {\n            \"code\": 2115,\n            \"id\": \"uz-Cyrl-UZ\",\n            \"name\": \"Uzbek, Cyrillic, Uzbekistan\"\n        },\n        \"bn-BD\": {\n            \"code\": 2117,\n            \"id\": \"bn-BD\",\n            \"name\": \"Bengali, Bangladesh\"\n        },\n        \"pa-PK\": {\n            \"code\": 2118,\n            \"id\": \"pa-PK\",\n            \"name\": \"Panjabi, Pakistan\"\n        },\n        \"mn-Mong-CN\": {\n            \"code\": 2128,\n            \"id\": \"mn-Mong-CN\",\n            \"name\": \"Mongolian, Mongolian, China\"\n        },\n        \"bo-BT\": {\n            \"code\": 2129,\n            \"id\": \"bo-BT\",\n            \"name\": \"Tibetan, Bhutan\"\n        },\n        \"sd-PK\": {\n            \"code\": 2137,\n            \"id\": \"sd-PK\",\n            \"name\": \"Sindhi, Pakistan\"\n        },\n        \"iu-Latn-CA\": {\n            \"code\": 2141,\n            \"id\": \"iu-Latn-CA\",\n            \"name\": \"Inuktitut, Latin, Canada\"\n        },\n        \"tzm-Latn-DZ\": {\n            \"code\": 2143,\n            \"id\": \"tzm-Latn-DZ\",\n            \"name\": \"Central Atlas Tamazight, Latin, Algeria\"\n        },\n        \"ne-IN\": {\n            \"code\": 2145,\n            \"id\": \"ne-IN\",\n            \"name\": \"Nepali, India\"\n        },\n        \"quz-EC\": {\n            \"code\": 2155,\n            \"id\": \"quz-EC\",\n            \"name\": \"Cusco Quechua, Ecuador\"\n        },\n        \"ti-ET\": {\n            \"code\": 2163,\n            \"id\": \"ti-ET\",\n            \"name\": \"Tigrinya, Ethiopia\"\n        },\n        \"ar-EG\": {\n            \"code\": 3073,\n            \"id\": \"ar-EG\",\n            \"name\": \"Arabic, Egypt\"\n        },\n        \"zh-HK\": {\n            \"code\": 3076,\n            \"id\": \"zh-HK\",\n            \"name\": \"Chinese, Hong Kong\"\n        },\n        \"de-AT\": {\n            \"code\": 3079,\n            \"id\": \"de-AT\",\n            \"name\": \"German, Austria\"\n        },\n        \"en-AU\": {\n            \"code\": 3081,\n            \"id\": \"en-AU\",\n            \"name\": \"English, Australia\"\n        },\n        \"es-ES\": {\n            \"code\": 3082,\n            \"id\": \"es-ES\",\n            \"name\": \"Spanish, Spain\"\n        },\n        \"fr-CA\": {\n            \"code\": 3084,\n            \"id\": \"fr-CA\",\n            \"name\": \"French, Canada\"\n        },\n        \"sr-Cyrl-CS\": {\n            \"code\": 3098,\n            \"id\": \"sr-Cyrl-CS\",\n            \"name\": \"Serbian, Cyrillic, Serbia and Montenegro\"\n        },\n        \"se-FI\": {\n            \"code\": 3131,\n            \"id\": \"se-FI\",\n            \"name\": \"Northern Sami, Finland\"\n        },\n        \"tmz-MA\": {\n            \"code\": 3167,\n            \"id\": \"tmz-MA\",\n            \"name\": \"Tamanaku, Morocco\"\n        },\n        \"quz-PE\": {\n            \"code\": 3179,\n            \"id\": \"quz-PE\",\n            \"name\": \"Cusco Quechua, Peru\"\n        },\n        \"ar-LY\": {\n            \"code\": 4097,\n            \"id\": \"ar-LY\",\n            \"name\": \"Arabic, Libyan Arab Jamahiriya\"\n        },\n        \"zh-SG\": {\n            \"code\": 4100,\n            \"id\": \"zh-SG\",\n            \"name\": \"Chinese, Singapore\"\n        },\n        \"de-LU\": {\n            \"code\": 4103,\n            \"id\": \"de-LU\",\n            \"name\": \"German, Luxembourg\"\n        },\n        \"en-CA\": {\n            \"code\": 4105,\n            \"id\": \"en-CA\",\n            \"name\": \"English, Canada\"\n        },\n        \"es-GT\": {\n            \"code\": 4106,\n            \"id\": \"es-GT\",\n            \"name\": \"Spanish, Guatemala\"\n        },\n        \"fr-CH\": {\n            \"code\": 4108,\n            \"id\": \"fr-CH\",\n            \"name\": \"French, Switzerland\"\n        },\n        \"hr-BA\": {\n            \"code\": 4122,\n            \"id\": \"hr-BA\",\n            \"name\": \"Croatian, Bosnia and Herzegovina\"\n        },\n        \"smj-NO\": {\n            \"code\": 4155,\n            \"id\": \"smj-NO\",\n            \"name\": \"Lule Sami, Norway\"\n        },\n        \"ar-DZ\": {\n            \"code\": 5121,\n            \"id\": \"ar-DZ\",\n            \"name\": \"Arabic, Algeria\"\n        },\n        \"zh-MO\": {\n            \"code\": 5124,\n            \"id\": \"zh-MO\",\n            \"name\": \"Chinese, Macao\"\n        },\n        \"de-LI\": {\n            \"code\": 5127,\n            \"id\": \"de-LI\",\n            \"name\": \"German, Liechtenstein\"\n        },\n        \"en-NZ\": {\n            \"code\": 5129,\n            \"id\": \"en-NZ\",\n            \"name\": \"English, New Zealand\"\n        },\n        \"es-CR\": {\n            \"code\": 5130,\n            \"id\": \"es-CR\",\n            \"name\": \"Spanish, Costa Rica\"\n        },\n        \"fr-LU\": {\n            \"code\": 5132,\n            \"id\": \"fr-LU\",\n            \"name\": \"French, Luxembourg\"\n        },\n        \"bs-Latn-BA\": {\n            \"code\": 5146,\n            \"id\": \"bs-Latn-BA\",\n            \"name\": \"Bosnian, Latin, Bosnia and Herzegovina\"\n        },\n        \"smj-SE\": {\n            \"code\": 5179,\n            \"id\": \"smj-SE\",\n            \"name\": \"Lule Sami, Sweden\"\n        },\n        \"ar-MA\": {\n            \"code\": 6145,\n            \"id\": \"ar-MA\",\n            \"name\": \"Arabic, Morocco\"\n        },\n        \"en-IE\": {\n            \"code\": 6153,\n            \"id\": \"en-IE\",\n            \"name\": \"English, Ireland\"\n        },\n        \"es-PA\": {\n            \"code\": 6154,\n            \"id\": \"es-PA\",\n            \"name\": \"Spanish, Panama\"\n        },\n        \"fr-MC\": {\n            \"code\": 6156,\n            \"id\": \"fr-MC\",\n            \"name\": \"French, Monaco\"\n        },\n        \"sr-Latn-BA\": {\n            \"code\": 6170,\n            \"id\": \"sr-Latn-BA\",\n            \"name\": \"Serbian, Latin, Bosnia and Herzegovina\"\n        },\n        \"sma-NO\": {\n            \"code\": 6203,\n            \"id\": \"sma-NO\",\n            \"name\": \"Southern Sami, Norway\"\n        },\n        \"ar-TN\": {\n            \"code\": 7169,\n            \"id\": \"ar-TN\",\n            \"name\": \"Arabic, Tunisia\"\n        },\n        \"en-ZA\": {\n            \"code\": 7177,\n            \"id\": \"en-ZA\",\n            \"name\": \"English, South Africa\"\n        },\n        \"es-DO\": {\n            \"code\": 7178,\n            \"id\": \"es-DO\",\n            \"name\": \"Spanish, Dominican Republic\"\n        },\n        \"fr-West\": {\n            \"code\": 7180,\n            \"id\": \"fr-West\",\n            \"name\": \"French\"\n        },\n        \"sr-Cyrl-BA\": {\n            \"code\": 7194,\n            \"id\": \"sr-Cyrl-BA\",\n            \"name\": \"Serbian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"sma-SE\": {\n            \"code\": 7227,\n            \"id\": \"sma-SE\",\n            \"name\": \"Southern Sami, Sweden\"\n        },\n        \"ar-OM\": {\n            \"code\": 8193,\n            \"id\": \"ar-OM\",\n            \"name\": \"Arabic, Oman\"\n        },\n        \"en-JM\": {\n            \"code\": 8201,\n            \"id\": \"en-JM\",\n            \"name\": \"English, Jamaica\"\n        },\n        \"es-VE\": {\n            \"code\": 8202,\n            \"id\": \"es-VE\",\n            \"name\": \"Spanish, Venezuela\"\n        },\n        \"fr-RE\": {\n            \"code\": 8204,\n            \"id\": \"fr-RE\",\n            \"name\": \"French, Réunion\"\n        },\n        \"bs-Cyrl-BA\": {\n            \"code\": 8218,\n            \"id\": \"bs-Cyrl-BA\",\n            \"name\": \"Bosnian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"sms-FI\": {\n            \"code\": 8251,\n            \"id\": \"sms-FI\",\n            \"name\": \"Skolt Sami, Finland\"\n        },\n        \"ar-YE\": {\n            \"code\": 9217,\n            \"id\": \"ar-YE\",\n            \"name\": \"Arabic, Yemen\"\n        },\n        \"en-CB\": {\n            \"code\": 9225,\n            \"id\": \"en-CB\",\n            \"name\": \"English\"\n        },\n        \"es-CO\": {\n            \"code\": 9226,\n            \"id\": \"es-CO\",\n            \"name\": \"Spanish, Colombia\"\n        },\n        \"fr-CG\": {\n            \"code\": 9228,\n            \"id\": \"fr-CG\",\n            \"name\": \"French, Congo\"\n        },\n        \"sr-Latn-RS\": {\n            \"code\": 9242,\n            \"id\": \"sr-Latn-RS\",\n            \"name\": \"Serbian, Latin, Serbia\"\n        },\n        \"smn-FI\": {\n            \"code\": 9275,\n            \"id\": \"smn-FI\",\n            \"name\": \"Inari Sami, Finland\"\n        },\n        \"ar-SY\": {\n            \"code\": 10241,\n            \"id\": \"ar-SY\",\n            \"name\": \"Arabic, Syrian Arab Republic\"\n        },\n        \"en-BZ\": {\n            \"code\": 10249,\n            \"id\": \"en-BZ\",\n            \"name\": \"English, Belize\"\n        },\n        \"es-PE\": {\n            \"code\": 10250,\n            \"id\": \"es-PE\",\n            \"name\": \"Spanish, Peru\"\n        },\n        \"fr-SN\": {\n            \"code\": 10252,\n            \"id\": \"fr-SN\",\n            \"name\": \"French, Senegal\"\n        },\n        \"sr-Cyrl-RS\": {\n            \"code\": 10266,\n            \"id\": \"sr-Cyrl-RS\",\n            \"name\": \"Serbian, Cyrillic, Serbia\"\n        },\n        \"ar-JO\": {\n            \"code\": 11265,\n            \"id\": \"ar-JO\",\n            \"name\": \"Arabic, Jordan\"\n        },\n        \"en-TT\": {\n            \"code\": 11273,\n            \"id\": \"en-TT\",\n            \"name\": \"English, Trinidad and Tobago\"\n        },\n        \"es-AR\": {\n            \"code\": 11274,\n            \"id\": \"es-AR\",\n            \"name\": \"Spanish, Argentina\"\n        },\n        \"fr-CM\": {\n            \"code\": 11276,\n            \"id\": \"fr-CM\",\n            \"name\": \"French, Cameroon\"\n        },\n        \"sr-Latn-ME\": {\n            \"code\": 11290,\n            \"id\": \"sr-Latn-ME\",\n            \"name\": \"Serbian, Latin, Montenegro\"\n        },\n        \"ar-LB\": {\n            \"code\": 12289,\n            \"id\": \"ar-LB\",\n            \"name\": \"Arabic, Lebanon\"\n        },\n        \"en-ZW\": {\n            \"code\": 12297,\n            \"id\": \"en-ZW\",\n            \"name\": \"English, Zimbabwe\"\n        },\n        \"es-EC\": {\n            \"code\": 12298,\n            \"id\": \"es-EC\",\n            \"name\": \"Spanish, Ecuador\"\n        },\n        \"fr-CI\": {\n            \"code\": 12300,\n            \"id\": \"fr-CI\",\n            \"name\": \"French, Côte d’Ivoire\"\n        },\n        \"sr-Cyrl-ME\": {\n            \"code\": 12314,\n            \"id\": \"sr-Cyrl-ME\",\n            \"name\": \"Serbian, Cyrillic, Montenegro\"\n        },\n        \"ar-KW\": {\n            \"code\": 13313,\n            \"id\": \"ar-KW\",\n            \"name\": \"Arabic, Kuwait\"\n        },\n        \"en-PH\": {\n            \"code\": 13321,\n            \"id\": \"en-PH\",\n            \"name\": \"English, Philippines\"\n        },\n        \"es-CL\": {\n            \"code\": 13322,\n            \"id\": \"es-CL\",\n            \"name\": \"Spanish, Chile\"\n        },\n        \"fr-ML\": {\n            \"code\": 13324,\n            \"id\": \"fr-ML\",\n            \"name\": \"French, Mali\"\n        },\n        \"ar-AE\": {\n            \"code\": 14337,\n            \"id\": \"ar-AE\",\n            \"name\": \"Arabic, United Arab Emirates\"\n        },\n        \"en-ID\": {\n            \"code\": 14345,\n            \"id\": \"en-ID\",\n            \"name\": \"English, Indonesia\"\n        },\n        \"es-UY\": {\n            \"code\": 14346,\n            \"id\": \"es-UY\",\n            \"name\": \"Spanish, Uruguay\"\n        },\n        \"fr-MA\": {\n            \"code\": 14348,\n            \"id\": \"fr-MA\",\n            \"name\": \"French, Morocco\"\n        },\n        \"ar-BH\": {\n            \"code\": 15361,\n            \"id\": \"ar-BH\",\n            \"name\": \"Arabic, Bahrain\"\n        },\n        \"en-HK\": {\n            \"code\": 15369,\n            \"id\": \"en-HK\",\n            \"name\": \"English, Hong Kong\"\n        },\n        \"es-PY\": {\n            \"code\": 15370,\n            \"id\": \"es-PY\",\n            \"name\": \"Spanish, Paraguay\"\n        },\n        \"fr-HT\": {\n            \"code\": 15372,\n            \"id\": \"fr-HT\",\n            \"name\": \"French, Haiti\"\n        },\n        \"ar-QA\": {\n            \"code\": 16385,\n            \"id\": \"ar-QA\",\n            \"name\": \"Arabic, Qatar\"\n        },\n        \"en-IN\": {\n            \"code\": 16393,\n            \"id\": \"en-IN\",\n            \"name\": \"English, India\"\n        },\n        \"es-BO\": {\n            \"code\": 16394,\n            \"id\": \"es-BO\",\n            \"name\": \"Spanish, Bolivia\"\n        },\n        \"en-MY\": {\n            \"code\": 17417,\n            \"id\": \"en-MY\",\n            \"name\": \"English, Malaysia\"\n        },\n        \"es-SV\": {\n            \"code\": 17418,\n            \"id\": \"es-SV\",\n            \"name\": \"Spanish, El Salvador\"\n        },\n        \"en-SG\": {\n            \"code\": 18441,\n            \"id\": \"en-SG\",\n            \"name\": \"English, Singapore\"\n        },\n        \"es-HN\": {\n            \"code\": 18442,\n            \"id\": \"es-HN\",\n            \"name\": \"Spanish, Honduras\"\n        },\n        \"es-NI\": {\n            \"code\": 19466,\n            \"id\": \"es-NI\",\n            \"name\": \"Spanish, Nicaragua\"\n        },\n        \"es-PR\": {\n            \"code\": 20490,\n            \"id\": \"es-PR\",\n            \"name\": \"Spanish, Puerto Rico\"\n        },\n        \"es-US\": {\n            \"code\": 21514,\n            \"id\": \"es-US\",\n            \"name\": \"Spanish, United States\"\n        },\n        \"bs-Cyrl\": {\n            \"code\": 25626,\n            \"id\": \"bs-Cyrl\",\n            \"name\": \"Bosnian, Cyrillic\"\n        },\n        \"bs-Latn\": {\n            \"code\": 26650,\n            \"id\": \"bs-Latn\",\n            \"name\": \"Bosnian, Latin\"\n        },\n        \"sr-Cyrl\": {\n            \"code\": 27674,\n            \"id\": \"sr-Cyrl\",\n            \"name\": \"Serbian, Cyrillic\"\n        },\n        \"sr-Latn\": {\n            \"code\": 28698,\n            \"id\": \"sr-Latn\",\n            \"name\": \"Serbian, Latin\"\n        },\n        \"smn\": {\n            \"code\": 28731,\n            \"id\": \"smn\",\n            \"name\": \"Inari Sami\"\n        },\n        \"az-Cyrl\": {\n            \"code\": 29740,\n            \"id\": \"az-Cyrl\",\n            \"name\": \"Azerbaijani, Cyrillic\"\n        },\n        \"sms\": {\n            \"code\": 29755,\n            \"id\": \"sms\",\n            \"name\": \"Skolt Sami\"\n        },\n        \"zh\": {\n            \"code\": 30724,\n            \"id\": \"zh\",\n            \"name\": \"Chinese\"\n        },\n        \"nn\": {\n            \"code\": 30740,\n            \"id\": \"nn\",\n            \"name\": \"Norwegian Nynorsk\"\n        },\n        \"bs\": {\n            \"code\": 30746,\n            \"id\": \"bs\",\n            \"name\": \"Bosnian\"\n        },\n        \"az-Latn\": {\n            \"code\": 30764,\n            \"id\": \"az-Latn\",\n            \"name\": \"Azerbaijani, Latin\"\n        },\n        \"sma\": {\n            \"code\": 30779,\n            \"id\": \"sma\",\n            \"name\": \"Southern Sami\"\n        },\n        \"uz-Cyrl\": {\n            \"code\": 30787,\n            \"id\": \"uz-Cyrl\",\n            \"name\": \"Uzbek, Cyrillic\"\n        },\n        \"mn-Cyrl\": {\n            \"code\": 30800,\n            \"id\": \"mn-Cyrl\",\n            \"name\": \"Mongolian, Cyrillic\"\n        },\n        \"iu-Cans\": {\n            \"code\": 30813,\n            \"id\": \"iu-Cans\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics\"\n        },\n        \"zh-Hant\": {\n            \"code\": 31748,\n            \"id\": \"zh-Hant\",\n            \"name\": \"Chinese, Han (Traditional variant)\"\n        },\n        \"nb\": {\n            \"code\": 31764,\n            \"id\": \"nb\",\n            \"name\": \"Norwegian Bokmål\"\n        },\n        \"sr\": {\n            \"code\": 31770,\n            \"id\": \"sr\",\n            \"name\": \"Serbian\"\n        },\n        \"tg-Cyrl\": {\n            \"code\": 31784,\n            \"id\": \"tg-Cyrl\",\n            \"name\": \"Tajik, Cyrillic\"\n        },\n        \"dsb\": {\n            \"code\": 31790,\n            \"id\": \"dsb\",\n            \"name\": \"Lower Sorbian\"\n        },\n        \"smj\": {\n            \"code\": 31803,\n            \"id\": \"smj\",\n            \"name\": \"Lule Sami\"\n        },\n        \"uz-Latn\": {\n            \"code\": 31811,\n            \"id\": \"uz-Latn\",\n            \"name\": \"Uzbek, Latin\"\n        },\n        \"mn-Mong\": {\n            \"code\": 31824,\n            \"id\": \"mn-Mong\",\n            \"name\": \"Mongolian, Mongolian\"\n        },\n        \"iu-Latn\": {\n            \"code\": 31837,\n            \"id\": \"iu-Latn\",\n            \"name\": \"Inuktitut, Latin\"\n        },\n        \"tzm-Latn\": {\n            \"code\": 31839,\n            \"id\": \"tzm-Latn\",\n            \"name\": \"Central Atlas Tamazight, Latin\"\n        },\n        \"ha-Latn\": {\n            \"code\": 31848,\n            \"id\": \"ha-Latn\",\n            \"name\": \"Hausa, Latin\"\n        }\n    },\n    \"byName\": {\n        \"Arabic\": {\n            \"code\": 1,\n            \"id\": \"ar\",\n            \"name\": \"Arabic\"\n        },\n        \"Bulgarian\": {\n            \"code\": 2,\n            \"id\": \"bg\",\n            \"name\": \"Bulgarian\"\n        },\n        \"Catalan\": {\n            \"code\": 3,\n            \"id\": \"ca\",\n            \"name\": \"Catalan\"\n        },\n        \"Chinese, Han (Simplified variant)\": {\n            \"code\": 4,\n            \"id\": \"zh-Hans\",\n            \"name\": \"Chinese, Han (Simplified variant)\"\n        },\n        \"Czech\": {\n            \"code\": 5,\n            \"id\": \"cs\",\n            \"name\": \"Czech\"\n        },\n        \"Danish\": {\n            \"code\": 6,\n            \"id\": \"da\",\n            \"name\": \"Danish\"\n        },\n        \"German\": {\n            \"code\": 7,\n            \"id\": \"de\",\n            \"name\": \"German\"\n        },\n        \"Modern Greek (1453 and later)\": {\n            \"code\": 8,\n            \"id\": \"el\",\n            \"name\": \"Modern Greek (1453 and later)\"\n        },\n        \"English\": {\n            \"code\": 9225,\n            \"id\": \"en-CB\",\n            \"name\": \"English\"\n        },\n        \"Spanish\": {\n            \"code\": 1034,\n            \"id\": \"es-ES_tradnl\",\n            \"name\": \"Spanish\"\n        },\n        \"Finnish\": {\n            \"code\": 11,\n            \"id\": \"fi\",\n            \"name\": \"Finnish\"\n        },\n        \"French\": {\n            \"code\": 7180,\n            \"id\": \"fr-West\",\n            \"name\": \"French\"\n        },\n        \"Hebrew\": {\n            \"code\": 13,\n            \"id\": \"he\",\n            \"name\": \"Hebrew\"\n        },\n        \"Hungarian\": {\n            \"code\": 14,\n            \"id\": \"hu\",\n            \"name\": \"Hungarian\"\n        },\n        \"Icelandic\": {\n            \"code\": 15,\n            \"id\": \"is\",\n            \"name\": \"Icelandic\"\n        },\n        \"Italian\": {\n            \"code\": 16,\n            \"id\": \"it\",\n            \"name\": \"Italian\"\n        },\n        \"Japanese\": {\n            \"code\": 17,\n            \"id\": \"ja\",\n            \"name\": \"Japanese\"\n        },\n        \"Korean\": {\n            \"code\": 18,\n            \"id\": \"ko\",\n            \"name\": \"Korean\"\n        },\n        \"Dutch\": {\n            \"code\": 19,\n            \"id\": \"nl\",\n            \"name\": \"Dutch\"\n        },\n        \"Norwegian\": {\n            \"code\": 20,\n            \"id\": \"no\",\n            \"name\": \"Norwegian\"\n        },\n        \"Polish\": {\n            \"code\": 21,\n            \"id\": \"pl\",\n            \"name\": \"Polish\"\n        },\n        \"Portuguese\": {\n            \"code\": 22,\n            \"id\": \"pt\",\n            \"name\": \"Portuguese\"\n        },\n        \"Romansh\": {\n            \"code\": 23,\n            \"id\": \"rm\",\n            \"name\": \"Romansh\"\n        },\n        \"Romanian\": {\n            \"code\": 24,\n            \"id\": \"ro\",\n            \"name\": \"Romanian\"\n        },\n        \"Russian\": {\n            \"code\": 25,\n            \"id\": \"ru\",\n            \"name\": \"Russian\"\n        },\n        \"Croatian\": {\n            \"code\": 26,\n            \"id\": \"hr\",\n            \"name\": \"Croatian\"\n        },\n        \"Slovak\": {\n            \"code\": 27,\n            \"id\": \"sk\",\n            \"name\": \"Slovak\"\n        },\n        \"Albanian\": {\n            \"code\": 28,\n            \"id\": \"sq\",\n            \"name\": \"Albanian\"\n        },\n        \"Swedish\": {\n            \"code\": 29,\n            \"id\": \"sv\",\n            \"name\": \"Swedish\"\n        },\n        \"Thai\": {\n            \"code\": 30,\n            \"id\": \"th\",\n            \"name\": \"Thai\"\n        },\n        \"Turkish\": {\n            \"code\": 31,\n            \"id\": \"tr\",\n            \"name\": \"Turkish\"\n        },\n        \"Urdu\": {\n            \"code\": 32,\n            \"id\": \"ur\",\n            \"name\": \"Urdu\"\n        },\n        \"Indonesian\": {\n            \"code\": 33,\n            \"id\": \"id\",\n            \"name\": \"Indonesian\"\n        },\n        \"Ukrainian\": {\n            \"code\": 34,\n            \"id\": \"uk\",\n            \"name\": \"Ukrainian\"\n        },\n        \"Belarusian\": {\n            \"code\": 35,\n            \"id\": \"be\",\n            \"name\": \"Belarusian\"\n        },\n        \"Slovenian\": {\n            \"code\": 36,\n            \"id\": \"sl\",\n            \"name\": \"Slovenian\"\n        },\n        \"Estonian\": {\n            \"code\": 37,\n            \"id\": \"et\",\n            \"name\": \"Estonian\"\n        },\n        \"Latvian\": {\n            \"code\": 38,\n            \"id\": \"lv\",\n            \"name\": \"Latvian\"\n        },\n        \"Lithuanian\": {\n            \"code\": 39,\n            \"id\": \"lt\",\n            \"name\": \"Lithuanian\"\n        },\n        \"Tajik\": {\n            \"code\": 40,\n            \"id\": \"tg\",\n            \"name\": \"Tajik\"\n        },\n        \"Persian\": {\n            \"code\": 41,\n            \"id\": \"fa\",\n            \"name\": \"Persian\"\n        },\n        \"Vietnamese\": {\n            \"code\": 42,\n            \"id\": \"vi\",\n            \"name\": \"Vietnamese\"\n        },\n        \"Armenian\": {\n            \"code\": 43,\n            \"id\": \"hy\",\n            \"name\": \"Armenian\"\n        },\n        \"Azerbaijani\": {\n            \"code\": 44,\n            \"id\": \"az\",\n            \"name\": \"Azerbaijani\"\n        },\n        \"Basque\": {\n            \"code\": 45,\n            \"id\": \"eu\",\n            \"name\": \"Basque\"\n        },\n        \"Upper Sorbian\": {\n            \"code\": 46,\n            \"id\": \"hsb\",\n            \"name\": \"Upper Sorbian\"\n        },\n        \"Macedonian\": {\n            \"code\": 47,\n            \"id\": \"mk\",\n            \"name\": \"Macedonian\"\n        },\n        \"Tswana\": {\n            \"code\": 50,\n            \"id\": \"tn\",\n            \"name\": \"Tswana\"\n        },\n        \"Xhosa\": {\n            \"code\": 52,\n            \"id\": \"xh\",\n            \"name\": \"Xhosa\"\n        },\n        \"Zulu\": {\n            \"code\": 53,\n            \"id\": \"zu\",\n            \"name\": \"Zulu\"\n        },\n        \"Afrikaans\": {\n            \"code\": 54,\n            \"id\": \"af\",\n            \"name\": \"Afrikaans\"\n        },\n        \"Georgian\": {\n            \"code\": 55,\n            \"id\": \"ka\",\n            \"name\": \"Georgian\"\n        },\n        \"Faroese\": {\n            \"code\": 56,\n            \"id\": \"fo\",\n            \"name\": \"Faroese\"\n        },\n        \"Hindi\": {\n            \"code\": 57,\n            \"id\": \"hi\",\n            \"name\": \"Hindi\"\n        },\n        \"Maltese\": {\n            \"code\": 58,\n            \"id\": \"mt\",\n            \"name\": \"Maltese\"\n        },\n        \"Northern Sami\": {\n            \"code\": 59,\n            \"id\": \"se\",\n            \"name\": \"Northern Sami\"\n        },\n        \"Irish\": {\n            \"code\": 60,\n            \"id\": \"ga\",\n            \"name\": \"Irish\"\n        },\n        \"Malay (macrolanguage)\": {\n            \"code\": 62,\n            \"id\": \"ms\",\n            \"name\": \"Malay (macrolanguage)\"\n        },\n        \"Kazakh\": {\n            \"code\": 63,\n            \"id\": \"kk\",\n            \"name\": \"Kazakh\"\n        },\n        \"Kirghiz\": {\n            \"code\": 64,\n            \"id\": \"ky\",\n            \"name\": \"Kirghiz\"\n        },\n        \"Swahili (macrolanguage)\": {\n            \"code\": 65,\n            \"id\": \"sw\",\n            \"name\": \"Swahili (macrolanguage)\"\n        },\n        \"Turkmen\": {\n            \"code\": 66,\n            \"id\": \"tk\",\n            \"name\": \"Turkmen\"\n        },\n        \"Uzbek\": {\n            \"code\": 67,\n            \"id\": \"uz\",\n            \"name\": \"Uzbek\"\n        },\n        \"Tatar\": {\n            \"code\": 68,\n            \"id\": \"tt\",\n            \"name\": \"Tatar\"\n        },\n        \"Bengali\": {\n            \"code\": 69,\n            \"id\": \"bn\",\n            \"name\": \"Bengali\"\n        },\n        \"Panjabi\": {\n            \"code\": 70,\n            \"id\": \"pa\",\n            \"name\": \"Panjabi\"\n        },\n        \"Gujarati\": {\n            \"code\": 71,\n            \"id\": \"gu\",\n            \"name\": \"Gujarati\"\n        },\n        \"Oriya\": {\n            \"code\": 72,\n            \"id\": \"or\",\n            \"name\": \"Oriya\"\n        },\n        \"Tamil\": {\n            \"code\": 73,\n            \"id\": \"ta\",\n            \"name\": \"Tamil\"\n        },\n        \"Telugu\": {\n            \"code\": 74,\n            \"id\": \"te\",\n            \"name\": \"Telugu\"\n        },\n        \"Kannada\": {\n            \"code\": 75,\n            \"id\": \"kn\",\n            \"name\": \"Kannada\"\n        },\n        \"Malayalam\": {\n            \"code\": 76,\n            \"id\": \"ml\",\n            \"name\": \"Malayalam\"\n        },\n        \"Assamese\": {\n            \"code\": 77,\n            \"id\": \"as\",\n            \"name\": \"Assamese\"\n        },\n        \"Marathi\": {\n            \"code\": 78,\n            \"id\": \"mr\",\n            \"name\": \"Marathi\"\n        },\n        \"Sanskrit\": {\n            \"code\": 79,\n            \"id\": \"sa\",\n            \"name\": \"Sanskrit\"\n        },\n        \"Mongolian\": {\n            \"code\": 80,\n            \"id\": \"mn\",\n            \"name\": \"Mongolian\"\n        },\n        \"Tibetan\": {\n            \"code\": 81,\n            \"id\": \"bo\",\n            \"name\": \"Tibetan\"\n        },\n        \"Welsh\": {\n            \"code\": 82,\n            \"id\": \"cy\",\n            \"name\": \"Welsh\"\n        },\n        \"Central Khmer\": {\n            \"code\": 83,\n            \"id\": \"km\",\n            \"name\": \"Central Khmer\"\n        },\n        \"Lao\": {\n            \"code\": 84,\n            \"id\": \"lo\",\n            \"name\": \"Lao\"\n        },\n        \"Galician\": {\n            \"code\": 86,\n            \"id\": \"gl\",\n            \"name\": \"Galician\"\n        },\n        \"Konkani (macrolanguage)\": {\n            \"code\": 87,\n            \"id\": \"kok\",\n            \"name\": \"Konkani (macrolanguage)\"\n        },\n        \"Syriac\": {\n            \"code\": 90,\n            \"id\": \"syr\",\n            \"name\": \"Syriac\"\n        },\n        \"Sinhala\": {\n            \"code\": 91,\n            \"id\": \"si\",\n            \"name\": \"Sinhala\"\n        },\n        \"Inuktitut\": {\n            \"code\": 93,\n            \"id\": \"iu\",\n            \"name\": \"Inuktitut\"\n        },\n        \"Amharic\": {\n            \"code\": 94,\n            \"id\": \"am\",\n            \"name\": \"Amharic\"\n        },\n        \"Central Atlas Tamazight\": {\n            \"code\": 95,\n            \"id\": \"tzm\",\n            \"name\": \"Central Atlas Tamazight\"\n        },\n        \"Nepali\": {\n            \"code\": 97,\n            \"id\": \"ne\",\n            \"name\": \"Nepali\"\n        },\n        \"Western Frisian\": {\n            \"code\": 98,\n            \"id\": \"fy\",\n            \"name\": \"Western Frisian\"\n        },\n        \"Pushto\": {\n            \"code\": 99,\n            \"id\": \"ps\",\n            \"name\": \"Pushto\"\n        },\n        \"Filipino\": {\n            \"code\": 100,\n            \"id\": \"fil\",\n            \"name\": \"Filipino\"\n        },\n        \"Dhivehi\": {\n            \"code\": 101,\n            \"id\": \"dv\",\n            \"name\": \"Dhivehi\"\n        },\n        \"Hausa\": {\n            \"code\": 104,\n            \"id\": \"ha\",\n            \"name\": \"Hausa\"\n        },\n        \"Yoruba\": {\n            \"code\": 106,\n            \"id\": \"yo\",\n            \"name\": \"Yoruba\"\n        },\n        \"Cusco Quechua\": {\n            \"code\": 107,\n            \"id\": \"quz\",\n            \"name\": \"Cusco Quechua\"\n        },\n        \"Pedi\": {\n            \"code\": 108,\n            \"id\": \"nso\",\n            \"name\": \"Pedi\"\n        },\n        \"Bashkir\": {\n            \"code\": 109,\n            \"id\": \"ba\",\n            \"name\": \"Bashkir\"\n        },\n        \"Luxembourgish\": {\n            \"code\": 110,\n            \"id\": \"lb\",\n            \"name\": \"Luxembourgish\"\n        },\n        \"Kalaallisut\": {\n            \"code\": 111,\n            \"id\": \"kl\",\n            \"name\": \"Kalaallisut\"\n        },\n        \"Igbo\": {\n            \"code\": 112,\n            \"id\": \"ig\",\n            \"name\": \"Igbo\"\n        },\n        \"Sichuan Yi\": {\n            \"code\": 120,\n            \"id\": \"ii\",\n            \"name\": \"Sichuan Yi\"\n        },\n        \"Mapudungun\": {\n            \"code\": 122,\n            \"id\": \"arn\",\n            \"name\": \"Mapudungun\"\n        },\n        \"Mohawk\": {\n            \"code\": 124,\n            \"id\": \"moh\",\n            \"name\": \"Mohawk\"\n        },\n        \"Breton\": {\n            \"code\": 126,\n            \"id\": \"br\",\n            \"name\": \"Breton\"\n        },\n        \"Uighur\": {\n            \"code\": 128,\n            \"id\": \"ug\",\n            \"name\": \"Uighur\"\n        },\n        \"Maori\": {\n            \"code\": 129,\n            \"id\": \"mi\",\n            \"name\": \"Maori\"\n        },\n        \"Occitan (post 1500)\": {\n            \"code\": 130,\n            \"id\": \"oc\",\n            \"name\": \"Occitan (post 1500)\"\n        },\n        \"Corsican\": {\n            \"code\": 131,\n            \"id\": \"co\",\n            \"name\": \"Corsican\"\n        },\n        \"Swiss German\": {\n            \"code\": 132,\n            \"id\": \"gsw\",\n            \"name\": \"Swiss German\"\n        },\n        \"Yakut\": {\n            \"code\": 133,\n            \"id\": \"sah\",\n            \"name\": \"Yakut\"\n        },\n        \"Guatemala\": {\n            \"code\": 1158,\n            \"id\": \"qut-GT\",\n            \"name\": \"Guatemala\"\n        },\n        \"Kinyarwanda\": {\n            \"code\": 135,\n            \"id\": \"rw\",\n            \"name\": \"Kinyarwanda\"\n        },\n        \"Wolof\": {\n            \"code\": 136,\n            \"id\": \"wo\",\n            \"name\": \"Wolof\"\n        },\n        \"Dari\": {\n            \"code\": 140,\n            \"id\": \"prs\",\n            \"name\": \"Dari\"\n        },\n        \"Scottish Gaelic\": {\n            \"code\": 145,\n            \"id\": \"gd\",\n            \"name\": \"Scottish Gaelic\"\n        },\n        \"Arabic, Saudi Arabia\": {\n            \"code\": 1025,\n            \"id\": \"ar-SA\",\n            \"name\": \"Arabic, Saudi Arabia\"\n        },\n        \"Bulgarian, Bulgaria\": {\n            \"code\": 1026,\n            \"id\": \"bg-BG\",\n            \"name\": \"Bulgarian, Bulgaria\"\n        },\n        \"Catalan, Spain\": {\n            \"code\": 1027,\n            \"id\": \"ca-ES\",\n            \"name\": \"Catalan, Spain\"\n        },\n        \"Chinese, Taiwan, Province of China\": {\n            \"code\": 1028,\n            \"id\": \"zh-TW\",\n            \"name\": \"Chinese, Taiwan, Province of China\"\n        },\n        \"Czech, Czech Republic\": {\n            \"code\": 1029,\n            \"id\": \"cs-CZ\",\n            \"name\": \"Czech, Czech Republic\"\n        },\n        \"Danish, Denmark\": {\n            \"code\": 1030,\n            \"id\": \"da-DK\",\n            \"name\": \"Danish, Denmark\"\n        },\n        \"German, Germany\": {\n            \"code\": 1031,\n            \"id\": \"de-DE\",\n            \"name\": \"German, Germany\"\n        },\n        \"Modern Greek (1453-), Greece\": {\n            \"code\": 1032,\n            \"id\": \"el-GR\",\n            \"name\": \"Modern Greek (1453-), Greece\"\n        },\n        \"English, United States\": {\n            \"code\": 1033,\n            \"id\": \"en-US\",\n            \"name\": \"English, United States\"\n        },\n        \"Finnish, Finland\": {\n            \"code\": 1035,\n            \"id\": \"fi-FI\",\n            \"name\": \"Finnish, Finland\"\n        },\n        \"French, France\": {\n            \"code\": 1036,\n            \"id\": \"fr-FR\",\n            \"name\": \"French, France\"\n        },\n        \"Hebrew, Israel\": {\n            \"code\": 1037,\n            \"id\": \"he-IL\",\n            \"name\": \"Hebrew, Israel\"\n        },\n        \"Hungarian, Hungary\": {\n            \"code\": 1038,\n            \"id\": \"hu-HU\",\n            \"name\": \"Hungarian, Hungary\"\n        },\n        \"Icelandic, Iceland\": {\n            \"code\": 1039,\n            \"id\": \"is-IS\",\n            \"name\": \"Icelandic, Iceland\"\n        },\n        \"Italian, Italy\": {\n            \"code\": 1040,\n            \"id\": \"it-IT\",\n            \"name\": \"Italian, Italy\"\n        },\n        \"Japanese, Japan\": {\n            \"code\": 1041,\n            \"id\": \"ja-JP\",\n            \"name\": \"Japanese, Japan\"\n        },\n        \"Korean, Republic of Korea\": {\n            \"code\": 1042,\n            \"id\": \"ko-KR\",\n            \"name\": \"Korean, Republic of Korea\"\n        },\n        \"Dutch, Netherlands\": {\n            \"code\": 1043,\n            \"id\": \"nl-NL\",\n            \"name\": \"Dutch, Netherlands\"\n        },\n        \"Norwegian Bokmål, Norway\": {\n            \"code\": 1044,\n            \"id\": \"nb-NO\",\n            \"name\": \"Norwegian Bokmål, Norway\"\n        },\n        \"Polish, Poland\": {\n            \"code\": 1045,\n            \"id\": \"pl-PL\",\n            \"name\": \"Polish, Poland\"\n        },\n        \"Portuguese, Brazil\": {\n            \"code\": 1046,\n            \"id\": \"pt-BR\",\n            \"name\": \"Portuguese, Brazil\"\n        },\n        \"Romansh, Switzerland\": {\n            \"code\": 1047,\n            \"id\": \"rm-CH\",\n            \"name\": \"Romansh, Switzerland\"\n        },\n        \"Romanian, Romania\": {\n            \"code\": 1048,\n            \"id\": \"ro-RO\",\n            \"name\": \"Romanian, Romania\"\n        },\n        \"Russian, Russian Federation\": {\n            \"code\": 1049,\n            \"id\": \"ru-RU\",\n            \"name\": \"Russian, Russian Federation\"\n        },\n        \"Croatian, Croatia\": {\n            \"code\": 1050,\n            \"id\": \"hr-HR\",\n            \"name\": \"Croatian, Croatia\"\n        },\n        \"Slovak, Slovakia\": {\n            \"code\": 1051,\n            \"id\": \"sk-SK\",\n            \"name\": \"Slovak, Slovakia\"\n        },\n        \"Albanian, Albania\": {\n            \"code\": 1052,\n            \"id\": \"sq-AL\",\n            \"name\": \"Albanian, Albania\"\n        },\n        \"Swedish, Sweden\": {\n            \"code\": 1053,\n            \"id\": \"sv-SE\",\n            \"name\": \"Swedish, Sweden\"\n        },\n        \"Thai, Thailand\": {\n            \"code\": 1054,\n            \"id\": \"th-TH\",\n            \"name\": \"Thai, Thailand\"\n        },\n        \"Turkish, Turkey\": {\n            \"code\": 1055,\n            \"id\": \"tr-TR\",\n            \"name\": \"Turkish, Turkey\"\n        },\n        \"Urdu, Pakistan\": {\n            \"code\": 1056,\n            \"id\": \"ur-PK\",\n            \"name\": \"Urdu, Pakistan\"\n        },\n        \"Indonesian, Indonesia\": {\n            \"code\": 1057,\n            \"id\": \"id-ID\",\n            \"name\": \"Indonesian, Indonesia\"\n        },\n        \"Ukrainian, Ukraine\": {\n            \"code\": 1058,\n            \"id\": \"uk-UA\",\n            \"name\": \"Ukrainian, Ukraine\"\n        },\n        \"Belarusian, Belarus\": {\n            \"code\": 1059,\n            \"id\": \"be-BY\",\n            \"name\": \"Belarusian, Belarus\"\n        },\n        \"Slovenian, Slovenia\": {\n            \"code\": 1060,\n            \"id\": \"sl-SI\",\n            \"name\": \"Slovenian, Slovenia\"\n        },\n        \"Estonian, Estonia\": {\n            \"code\": 1061,\n            \"id\": \"et-EE\",\n            \"name\": \"Estonian, Estonia\"\n        },\n        \"Latvian, Latvia\": {\n            \"code\": 1062,\n            \"id\": \"lv-LV\",\n            \"name\": \"Latvian, Latvia\"\n        },\n        \"Lithuanian, Lithuania\": {\n            \"code\": 1063,\n            \"id\": \"lt-LT\",\n            \"name\": \"Lithuanian, Lithuania\"\n        },\n        \"Tajik, Cyrillic, Tajikistan\": {\n            \"code\": 1064,\n            \"id\": \"tg-Cyrl-TJ\",\n            \"name\": \"Tajik, Cyrillic, Tajikistan\"\n        },\n        \"Persian, Islamic Republic of Iran\": {\n            \"code\": 1065,\n            \"id\": \"fa-IR\",\n            \"name\": \"Persian, Islamic Republic of Iran\"\n        },\n        \"Vietnamese, Viet Nam\": {\n            \"code\": 1066,\n            \"id\": \"vi-VN\",\n            \"name\": \"Vietnamese, Viet Nam\"\n        },\n        \"Armenian, Armenia\": {\n            \"code\": 1067,\n            \"id\": \"hy-AM\",\n            \"name\": \"Armenian, Armenia\"\n        },\n        \"Azerbaijani, Latin, Azerbaijan\": {\n            \"code\": 1068,\n            \"id\": \"az-Latn-AZ\",\n            \"name\": \"Azerbaijani, Latin, Azerbaijan\"\n        },\n        \"Basque, Spain\": {\n            \"code\": 1069,\n            \"id\": \"eu-ES\",\n            \"name\": \"Basque, Spain\"\n        },\n        \"Sorbian languages, Germany\": {\n            \"code\": 1070,\n            \"id\": \"wen-DE\",\n            \"name\": \"Sorbian languages, Germany\"\n        },\n        \"Macedonian, The Former Yugoslav Republic of Macedonia\": {\n            \"code\": 1071,\n            \"id\": \"mk-MK\",\n            \"name\": \"Macedonian, The Former Yugoslav Republic of Macedonia\"\n        },\n        \"Southern Sotho, South Africa\": {\n            \"code\": 1072,\n            \"id\": \"st-ZA\",\n            \"name\": \"Southern Sotho, South Africa\"\n        },\n        \"Tsonga, South Africa\": {\n            \"code\": 1073,\n            \"id\": \"ts-ZA\",\n            \"name\": \"Tsonga, South Africa\"\n        },\n        \"Tswana, South Africa\": {\n            \"code\": 1074,\n            \"id\": \"tn-ZA\",\n            \"name\": \"Tswana, South Africa\"\n        },\n        \"South Africa\": {\n            \"code\": 1075,\n            \"id\": \"ven-ZA\",\n            \"name\": \"South Africa\"\n        },\n        \"Xhosa, South Africa\": {\n            \"code\": 1076,\n            \"id\": \"xh-ZA\",\n            \"name\": \"Xhosa, South Africa\"\n        },\n        \"Zulu, South Africa\": {\n            \"code\": 1077,\n            \"id\": \"zu-ZA\",\n            \"name\": \"Zulu, South Africa\"\n        },\n        \"Afrikaans, South Africa\": {\n            \"code\": 1078,\n            \"id\": \"af-ZA\",\n            \"name\": \"Afrikaans, South Africa\"\n        },\n        \"Georgian, Georgia\": {\n            \"code\": 1079,\n            \"id\": \"ka-GE\",\n            \"name\": \"Georgian, Georgia\"\n        },\n        \"Faroese, Faroe Islands\": {\n            \"code\": 1080,\n            \"id\": \"fo-FO\",\n            \"name\": \"Faroese, Faroe Islands\"\n        },\n        \"Hindi, India\": {\n            \"code\": 1081,\n            \"id\": \"hi-IN\",\n            \"name\": \"Hindi, India\"\n        },\n        \"Maltese, Malta\": {\n            \"code\": 1082,\n            \"id\": \"mt-MT\",\n            \"name\": \"Maltese, Malta\"\n        },\n        \"Northern Sami, Norway\": {\n            \"code\": 1083,\n            \"id\": \"se-NO\",\n            \"name\": \"Northern Sami, Norway\"\n        },\n        \"Malay (macrolanguage), Malaysia\": {\n            \"code\": 1086,\n            \"id\": \"ms-MY\",\n            \"name\": \"Malay (macrolanguage), Malaysia\"\n        },\n        \"Kazakh, Kazakhstan\": {\n            \"code\": 1087,\n            \"id\": \"kk-KZ\",\n            \"name\": \"Kazakh, Kazakhstan\"\n        },\n        \"Kirghiz, Kyrgyzstan\": {\n            \"code\": 1088,\n            \"id\": \"ky-KG\",\n            \"name\": \"Kirghiz, Kyrgyzstan\"\n        },\n        \"Swahili (macrolanguage), Kenya\": {\n            \"code\": 1089,\n            \"id\": \"sw-KE\",\n            \"name\": \"Swahili (macrolanguage), Kenya\"\n        },\n        \"Turkmen, Turkmenistan\": {\n            \"code\": 1090,\n            \"id\": \"tk-TM\",\n            \"name\": \"Turkmen, Turkmenistan\"\n        },\n        \"Uzbek, Latin, Uzbekistan\": {\n            \"code\": 1091,\n            \"id\": \"uz-Latn-UZ\",\n            \"name\": \"Uzbek, Latin, Uzbekistan\"\n        },\n        \"Tatar, Russian Federation\": {\n            \"code\": 1092,\n            \"id\": \"tt-RU\",\n            \"name\": \"Tatar, Russian Federation\"\n        },\n        \"Bengali, India\": {\n            \"code\": 1093,\n            \"id\": \"bn-IN\",\n            \"name\": \"Bengali, India\"\n        },\n        \"Panjabi, India\": {\n            \"code\": 1094,\n            \"id\": \"pa-IN\",\n            \"name\": \"Panjabi, India\"\n        },\n        \"Gujarati, India\": {\n            \"code\": 1095,\n            \"id\": \"gu-IN\",\n            \"name\": \"Gujarati, India\"\n        },\n        \"Oriya, India\": {\n            \"code\": 1096,\n            \"id\": \"or-IN\",\n            \"name\": \"Oriya, India\"\n        },\n        \"Tamil, India\": {\n            \"code\": 1097,\n            \"id\": \"ta-IN\",\n            \"name\": \"Tamil, India\"\n        },\n        \"Telugu, India\": {\n            \"code\": 1098,\n            \"id\": \"te-IN\",\n            \"name\": \"Telugu, India\"\n        },\n        \"Kannada, India\": {\n            \"code\": 1099,\n            \"id\": \"kn-IN\",\n            \"name\": \"Kannada, India\"\n        },\n        \"Malayalam, India\": {\n            \"code\": 1100,\n            \"id\": \"ml-IN\",\n            \"name\": \"Malayalam, India\"\n        },\n        \"Assamese, India\": {\n            \"code\": 1101,\n            \"id\": \"as-IN\",\n            \"name\": \"Assamese, India\"\n        },\n        \"Marathi, India\": {\n            \"code\": 1102,\n            \"id\": \"mr-IN\",\n            \"name\": \"Marathi, India\"\n        },\n        \"Sanskrit, India\": {\n            \"code\": 1103,\n            \"id\": \"sa-IN\",\n            \"name\": \"Sanskrit, India\"\n        },\n        \"Mongolian, Mongolia\": {\n            \"code\": 1104,\n            \"id\": \"mn-MN\",\n            \"name\": \"Mongolian, Mongolia\"\n        },\n        \"Tibetan, China\": {\n            \"code\": 1105,\n            \"id\": \"bo-CN\",\n            \"name\": \"Tibetan, China\"\n        },\n        \"Welsh, United Kingdom\": {\n            \"code\": 1106,\n            \"id\": \"cy-GB\",\n            \"name\": \"Welsh, United Kingdom\"\n        },\n        \"Central Khmer, Cambodia\": {\n            \"code\": 1107,\n            \"id\": \"km-KH\",\n            \"name\": \"Central Khmer, Cambodia\"\n        },\n        \"Lao, Lao People’s Democratic Republic\": {\n            \"code\": 1108,\n            \"id\": \"lo-LA\",\n            \"name\": \"Lao, Lao People’s Democratic Republic\"\n        },\n        \"Burmese, Myanmar\": {\n            \"code\": 1109,\n            \"id\": \"my-MM\",\n            \"name\": \"Burmese, Myanmar\"\n        },\n        \"Galician, Spain\": {\n            \"code\": 1110,\n            \"id\": \"gl-ES\",\n            \"name\": \"Galician, Spain\"\n        },\n        \"Konkani (macrolanguage), India\": {\n            \"code\": 1111,\n            \"id\": \"kok-IN\",\n            \"name\": \"Konkani (macrolanguage), India\"\n        },\n        \"Manipuri\": {\n            \"code\": 1112,\n            \"id\": \"mni\",\n            \"name\": \"Manipuri\"\n        },\n        \"Sindhi, India\": {\n            \"code\": 1113,\n            \"id\": \"sd-IN\",\n            \"name\": \"Sindhi, India\"\n        },\n        \"Syriac, Syrian Arab Republic\": {\n            \"code\": 1114,\n            \"id\": \"syr-SY\",\n            \"name\": \"Syriac, Syrian Arab Republic\"\n        },\n        \"Sinhala, Sri Lanka\": {\n            \"code\": 1115,\n            \"id\": \"si-LK\",\n            \"name\": \"Sinhala, Sri Lanka\"\n        },\n        \"Cherokee, United States\": {\n            \"code\": 1116,\n            \"id\": \"chr-US\",\n            \"name\": \"Cherokee, United States\"\n        },\n        \"Inuktitut, Unified Canadian Aboriginal Syllabics, Canada\": {\n            \"code\": 1117,\n            \"id\": \"iu-Cans-CA\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics, Canada\"\n        },\n        \"Amharic, Ethiopia\": {\n            \"code\": 1118,\n            \"id\": \"am-ET\",\n            \"name\": \"Amharic, Ethiopia\"\n        },\n        \"Tamanaku\": {\n            \"code\": 1119,\n            \"id\": \"tmz\",\n            \"name\": \"Tamanaku\"\n        },\n        \"Nepali, Nepal\": {\n            \"code\": 1121,\n            \"id\": \"ne-NP\",\n            \"name\": \"Nepali, Nepal\"\n        },\n        \"Western Frisian, Netherlands\": {\n            \"code\": 1122,\n            \"id\": \"fy-NL\",\n            \"name\": \"Western Frisian, Netherlands\"\n        },\n        \"Pushto, Afghanistan\": {\n            \"code\": 1123,\n            \"id\": \"ps-AF\",\n            \"name\": \"Pushto, Afghanistan\"\n        },\n        \"Filipino, Philippines\": {\n            \"code\": 1124,\n            \"id\": \"fil-PH\",\n            \"name\": \"Filipino, Philippines\"\n        },\n        \"Dhivehi, Maldives\": {\n            \"code\": 1125,\n            \"id\": \"dv-MV\",\n            \"name\": \"Dhivehi, Maldives\"\n        },\n        \"Bini, Nigeria\": {\n            \"code\": 1126,\n            \"id\": \"bin-NG\",\n            \"name\": \"Bini, Nigeria\"\n        },\n        \"Nigerian Fulfulde, Nigeria\": {\n            \"code\": 1127,\n            \"id\": \"fuv-NG\",\n            \"name\": \"Nigerian Fulfulde, Nigeria\"\n        },\n        \"Hausa, Latin, Nigeria\": {\n            \"code\": 1128,\n            \"id\": \"ha-Latn-NG\",\n            \"name\": \"Hausa, Latin, Nigeria\"\n        },\n        \"Ibibio, Nigeria\": {\n            \"code\": 1129,\n            \"id\": \"ibb-NG\",\n            \"name\": \"Ibibio, Nigeria\"\n        },\n        \"Yoruba, Nigeria\": {\n            \"code\": 1130,\n            \"id\": \"yo-NG\",\n            \"name\": \"Yoruba, Nigeria\"\n        },\n        \"Cusco Quechua, Bolivia\": {\n            \"code\": 1131,\n            \"id\": \"quz-BO\",\n            \"name\": \"Cusco Quechua, Bolivia\"\n        },\n        \"Pedi, South Africa\": {\n            \"code\": 1132,\n            \"id\": \"nso-ZA\",\n            \"name\": \"Pedi, South Africa\"\n        },\n        \"Bashkir, Russian Federation\": {\n            \"code\": 1133,\n            \"id\": \"ba-RU\",\n            \"name\": \"Bashkir, Russian Federation\"\n        },\n        \"Luxembourgish, Luxembourg\": {\n            \"code\": 1134,\n            \"id\": \"lb-LU\",\n            \"name\": \"Luxembourgish, Luxembourg\"\n        },\n        \"Kalaallisut, Greenland\": {\n            \"code\": 1135,\n            \"id\": \"kl-GL\",\n            \"name\": \"Kalaallisut, Greenland\"\n        },\n        \"Igbo, Nigeria\": {\n            \"code\": 1136,\n            \"id\": \"ig-NG\",\n            \"name\": \"Igbo, Nigeria\"\n        },\n        \"Kanuri, Nigeria\": {\n            \"code\": 1137,\n            \"id\": \"kr-NG\",\n            \"name\": \"Kanuri, Nigeria\"\n        },\n        \"West Central Oromo, Ethiopia\": {\n            \"code\": 1138,\n            \"id\": \"gaz-ET\",\n            \"name\": \"West Central Oromo, Ethiopia\"\n        },\n        \"Tigrinya, Eritrea\": {\n            \"code\": 1139,\n            \"id\": \"ti-ER\",\n            \"name\": \"Tigrinya, Eritrea\"\n        },\n        \"Guarani, Paraguay\": {\n            \"code\": 1140,\n            \"id\": \"gn-PY\",\n            \"name\": \"Guarani, Paraguay\"\n        },\n        \"Hawaiian, United States\": {\n            \"code\": 1141,\n            \"id\": \"haw-US\",\n            \"name\": \"Hawaiian, United States\"\n        },\n        \"Somali, Somalia\": {\n            \"code\": 1143,\n            \"id\": \"so-SO\",\n            \"name\": \"Somali, Somalia\"\n        },\n        \"Sichuan Yi, China\": {\n            \"code\": 1144,\n            \"id\": \"ii-CN\",\n            \"name\": \"Sichuan Yi, China\"\n        },\n        \"Papiamento, Netherlands Antilles\": {\n            \"code\": 1145,\n            \"id\": \"pap-AN\",\n            \"name\": \"Papiamento, Netherlands Antilles\"\n        },\n        \"Mapudungun, Chile\": {\n            \"code\": 1146,\n            \"id\": \"arn-CL\",\n            \"name\": \"Mapudungun, Chile\"\n        },\n        \"Mohawk, Canada\": {\n            \"code\": 1148,\n            \"id\": \"moh-CA\",\n            \"name\": \"Mohawk, Canada\"\n        },\n        \"Breton, France\": {\n            \"code\": 1150,\n            \"id\": \"br-FR\",\n            \"name\": \"Breton, France\"\n        },\n        \"Uighur, China\": {\n            \"code\": 1152,\n            \"id\": \"ug-CN\",\n            \"name\": \"Uighur, China\"\n        },\n        \"Maori, New Zealand\": {\n            \"code\": 1153,\n            \"id\": \"mi-NZ\",\n            \"name\": \"Maori, New Zealand\"\n        },\n        \"Occitan (post 1500), France\": {\n            \"code\": 1154,\n            \"id\": \"oc-FR\",\n            \"name\": \"Occitan (post 1500), France\"\n        },\n        \"Corsican, France\": {\n            \"code\": 1155,\n            \"id\": \"co-FR\",\n            \"name\": \"Corsican, France\"\n        },\n        \"Swiss German, France\": {\n            \"code\": 1156,\n            \"id\": \"gsw-FR\",\n            \"name\": \"Swiss German, France\"\n        },\n        \"Yakut, Russian Federation\": {\n            \"code\": 1157,\n            \"id\": \"sah-RU\",\n            \"name\": \"Yakut, Russian Federation\"\n        },\n        \"Kinyarwanda, Rwanda\": {\n            \"code\": 1159,\n            \"id\": \"rw-RW\",\n            \"name\": \"Kinyarwanda, Rwanda\"\n        },\n        \"Wolof, Senegal\": {\n            \"code\": 1160,\n            \"id\": \"wo-SN\",\n            \"name\": \"Wolof, Senegal\"\n        },\n        \"Dari, Afghanistan\": {\n            \"code\": 1164,\n            \"id\": \"prs-AF\",\n            \"name\": \"Dari, Afghanistan\"\n        },\n        \"Plateau Malagasy, Madagascar\": {\n            \"code\": 1165,\n            \"id\": \"plt-MG\",\n            \"name\": \"Plateau Malagasy, Madagascar\"\n        },\n        \"Scottish Gaelic, United Kingdom\": {\n            \"code\": 1169,\n            \"id\": \"gd-GB\",\n            \"name\": \"Scottish Gaelic, United Kingdom\"\n        },\n        \"Arabic, Iraq\": {\n            \"code\": 2049,\n            \"id\": \"ar-IQ\",\n            \"name\": \"Arabic, Iraq\"\n        },\n        \"Chinese, China\": {\n            \"code\": 2052,\n            \"id\": \"zh-CN\",\n            \"name\": \"Chinese, China\"\n        },\n        \"German, Switzerland\": {\n            \"code\": 2055,\n            \"id\": \"de-CH\",\n            \"name\": \"German, Switzerland\"\n        },\n        \"English, United Kingdom\": {\n            \"code\": 2057,\n            \"id\": \"en-GB\",\n            \"name\": \"English, United Kingdom\"\n        },\n        \"Spanish, Mexico\": {\n            \"code\": 2058,\n            \"id\": \"es-MX\",\n            \"name\": \"Spanish, Mexico\"\n        },\n        \"French, Belgium\": {\n            \"code\": 2060,\n            \"id\": \"fr-BE\",\n            \"name\": \"French, Belgium\"\n        },\n        \"Italian, Switzerland\": {\n            \"code\": 2064,\n            \"id\": \"it-CH\",\n            \"name\": \"Italian, Switzerland\"\n        },\n        \"Dutch, Belgium\": {\n            \"code\": 2067,\n            \"id\": \"nl-BE\",\n            \"name\": \"Dutch, Belgium\"\n        },\n        \"Norwegian Nynorsk, Norway\": {\n            \"code\": 2068,\n            \"id\": \"nn-NO\",\n            \"name\": \"Norwegian Nynorsk, Norway\"\n        },\n        \"Portuguese, Portugal\": {\n            \"code\": 2070,\n            \"id\": \"pt-PT\",\n            \"name\": \"Portuguese, Portugal\"\n        },\n        \"Romanian, Macao\": {\n            \"code\": 2072,\n            \"id\": \"ro-MO\",\n            \"name\": \"Romanian, Macao\"\n        },\n        \"Russian, Macao\": {\n            \"code\": 2073,\n            \"id\": \"ru-MO\",\n            \"name\": \"Russian, Macao\"\n        },\n        \"Serbian, Latin, Serbia and Montenegro\": {\n            \"code\": 2074,\n            \"id\": \"sr-Latn-CS\",\n            \"name\": \"Serbian, Latin, Serbia and Montenegro\"\n        },\n        \"Swedish, Finland\": {\n            \"code\": 2077,\n            \"id\": \"sv-FI\",\n            \"name\": \"Swedish, Finland\"\n        },\n        \"Urdu, India\": {\n            \"code\": 2080,\n            \"id\": \"ur-IN\",\n            \"name\": \"Urdu, India\"\n        },\n        \"Azerbaijani, Cyrillic, Azerbaijan\": {\n            \"code\": 2092,\n            \"id\": \"az-Cyrl-AZ\",\n            \"name\": \"Azerbaijani, Cyrillic, Azerbaijan\"\n        },\n        \"Lower Sorbian, Germany\": {\n            \"code\": 2094,\n            \"id\": \"dsb-DE\",\n            \"name\": \"Lower Sorbian, Germany\"\n        },\n        \"Northern Sami, Sweden\": {\n            \"code\": 2107,\n            \"id\": \"se-SE\",\n            \"name\": \"Northern Sami, Sweden\"\n        },\n        \"Irish, Ireland\": {\n            \"code\": 2108,\n            \"id\": \"ga-IE\",\n            \"name\": \"Irish, Ireland\"\n        },\n        \"Malay (macrolanguage), Brunei Darussalam\": {\n            \"code\": 2110,\n            \"id\": \"ms-BN\",\n            \"name\": \"Malay (macrolanguage), Brunei Darussalam\"\n        },\n        \"Uzbek, Cyrillic, Uzbekistan\": {\n            \"code\": 2115,\n            \"id\": \"uz-Cyrl-UZ\",\n            \"name\": \"Uzbek, Cyrillic, Uzbekistan\"\n        },\n        \"Bengali, Bangladesh\": {\n            \"code\": 2117,\n            \"id\": \"bn-BD\",\n            \"name\": \"Bengali, Bangladesh\"\n        },\n        \"Panjabi, Pakistan\": {\n            \"code\": 2118,\n            \"id\": \"pa-PK\",\n            \"name\": \"Panjabi, Pakistan\"\n        },\n        \"Mongolian, Mongolian, China\": {\n            \"code\": 2128,\n            \"id\": \"mn-Mong-CN\",\n            \"name\": \"Mongolian, Mongolian, China\"\n        },\n        \"Tibetan, Bhutan\": {\n            \"code\": 2129,\n            \"id\": \"bo-BT\",\n            \"name\": \"Tibetan, Bhutan\"\n        },\n        \"Sindhi, Pakistan\": {\n            \"code\": 2137,\n            \"id\": \"sd-PK\",\n            \"name\": \"Sindhi, Pakistan\"\n        },\n        \"Inuktitut, Latin, Canada\": {\n            \"code\": 2141,\n            \"id\": \"iu-Latn-CA\",\n            \"name\": \"Inuktitut, Latin, Canada\"\n        },\n        \"Central Atlas Tamazight, Latin, Algeria\": {\n            \"code\": 2143,\n            \"id\": \"tzm-Latn-DZ\",\n            \"name\": \"Central Atlas Tamazight, Latin, Algeria\"\n        },\n        \"Nepali, India\": {\n            \"code\": 2145,\n            \"id\": \"ne-IN\",\n            \"name\": \"Nepali, India\"\n        },\n        \"Cusco Quechua, Ecuador\": {\n            \"code\": 2155,\n            \"id\": \"quz-EC\",\n            \"name\": \"Cusco Quechua, Ecuador\"\n        },\n        \"Tigrinya, Ethiopia\": {\n            \"code\": 2163,\n            \"id\": \"ti-ET\",\n            \"name\": \"Tigrinya, Ethiopia\"\n        },\n        \"Arabic, Egypt\": {\n            \"code\": 3073,\n            \"id\": \"ar-EG\",\n            \"name\": \"Arabic, Egypt\"\n        },\n        \"Chinese, Hong Kong\": {\n            \"code\": 3076,\n            \"id\": \"zh-HK\",\n            \"name\": \"Chinese, Hong Kong\"\n        },\n        \"German, Austria\": {\n            \"code\": 3079,\n            \"id\": \"de-AT\",\n            \"name\": \"German, Austria\"\n        },\n        \"English, Australia\": {\n            \"code\": 3081,\n            \"id\": \"en-AU\",\n            \"name\": \"English, Australia\"\n        },\n        \"Spanish, Spain\": {\n            \"code\": 3082,\n            \"id\": \"es-ES\",\n            \"name\": \"Spanish, Spain\"\n        },\n        \"French, Canada\": {\n            \"code\": 3084,\n            \"id\": \"fr-CA\",\n            \"name\": \"French, Canada\"\n        },\n        \"Serbian, Cyrillic, Serbia and Montenegro\": {\n            \"code\": 3098,\n            \"id\": \"sr-Cyrl-CS\",\n            \"name\": \"Serbian, Cyrillic, Serbia and Montenegro\"\n        },\n        \"Northern Sami, Finland\": {\n            \"code\": 3131,\n            \"id\": \"se-FI\",\n            \"name\": \"Northern Sami, Finland\"\n        },\n        \"Tamanaku, Morocco\": {\n            \"code\": 3167,\n            \"id\": \"tmz-MA\",\n            \"name\": \"Tamanaku, Morocco\"\n        },\n        \"Cusco Quechua, Peru\": {\n            \"code\": 3179,\n            \"id\": \"quz-PE\",\n            \"name\": \"Cusco Quechua, Peru\"\n        },\n        \"Arabic, Libyan Arab Jamahiriya\": {\n            \"code\": 4097,\n            \"id\": \"ar-LY\",\n            \"name\": \"Arabic, Libyan Arab Jamahiriya\"\n        },\n        \"Chinese, Singapore\": {\n            \"code\": 4100,\n            \"id\": \"zh-SG\",\n            \"name\": \"Chinese, Singapore\"\n        },\n        \"German, Luxembourg\": {\n            \"code\": 4103,\n            \"id\": \"de-LU\",\n            \"name\": \"German, Luxembourg\"\n        },\n        \"English, Canada\": {\n            \"code\": 4105,\n            \"id\": \"en-CA\",\n            \"name\": \"English, Canada\"\n        },\n        \"Spanish, Guatemala\": {\n            \"code\": 4106,\n            \"id\": \"es-GT\",\n            \"name\": \"Spanish, Guatemala\"\n        },\n        \"French, Switzerland\": {\n            \"code\": 4108,\n            \"id\": \"fr-CH\",\n            \"name\": \"French, Switzerland\"\n        },\n        \"Croatian, Bosnia and Herzegovina\": {\n            \"code\": 4122,\n            \"id\": \"hr-BA\",\n            \"name\": \"Croatian, Bosnia and Herzegovina\"\n        },\n        \"Lule Sami, Norway\": {\n            \"code\": 4155,\n            \"id\": \"smj-NO\",\n            \"name\": \"Lule Sami, Norway\"\n        },\n        \"Arabic, Algeria\": {\n            \"code\": 5121,\n            \"id\": \"ar-DZ\",\n            \"name\": \"Arabic, Algeria\"\n        },\n        \"Chinese, Macao\": {\n            \"code\": 5124,\n            \"id\": \"zh-MO\",\n            \"name\": \"Chinese, Macao\"\n        },\n        \"German, Liechtenstein\": {\n            \"code\": 5127,\n            \"id\": \"de-LI\",\n            \"name\": \"German, Liechtenstein\"\n        },\n        \"English, New Zealand\": {\n            \"code\": 5129,\n            \"id\": \"en-NZ\",\n            \"name\": \"English, New Zealand\"\n        },\n        \"Spanish, Costa Rica\": {\n            \"code\": 5130,\n            \"id\": \"es-CR\",\n            \"name\": \"Spanish, Costa Rica\"\n        },\n        \"French, Luxembourg\": {\n            \"code\": 5132,\n            \"id\": \"fr-LU\",\n            \"name\": \"French, Luxembourg\"\n        },\n        \"Bosnian, Latin, Bosnia and Herzegovina\": {\n            \"code\": 5146,\n            \"id\": \"bs-Latn-BA\",\n            \"name\": \"Bosnian, Latin, Bosnia and Herzegovina\"\n        },\n        \"Lule Sami, Sweden\": {\n            \"code\": 5179,\n            \"id\": \"smj-SE\",\n            \"name\": \"Lule Sami, Sweden\"\n        },\n        \"Arabic, Morocco\": {\n            \"code\": 6145,\n            \"id\": \"ar-MA\",\n            \"name\": \"Arabic, Morocco\"\n        },\n        \"English, Ireland\": {\n            \"code\": 6153,\n            \"id\": \"en-IE\",\n            \"name\": \"English, Ireland\"\n        },\n        \"Spanish, Panama\": {\n            \"code\": 6154,\n            \"id\": \"es-PA\",\n            \"name\": \"Spanish, Panama\"\n        },\n        \"French, Monaco\": {\n            \"code\": 6156,\n            \"id\": \"fr-MC\",\n            \"name\": \"French, Monaco\"\n        },\n        \"Serbian, Latin, Bosnia and Herzegovina\": {\n            \"code\": 6170,\n            \"id\": \"sr-Latn-BA\",\n            \"name\": \"Serbian, Latin, Bosnia and Herzegovina\"\n        },\n        \"Southern Sami, Norway\": {\n            \"code\": 6203,\n            \"id\": \"sma-NO\",\n            \"name\": \"Southern Sami, Norway\"\n        },\n        \"Arabic, Tunisia\": {\n            \"code\": 7169,\n            \"id\": \"ar-TN\",\n            \"name\": \"Arabic, Tunisia\"\n        },\n        \"English, South Africa\": {\n            \"code\": 7177,\n            \"id\": \"en-ZA\",\n            \"name\": \"English, South Africa\"\n        },\n        \"Spanish, Dominican Republic\": {\n            \"code\": 7178,\n            \"id\": \"es-DO\",\n            \"name\": \"Spanish, Dominican Republic\"\n        },\n        \"Serbian, Cyrillic, Bosnia and Herzegovina\": {\n            \"code\": 7194,\n            \"id\": \"sr-Cyrl-BA\",\n            \"name\": \"Serbian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"Southern Sami, Sweden\": {\n            \"code\": 7227,\n            \"id\": \"sma-SE\",\n            \"name\": \"Southern Sami, Sweden\"\n        },\n        \"Arabic, Oman\": {\n            \"code\": 8193,\n            \"id\": \"ar-OM\",\n            \"name\": \"Arabic, Oman\"\n        },\n        \"English, Jamaica\": {\n            \"code\": 8201,\n            \"id\": \"en-JM\",\n            \"name\": \"English, Jamaica\"\n        },\n        \"Spanish, Venezuela\": {\n            \"code\": 8202,\n            \"id\": \"es-VE\",\n            \"name\": \"Spanish, Venezuela\"\n        },\n        \"French, Réunion\": {\n            \"code\": 8204,\n            \"id\": \"fr-RE\",\n            \"name\": \"French, Réunion\"\n        },\n        \"Bosnian, Cyrillic, Bosnia and Herzegovina\": {\n            \"code\": 8218,\n            \"id\": \"bs-Cyrl-BA\",\n            \"name\": \"Bosnian, Cyrillic, Bosnia and Herzegovina\"\n        },\n        \"Skolt Sami, Finland\": {\n            \"code\": 8251,\n            \"id\": \"sms-FI\",\n            \"name\": \"Skolt Sami, Finland\"\n        },\n        \"Arabic, Yemen\": {\n            \"code\": 9217,\n            \"id\": \"ar-YE\",\n            \"name\": \"Arabic, Yemen\"\n        },\n        \"Spanish, Colombia\": {\n            \"code\": 9226,\n            \"id\": \"es-CO\",\n            \"name\": \"Spanish, Colombia\"\n        },\n        \"French, Congo\": {\n            \"code\": 9228,\n            \"id\": \"fr-CG\",\n            \"name\": \"French, Congo\"\n        },\n        \"Serbian, Latin, Serbia\": {\n            \"code\": 9242,\n            \"id\": \"sr-Latn-RS\",\n            \"name\": \"Serbian, Latin, Serbia\"\n        },\n        \"Inari Sami, Finland\": {\n            \"code\": 9275,\n            \"id\": \"smn-FI\",\n            \"name\": \"Inari Sami, Finland\"\n        },\n        \"Arabic, Syrian Arab Republic\": {\n            \"code\": 10241,\n            \"id\": \"ar-SY\",\n            \"name\": \"Arabic, Syrian Arab Republic\"\n        },\n        \"English, Belize\": {\n            \"code\": 10249,\n            \"id\": \"en-BZ\",\n            \"name\": \"English, Belize\"\n        },\n        \"Spanish, Peru\": {\n            \"code\": 10250,\n            \"id\": \"es-PE\",\n            \"name\": \"Spanish, Peru\"\n        },\n        \"French, Senegal\": {\n            \"code\": 10252,\n            \"id\": \"fr-SN\",\n            \"name\": \"French, Senegal\"\n        },\n        \"Serbian, Cyrillic, Serbia\": {\n            \"code\": 10266,\n            \"id\": \"sr-Cyrl-RS\",\n            \"name\": \"Serbian, Cyrillic, Serbia\"\n        },\n        \"Arabic, Jordan\": {\n            \"code\": 11265,\n            \"id\": \"ar-JO\",\n            \"name\": \"Arabic, Jordan\"\n        },\n        \"English, Trinidad and Tobago\": {\n            \"code\": 11273,\n            \"id\": \"en-TT\",\n            \"name\": \"English, Trinidad and Tobago\"\n        },\n        \"Spanish, Argentina\": {\n            \"code\": 11274,\n            \"id\": \"es-AR\",\n            \"name\": \"Spanish, Argentina\"\n        },\n        \"French, Cameroon\": {\n            \"code\": 11276,\n            \"id\": \"fr-CM\",\n            \"name\": \"French, Cameroon\"\n        },\n        \"Serbian, Latin, Montenegro\": {\n            \"code\": 11290,\n            \"id\": \"sr-Latn-ME\",\n            \"name\": \"Serbian, Latin, Montenegro\"\n        },\n        \"Arabic, Lebanon\": {\n            \"code\": 12289,\n            \"id\": \"ar-LB\",\n            \"name\": \"Arabic, Lebanon\"\n        },\n        \"English, Zimbabwe\": {\n            \"code\": 12297,\n            \"id\": \"en-ZW\",\n            \"name\": \"English, Zimbabwe\"\n        },\n        \"Spanish, Ecuador\": {\n            \"code\": 12298,\n            \"id\": \"es-EC\",\n            \"name\": \"Spanish, Ecuador\"\n        },\n        \"French, Côte d’Ivoire\": {\n            \"code\": 12300,\n            \"id\": \"fr-CI\",\n            \"name\": \"French, Côte d’Ivoire\"\n        },\n        \"Serbian, Cyrillic, Montenegro\": {\n            \"code\": 12314,\n            \"id\": \"sr-Cyrl-ME\",\n            \"name\": \"Serbian, Cyrillic, Montenegro\"\n        },\n        \"Arabic, Kuwait\": {\n            \"code\": 13313,\n            \"id\": \"ar-KW\",\n            \"name\": \"Arabic, Kuwait\"\n        },\n        \"English, Philippines\": {\n            \"code\": 13321,\n            \"id\": \"en-PH\",\n            \"name\": \"English, Philippines\"\n        },\n        \"Spanish, Chile\": {\n            \"code\": 13322,\n            \"id\": \"es-CL\",\n            \"name\": \"Spanish, Chile\"\n        },\n        \"French, Mali\": {\n            \"code\": 13324,\n            \"id\": \"fr-ML\",\n            \"name\": \"French, Mali\"\n        },\n        \"Arabic, United Arab Emirates\": {\n            \"code\": 14337,\n            \"id\": \"ar-AE\",\n            \"name\": \"Arabic, United Arab Emirates\"\n        },\n        \"English, Indonesia\": {\n            \"code\": 14345,\n            \"id\": \"en-ID\",\n            \"name\": \"English, Indonesia\"\n        },\n        \"Spanish, Uruguay\": {\n            \"code\": 14346,\n            \"id\": \"es-UY\",\n            \"name\": \"Spanish, Uruguay\"\n        },\n        \"French, Morocco\": {\n            \"code\": 14348,\n            \"id\": \"fr-MA\",\n            \"name\": \"French, Morocco\"\n        },\n        \"Arabic, Bahrain\": {\n            \"code\": 15361,\n            \"id\": \"ar-BH\",\n            \"name\": \"Arabic, Bahrain\"\n        },\n        \"English, Hong Kong\": {\n            \"code\": 15369,\n            \"id\": \"en-HK\",\n            \"name\": \"English, Hong Kong\"\n        },\n        \"Spanish, Paraguay\": {\n            \"code\": 15370,\n            \"id\": \"es-PY\",\n            \"name\": \"Spanish, Paraguay\"\n        },\n        \"French, Haiti\": {\n            \"code\": 15372,\n            \"id\": \"fr-HT\",\n            \"name\": \"French, Haiti\"\n        },\n        \"Arabic, Qatar\": {\n            \"code\": 16385,\n            \"id\": \"ar-QA\",\n            \"name\": \"Arabic, Qatar\"\n        },\n        \"English, India\": {\n            \"code\": 16393,\n            \"id\": \"en-IN\",\n            \"name\": \"English, India\"\n        },\n        \"Spanish, Bolivia\": {\n            \"code\": 16394,\n            \"id\": \"es-BO\",\n            \"name\": \"Spanish, Bolivia\"\n        },\n        \"English, Malaysia\": {\n            \"code\": 17417,\n            \"id\": \"en-MY\",\n            \"name\": \"English, Malaysia\"\n        },\n        \"Spanish, El Salvador\": {\n            \"code\": 17418,\n            \"id\": \"es-SV\",\n            \"name\": \"Spanish, El Salvador\"\n        },\n        \"English, Singapore\": {\n            \"code\": 18441,\n            \"id\": \"en-SG\",\n            \"name\": \"English, Singapore\"\n        },\n        \"Spanish, Honduras\": {\n            \"code\": 18442,\n            \"id\": \"es-HN\",\n            \"name\": \"Spanish, Honduras\"\n        },\n        \"Spanish, Nicaragua\": {\n            \"code\": 19466,\n            \"id\": \"es-NI\",\n            \"name\": \"Spanish, Nicaragua\"\n        },\n        \"Spanish, Puerto Rico\": {\n            \"code\": 20490,\n            \"id\": \"es-PR\",\n            \"name\": \"Spanish, Puerto Rico\"\n        },\n        \"Spanish, United States\": {\n            \"code\": 21514,\n            \"id\": \"es-US\",\n            \"name\": \"Spanish, United States\"\n        },\n        \"Bosnian, Cyrillic\": {\n            \"code\": 25626,\n            \"id\": \"bs-Cyrl\",\n            \"name\": \"Bosnian, Cyrillic\"\n        },\n        \"Bosnian, Latin\": {\n            \"code\": 26650,\n            \"id\": \"bs-Latn\",\n            \"name\": \"Bosnian, Latin\"\n        },\n        \"Serbian, Cyrillic\": {\n            \"code\": 27674,\n            \"id\": \"sr-Cyrl\",\n            \"name\": \"Serbian, Cyrillic\"\n        },\n        \"Serbian, Latin\": {\n            \"code\": 28698,\n            \"id\": \"sr-Latn\",\n            \"name\": \"Serbian, Latin\"\n        },\n        \"Inari Sami\": {\n            \"code\": 28731,\n            \"id\": \"smn\",\n            \"name\": \"Inari Sami\"\n        },\n        \"Azerbaijani, Cyrillic\": {\n            \"code\": 29740,\n            \"id\": \"az-Cyrl\",\n            \"name\": \"Azerbaijani, Cyrillic\"\n        },\n        \"Skolt Sami\": {\n            \"code\": 29755,\n            \"id\": \"sms\",\n            \"name\": \"Skolt Sami\"\n        },\n        \"Chinese\": {\n            \"code\": 30724,\n            \"id\": \"zh\",\n            \"name\": \"Chinese\"\n        },\n        \"Norwegian Nynorsk\": {\n            \"code\": 30740,\n            \"id\": \"nn\",\n            \"name\": \"Norwegian Nynorsk\"\n        },\n        \"Bosnian\": {\n            \"code\": 30746,\n            \"id\": \"bs\",\n            \"name\": \"Bosnian\"\n        },\n        \"Azerbaijani, Latin\": {\n            \"code\": 30764,\n            \"id\": \"az-Latn\",\n            \"name\": \"Azerbaijani, Latin\"\n        },\n        \"Southern Sami\": {\n            \"code\": 30779,\n            \"id\": \"sma\",\n            \"name\": \"Southern Sami\"\n        },\n        \"Uzbek, Cyrillic\": {\n            \"code\": 30787,\n            \"id\": \"uz-Cyrl\",\n            \"name\": \"Uzbek, Cyrillic\"\n        },\n        \"Mongolian, Cyrillic\": {\n            \"code\": 30800,\n            \"id\": \"mn-Cyrl\",\n            \"name\": \"Mongolian, Cyrillic\"\n        },\n        \"Inuktitut, Unified Canadian Aboriginal Syllabics\": {\n            \"code\": 30813,\n            \"id\": \"iu-Cans\",\n            \"name\": \"Inuktitut, Unified Canadian Aboriginal Syllabics\"\n        },\n        \"Chinese, Han (Traditional variant)\": {\n            \"code\": 31748,\n            \"id\": \"zh-Hant\",\n            \"name\": \"Chinese, Han (Traditional variant)\"\n        },\n        \"Norwegian Bokmål\": {\n            \"code\": 31764,\n            \"id\": \"nb\",\n            \"name\": \"Norwegian Bokmål\"\n        },\n        \"Serbian\": {\n            \"code\": 31770,\n            \"id\": \"sr\",\n            \"name\": \"Serbian\"\n        },\n        \"Tajik, Cyrillic\": {\n            \"code\": 31784,\n            \"id\": \"tg-Cyrl\",\n            \"name\": \"Tajik, Cyrillic\"\n        },\n        \"Lower Sorbian\": {\n            \"code\": 31790,\n            \"id\": \"dsb\",\n            \"name\": \"Lower Sorbian\"\n        },\n        \"Lule Sami\": {\n            \"code\": 31803,\n            \"id\": \"smj\",\n            \"name\": \"Lule Sami\"\n        },\n        \"Uzbek, Latin\": {\n            \"code\": 31811,\n            \"id\": \"uz-Latn\",\n            \"name\": \"Uzbek, Latin\"\n        },\n        \"Mongolian, Mongolian\": {\n            \"code\": 31824,\n            \"id\": \"mn-Mong\",\n            \"name\": \"Mongolian, Mongolian\"\n        },\n        \"Inuktitut, Latin\": {\n            \"code\": 31837,\n            \"id\": \"iu-Latn\",\n            \"name\": \"Inuktitut, Latin\"\n        },\n        \"Central Atlas Tamazight, Latin\": {\n            \"code\": 31839,\n            \"id\": \"tzm-Latn\",\n            \"name\": \"Central Atlas Tamazight, Latin\"\n        },\n        \"Hausa, Latin\": {\n            \"code\": 31848,\n            \"id\": \"ha-Latn\",\n            \"name\": \"Hausa, Latin\"\n        }\n    }\n} as const;\n\nexport type IsoLangCode = keyof typeof iso_lang_codes.byCode;\nexport type IsoLangId = keyof typeof iso_lang_codes.byId;\nexport type IsoLangName = keyof typeof iso_lang_codes.byName;\nexport type IsoLang = typeof iso_lang_codes.byId[IsoLangId];\n\nexport function toIsoLangId(id: string): IsoLangId | undefined {\n    if (iso_lang_codes.byId.hasOwnProperty(id)) {\n        return id as IsoLangId;\n    }\n    const ids = Object.keys(iso_lang_codes.byId) as readonly IsoLangId[];\n    const lowerCaseId = id.toLowerCase();\n    return ids.find(langId => langId.toLowerCase() === lowerCaseId);\n}\n\nexport function toBaseIsoLang(lang: IsoLang): IsoLang | undefined {\n    const baseId = lang.id.split(\"-\")[0];\n    return iso_lang_codes.byId[baseId as IsoLangId] as IsoLang | undefined;\n}\n\nexport const browserLanguage: IsoLangId | undefined = toIsoLangId(navigator.language);\nexport const browserLanguages: readonly IsoLangId[] = (navigator.languages ?? [navigator.language])\n    .map(toIsoLangId)\n    .filter(isNotUndefined);\n\nglobals({iso_lang_codes, toIsoLangId, toBaseIsoLang, browserLanguage, browserLanguages});\n","import iterate from \"iterare\";\nimport {IteratorWithOperators} from \"iterare/lib/iterate\";\n\nexport interface Range {\n    start?: number;\n    stop: number;\n    step?: number;\n}\n\nfunction* range_iter({start = 0, stop, step = 1}: Range) {\n    while (start < stop) {\n        yield start;\n        start += step;\n    }\n}\n\nexport function range(range: Range): IteratorWithOperators<number> {\n    return iterate(range_iter(range));\n}\n","export function shuffle<T>(a: T[]) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = a[i];\n        a[i] = a[j];\n        a[j] = temp;\n    }\n}\n\nexport function shuffled<T>(a: readonly T[]): T[] {\n    const b = [...a];\n    shuffle(b);\n    return b;\n}\n\nexport function shuffledString(s: string): string {\n    const a = [...s];\n    shuffle(a);\n    return a.join(\"\");\n}\n","import fileSize from \"filesize\";\nimport iterate from \"iterare\";\nimport {IteratorWithOperators} from \"iterare/lib/iterate\";\nimport {LexiconHandle} from \"./lexicons\";\nimport {range} from \"./range\";\nimport {shuffledString} from \"./shuffle\";\n\nexport interface LexiconSize {\n    readonly numWords: number;\n    readonly numChars: number;\n    readonly numBytes: number;\n}\n\nexport interface LexiconMetadata {\n    readonly name: string;\n    readonly size: LexiconSize;\n}\n\nexport interface LexiconMetadataPlus<Metadata extends LexiconMetadata> extends LexiconMetadata {\n    readonly metadata: Metadata;\n    \n    toString(): string;\n    \n    label(): string;\n}\n\nexport class LexiconMetadataImpl<Metadata extends LexiconMetadata> implements LexiconMetadataPlus<Metadata> {\n    \n    constructor(readonly metadata: Metadata) {}\n    \n    get name(): string {\n        return this.metadata.name;\n    }\n    \n    get size(): LexiconSize {\n        return this.metadata.size;\n    }\n    \n    toString(): string {\n        return `Lexicon \"${this.name}\"`;\n    }\n    \n    label(): string {\n        return `${this.name} (${this.size.numWords} words, ${fileSize(this.size.numBytes)})`;\n    }\n    \n}\n\nexport class Lexicon<Metadata extends LexiconMetadata = LexiconMetadata> extends LexiconMetadataImpl<Metadata> {\n    readonly handle: LexiconHandle<Metadata>;\n    private readonly words: ReadonlySet<string>;\n    private readonly rawWordsByLength: readonly ReadonlyArray<string>[];\n    \n    constructor(handle: LexiconHandle<Metadata>, words: Iterable<string>) {\n        super(handle.metadata);\n        this.handle = handle;\n        this.words = iterate(words)\n            .filter(s => s.length > 0)\n            .map(s => s.toLowerCase())\n            .toSet();\n        const maxLength = iterate(this.words).map(e => e.length).reduce(Math.max);\n        const wordsByLength: string[][] = range({stop: maxLength + 1})\n            .map(() => [] as string[])\n            .toArray();\n        for (const word of this.words) {\n            wordsByLength[word.length].push(word);\n        }\n        this.rawWordsByLength = wordsByLength;\n    }\n    \n    toString(): string {\n        return `${this.name} Lexicon (${this.words.size} words)`;\n    }\n    \n    private wordsByLength(length: number): readonly string[] {\n        return this.rawWordsByLength[length] ?? [];\n    }\n    \n    hasLength(length: number): boolean {\n        return this.wordsByLength(length).length > 0;\n    }\n    \n    private maxLengthBound(): number {\n        return this.rawWordsByLength.length;\n    }\n    \n    private lengthRange(): IteratorWithOperators<number> {\n        return range({start: 1, stop: this.maxLengthBound()});\n    }\n    \n    lengths(): IteratorWithOperators<number> {\n        return this\n            .lengthRange()\n            .filter(length => this.hasLength(length));\n    }\n    \n    consecutiveLengths(): IteratorWithOperators<number> {\n        const onePastMaxLength = this\n                .lengthRange()\n                .find(length => !this.hasLength(length))\n            ?? this.maxLengthBound();\n        return range({start: 1, stop: onePastMaxLength});\n    }\n    \n    checkWord(word: string): boolean {\n        return this.words.has(word);\n    }\n    \n    checkWords(words: readonly string[]): boolean {\n        return words.every(word => this.checkWord(word));\n    }\n    \n    wordChecker(): WordChecker {\n        return {\n            word: word => this.checkWord(word),\n            words: words => this.checkWords(words),\n        };\n    }\n    \n    randomWord(length: number): string {\n        if (!this.hasLength(length)) {\n            throw new Error(`${this} has no words of length ${length}`);\n        }\n        const words = this.wordsByLength(length);\n        return words[(Math.random() * words.length) | 0];\n    }\n    \n    randomWords(size: number): IteratorWithOperators<string> {\n        return range({stop: size})\n            .map(i => this.randomWord(i + 1));\n    }\n    \n    randomShuffledWords(size: number): ShuffledWords {\n        return new ShuffledWords(this.randomWords(size).toArray());\n    }\n    \n}\n\nexport class ShuffledWords {\n    \n    private _shuffled: readonly string[];\n    \n    constructor(readonly solution: readonly string[]) {\n        this._shuffled = this.shuffle();\n    }\n    \n    get shuffled(): readonly string[] {\n        return this._shuffled;\n    }\n    \n    private doShuffle(): readonly string[] {\n        const solution = this.solution;\n        const letters = shuffledString(solution.join(\"\"));\n        const words: string[] = [];\n        let start = 0;\n        for (let i = 1; i <= solution.length; i++) {\n            const end = start + i;\n            words.push(letters.slice(start, end));\n            start = end;\n        }\n        return words;\n    }\n    \n    shuffle(): readonly string[] {\n        this._shuffled = this.doShuffle();\n        return this._shuffled;\n    }\n    \n}\n\nexport interface WordChecker {\n    \n    word(word: string): boolean;\n    \n    words(words: readonly string[]): boolean;\n    \n}\n","import iterate from \"iterare\";\nimport {IteratorWithOperators} from \"iterare/lib/iterate\";\nimport {globals} from \"./globals\";\nimport {browserLanguages, iso_lang_codes, IsoLangId, IsoLangName, toBaseIsoLang} from \"./iso_lang_codes\";\nimport {Lexicon, LexiconMetadata, LexiconMetadataImpl, LexiconMetadataPlus} from \"./lexicon\";\nimport {LexiconIndex, lexiconIndex} from \"./lexiconIndex\";\nimport {MaybePromise} from \"./maybePromise\";\n\nexport interface LexiconHandle<Metadata extends LexiconMetadata = LexiconMetadata> extends LexiconMetadataPlus<Metadata> {\n    getCachedPromise(): MaybePromise<Lexicon<Metadata>> | undefined;\n    \n    getCached(): Lexicon<Metadata> | undefined;\n    \n    get(): MaybePromise<Lexicon<Metadata>>;\n}\n\nclass LexiconHandleImpl<Metadata extends LexiconMetadata> extends LexiconMetadataImpl<Metadata> implements LexiconHandle<Metadata> {\n    \n    private lexicon: MaybePromise<Lexicon<Metadata>> | undefined = undefined;\n    \n    get url(): string {\n        return `${process.env.PUBLIC_URL}/lexicons/${this.name}.txt`;\n    }\n    \n    private async fetch(): Promise<Lexicon<Metadata>> {\n        const response = await fetch(this.url);\n        const text = await response.text();\n        if (text.startsWith(\"<!DOCTYPE html>\")) {\n            throw new Error(`the ${this} doesn't actually exist on the server`);\n        }\n        return new Lexicon(this, text.split(\"\\n\"));\n    }\n    \n    getCachedPromise(): MaybePromise<Lexicon<Metadata>> | undefined {\n        return this.lexicon;\n    }\n    \n    getCached(): Lexicon<Metadata> | undefined {\n        if (this.lexicon instanceof Promise) {\n            return;\n        }\n        return this.lexicon;\n    }\n    \n    get(): MaybePromise<Lexicon<Metadata>> {\n        if (this.lexicon) {\n            return this.lexicon;\n        }\n        const lexiconPromise = this.fetch();\n        this.lexicon = lexiconPromise;\n        lexiconPromise.then(lexicon => this.lexicon = lexicon);\n        return lexiconPromise;\n    }\n    \n}\n\nclass Lexicons<Index extends {[key: string]: LexiconMetadata}> {\n    \n    readonly handles: { readonly [K in keyof Index]: LexiconHandle<Index[K]> };\n    private readonly defaultNameKey: string;\n    private defaultName: keyof Index;\n    \n    constructor(index: Index, defaultName?: keyof Index) {\n        const handles: { [K in keyof Index]?: LexiconHandle<Index[K]> } = {};\n        const entries = Object.entries(index) as unknown as readonly [keyof Index, Index[keyof Index]][];\n        for (const [name, metadata] of entries) {\n            if (name !== metadata.name) {\n                throw new Error(`${name} !== ${metadata.name}`);\n            }\n            handles[name] = new LexiconHandleImpl(metadata);\n        }\n        this.handles = handles as { readonly [K in keyof Index]: LexiconHandle<Index[K]> };\n        this.defaultNameKey = \"scramble.lexicon.default\";\n        this.defaultName = defaultName ?? this.getDefaultName();\n        this.default().get(); // fetch immediately\n    }\n    \n    [Symbol.iterator](): IterableIterator<LexiconHandle<Index[keyof Index]>> {\n        const handles = Object.values(this.handles) as unknown as readonly [LexiconHandle<Index[keyof Index]>];\n        return handles[Symbol.iterator]();\n    }\n    \n    iter(): IteratorWithOperators<LexiconHandle<Index[keyof Index]>> {\n        return iterate(this);\n    }\n    \n    isName(name: string | number | symbol): name is keyof Index {\n        return this.handles.hasOwnProperty(name as keyof Index);\n    }\n    \n    nameError(name: string): Error {\n        const names = this.iter().map(e => e.name);\n        return new Error(`the Lexicon ${name} doesn't exist in {${names.join(\", \")}}`);\n    }\n    \n    isMetadata(metadata: LexiconMetadata): metadata is Index[keyof Index] {\n        return this.isName(metadata.name);\n    }\n    \n    private getDefaultName(): keyof Index {\n        // store default in localStorage so you resume with the previous default\n        // use localStorage since it's synchronous, so don't need to use async-await here\n        // since the data I'm storing is so small, just a name, that shouldn't be a problem at all\n        const defaultName = localStorage.getItem(this.defaultNameKey);\n        if (defaultName !== null && this.isName(defaultName)) {\n            return defaultName;\n        } else {\n            return this.iter().map(e => e.name).find(() => true)!;\n        }\n    }\n    \n    updateDefault(metadata: Index[keyof Index]) {\n        this.defaultName = metadata.name;\n        localStorage.setItem(this.defaultNameKey, this.defaultName as string);\n    }\n    \n    tryUpdateDefault(metadata: LexiconMetadata) {\n        if (!this.isMetadata(metadata)) {\n            throw this.nameError(metadata.name);\n        }\n        this.updateDefault(metadata);\n    }\n    \n    tryGet(name: string): LexiconHandle<Index[keyof Index]> {\n        if (!this.isName(name)) {\n            throw this.nameError(name);\n        }\n        return this.handles[name];\n    }\n    \n    default(): LexiconHandle<Index[keyof Index]> {\n        return this.handles[this.defaultName];\n    }\n    \n}\n\n// see indexLexicons.mjs\n\nconst lexiconNameToLangCode: { readonly [K in keyof LexiconIndex]: IsoLangName | null } = {\n    \"American English Huge\": \"English, United States\",\n    \"American English Insane\": \"English, United States\",\n    \"American English Large\": \"English, United States\",\n    \"American English Small\": \"English, United States\",\n    \"American English\": \"English, United States\",\n    \"Bokmaal (Bokmål, Norsk)\": null,\n    \"Brazilian\": \"Portuguese, Brazil\",\n    \"British English Huge\": \"English, United Kingdom\",\n    \"British English Insane\": \"English, United Kingdom\",\n    \"British English Large\": \"English, United Kingdom\",\n    \"British English Small\": \"English, United Kingdom\",\n    \"British English\": \"English, United Kingdom\",\n    \"Canadian English Huge\": \"English, Canada\",\n    \"Canadian English Insane\": \"English, Canada\",\n    \"Canadian English Large\": \"English, Canada\",\n    \"Canadian English Small\": \"English, Canada\",\n    \"Canadian English\": \"English, Canada\",\n    \"Catala (Catalan)\": \"Catalan, Spain\",\n    \"Danish (Dansk)\": \"Danish, Denmark\",\n    \"Dutch (Nederlands)\": \"Dutch, Netherlands\",\n    \"English Sample\": \"English\",\n    \"Esperanto\": null,\n    \"Faroese (Foeroyskt)\": \"Faroese\",\n    \"French\": \"French\",\n    \"Galician Minimos (Galician)\": \"Galician\",\n    \"German Medical\": \"German\",\n    \"Italian\": \"Italian, Italy\",\n    \"Ngerman\": \"German\",\n    \"Nynorsk\": \"Norwegian Nynorsk, Norway\",\n    \"Ogerman\": \"German\",\n    \"Polish\": \"Polish, Poland\",\n    \"Portuguese\": \"Portuguese, Portugal\",\n    \"Spanish\": \"Spanish\",\n    \"Swedish (Svenska)\": \"Swedish, Sweden\",\n    \"Swiss\": \"German, Switzerland\",\n    \"Ukrainian\": \"Ukrainian, Ukraine\",\n    \"Web2\": null,\n};\n\nconst langCodeToLexiconName = ((): (langId: IsoLangId) => keyof LexiconIndex | undefined => {\n    const convert: { readonly [K in IsoLangName]?: keyof LexiconIndex } = {\n        \"English, United States\": \"American English\",\n        \"English, United Kingdom\": \"British English\",\n        \"English, Canada\": \"Canadian English\",\n        \"Portuguese, Brazil\": \"Brazilian\",\n        \"Portuguese, Portugal\": \"Portuguese\",\n        \"German, Switzerland\": \"Swiss\",\n    \n        English: \"American English\",\n        Catalan: \"Catala (Catalan)\",\n        Danish: \"Danish (Dansk)\",\n        Dutch: \"Dutch (Nederlands)\",\n        Faroese: \"Faroese (Foeroyskt)\",\n        French: \"French\",\n        Galician: \"Galician Minimos (Galician)\",\n        Italian: \"Italian\",\n        German: \"Ngerman\",\n        Polish: \"Polish\",\n        Spanish: \"Spanish\",\n        Swedish: \"Swedish (Svenska)\",\n        \"Swiss German\": \"Swiss\",\n        Ukrainian: \"Ukrainian\",\n    };\n    return langId => {\n        const lang = iso_lang_codes.byId[langId];\n        if (!lang) {\n            console.error(`\"${langId}\" is not an IETF BCP 47 language code`);\n            return;\n        }\n        let lexiconName = convert[lang.name];\n        if (lexiconName) {\n            return lexiconName;\n        }\n        const baseLang = toBaseIsoLang(lang);\n        if (!baseLang) {\n            return;\n        }\n        lexiconName = convert[baseLang.name];\n        if (lexiconName) {\n            return lexiconName;\n        }\n        return;\n    };\n})();\n\nconst defaultName: keyof LexiconIndex = iterate(browserLanguages)\n        .map(langCodeToLexiconName)\n        .find(name => name !== undefined)\n    ?? \"American English\";\n\nexport const lexicons = new Lexicons(lexiconIndex, defaultName);\n\nglobals({lexicons});\n","// see indexLexicons.mjs\n\nexport const lexiconIndex = {\n    \"American English Huge\": {\n        \"name\": \"American English Huge\",\n        \"size\": {\n            \"numWords\": 246744,\n            \"numChars\": 2284464,\n            \"numBytes\": 2531998\n        }\n    },\n    \"American English Insane\": {\n        \"name\": \"American English Insane\",\n        \"size\": {\n            \"numWords\": 428978,\n            \"numChars\": 4120357,\n            \"numBytes\": 4550125\n        }\n    },\n    \"American English Large\": {\n        \"name\": \"American English Large\",\n        \"size\": {\n            \"numWords\": 114206,\n            \"numChars\": 1001317,\n            \"numBytes\": 1115773\n        }\n    },\n    \"American English Small\": {\n        \"name\": \"American English Small\",\n        \"size\": {\n            \"numWords\": 40106,\n            \"numChars\": 316774,\n            \"numBytes\": 356920\n        }\n    },\n    \"American English\": {\n        \"name\": \"American English\",\n        \"size\": {\n            \"numWords\": 63342,\n            \"numChars\": 525946,\n            \"numBytes\": 589416\n        }\n    },\n    \"Bokmaal (Bokmål, Norsk)\": {\n        \"name\": \"Bokmaal (Bokmål, Norsk)\",\n        \"size\": {\n            \"numWords\": 727157,\n            \"numChars\": 9343908,\n            \"numBytes\": 10071064\n        }\n    },\n    \"Brazilian\": {\n        \"name\": \"Brazilian\",\n        \"size\": {\n            \"numWords\": 201214,\n            \"numChars\": 1947879,\n            \"numBytes\": 2149092\n        }\n    },\n    \"British English Huge\": {\n        \"name\": \"British English Huge\",\n        \"size\": {\n            \"numWords\": 246195,\n            \"numChars\": 2281671,\n            \"numBytes\": 2528654\n        }\n    },\n    \"British English Insane\": {\n        \"name\": \"British English Insane\",\n        \"size\": {\n            \"numWords\": 428462,\n            \"numChars\": 4118763,\n            \"numBytes\": 4548013\n        }\n    },\n    \"British English Large\": {\n        \"name\": \"British English Large\",\n        \"size\": {\n            \"numWords\": 113753,\n            \"numChars\": 998356,\n            \"numBytes\": 1112357\n        }\n    },\n    \"British English Small\": {\n        \"name\": \"British English Small\",\n        \"size\": {\n            \"numWords\": 39820,\n            \"numChars\": 314691,\n            \"numBytes\": 354551\n        }\n    },\n    \"British English\": {\n        \"name\": \"British English\",\n        \"size\": {\n            \"numWords\": 62955,\n            \"numChars\": 523025,\n            \"numBytes\": 586106\n        }\n    },\n    \"Canadian English Huge\": {\n        \"name\": \"Canadian English Huge\",\n        \"size\": {\n            \"numWords\": 246732,\n            \"numChars\": 2286330,\n            \"numBytes\": 2533852\n        }\n    },\n    \"Canadian English Insane\": {\n        \"name\": \"Canadian English Insane\",\n        \"size\": {\n            \"numWords\": 429041,\n            \"numChars\": 4123832,\n            \"numBytes\": 4553663\n        }\n    },\n    \"Canadian English Large\": {\n        \"name\": \"Canadian English Large\",\n        \"size\": {\n            \"numWords\": 114188,\n            \"numChars\": 1002020,\n            \"numBytes\": 1116458\n        }\n    },\n    \"Canadian English Small\": {\n        \"name\": \"Canadian English Small\",\n        \"size\": {\n            \"numWords\": 40073,\n            \"numChars\": 316754,\n            \"numBytes\": 356867\n        }\n    },\n    \"Canadian English\": {\n        \"name\": \"Canadian English\",\n        \"size\": {\n            \"numWords\": 63282,\n            \"numChars\": 525737,\n            \"numBytes\": 589147\n        }\n    },\n    \"Catala (Catalan)\": {\n        \"name\": \"Catala (Catalan)\",\n        \"size\": {\n            \"numWords\": 594065,\n            \"numChars\": 5988133,\n            \"numBytes\": 6784110\n        }\n    },\n    \"Danish (Dansk)\": {\n        \"name\": \"Danish (Dansk)\",\n        \"size\": {\n            \"numWords\": 295965,\n            \"numChars\": 3425472,\n            \"numBytes\": 3806959\n        }\n    },\n    \"Dutch (Nederlands)\": {\n        \"name\": \"Dutch (Nederlands)\",\n        \"size\": {\n            \"numWords\": 304745,\n            \"numChars\": 3511029,\n            \"numBytes\": 3819709\n        }\n    },\n    \"English Sample\": {\n        \"name\": \"English Sample\",\n        \"size\": {\n            \"numWords\": 15,\n            \"numChars\": 47,\n            \"numBytes\": 62\n        }\n    },\n    \"Esperanto\": {\n        \"name\": \"Esperanto\",\n        \"size\": {\n            \"numWords\": 1003861,\n            \"numChars\": 11085734,\n            \"numBytes\": 12381123\n        }\n    },\n    \"Faroese (Foeroyskt)\": {\n        \"name\": \"Faroese (Foeroyskt)\",\n        \"size\": {\n            \"numWords\": 153166,\n            \"numChars\": 1599931,\n            \"numBytes\": 1753096\n        }\n    },\n    \"French\": {\n        \"name\": \"French\",\n        \"size\": {\n            \"numWords\": 137604,\n            \"numChars\": 1314669,\n            \"numBytes\": 1512829\n        }\n    },\n    \"Galician Minimos (Galician)\": {\n        \"name\": \"Galician Minimos (Galician)\",\n        \"size\": {\n            \"numWords\": 515124,\n            \"numChars\": 5428079,\n            \"numBytes\": 6090218\n        }\n    },\n    \"German Medical\": {\n        \"name\": \"German Medical\",\n        \"size\": {\n            \"numWords\": 6450,\n            \"numChars\": 83597,\n            \"numBytes\": 90046\n        }\n    },\n    \"Italian\": {\n        \"name\": \"Italian\",\n        \"size\": {\n            \"numWords\": 108222,\n            \"numChars\": 1023829,\n            \"numBytes\": 1138236\n        }\n    },\n    \"Ngerman\": {\n        \"name\": \"Ngerman\",\n        \"size\": {\n            \"numWords\": 236985,\n            \"numChars\": 2822682,\n            \"numBytes\": 3114239\n        }\n    },\n    \"Nynorsk\": {\n        \"name\": \"Nynorsk\",\n        \"size\": {\n            \"numWords\": 483403,\n            \"numChars\": 5571739,\n            \"numBytes\": 6055141\n        }\n    },\n    \"Ogerman\": {\n        \"name\": \"Ogerman\",\n        \"size\": {\n            \"numWords\": 194769,\n            \"numChars\": 2289694,\n            \"numBytes\": 2531475\n        }\n    },\n    \"Polish\": {\n        \"name\": \"Polish\",\n        \"size\": {\n            \"numWords\": 3504057,\n            \"numChars\": 43317607,\n            \"numBytes\": 49348989\n        }\n    },\n    \"Portuguese\": {\n        \"name\": \"Portuguese\",\n        \"size\": {\n            \"numWords\": 427976,\n            \"numChars\": 4425761,\n            \"numBytes\": 4974519\n        }\n    },\n    \"Spanish\": {\n        \"name\": \"Spanish\",\n        \"size\": {\n            \"numWords\": 86016,\n            \"numChars\": 748671,\n            \"numBytes\": 852189\n        }\n    },\n    \"Swedish (Svenska)\": {\n        \"name\": \"Swedish (Svenska)\",\n        \"size\": {\n            \"numWords\": 76661,\n            \"numChars\": 720117,\n            \"numBytes\": 796777\n        }\n    },\n    \"Swiss\": {\n        \"name\": \"Swiss\",\n        \"size\": {\n            \"numWords\": 237045,\n            \"numChars\": 2828025,\n            \"numBytes\": 3115027\n        }\n    },\n    \"Ukrainian\": {\n        \"name\": \"Ukrainian\",\n        \"size\": {\n            \"numWords\": 1398873,\n            \"numChars\": 14791431,\n            \"numBytes\": 30981734\n        }\n    },\n    \"Web2\": {\n        \"name\": \"Web2\",\n        \"size\": {\n            \"numWords\": 210680,\n            \"numChars\": 2038459,\n            \"numBytes\": 2249138\n        }\n    }\n} as const;\n\nexport type LexiconIndex = typeof lexiconIndex;\n","import {FC, useEffect, useState} from \"react\";\nimport {default as Dropdown} from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport {Board, SolutionProps} from \"./board\";\nimport {Lexicon} from \"./lexicon\";\nimport {LexiconHandle, lexicons} from \"./lexicons\";\n\ninterface GameOptions {\n    lexicon: Lexicon;\n    size: number;\n}\n\nconst GameSolution: FC<SolutionProps> = ({solved, showingSolution, showSolution, numMoves, shuffle}) => {\n    return <>\n        <div>\n            {showingSolution ? \"Gave Up In \" : \"\"}{numMoves} Moves\n        </div>\n        <div>\n            {solved\n                ? (showingSolution ? \"Done!\" : \"You Won!\")\n                : <button onClick={showSolution}>Show Solution</button>}\n        </div>\n        <div>\n            <button onClick={shuffle}>Shuffle</button>\n        </div>\n    </>;\n};\n\nexport const Game: FC<GameOptions> = ({lexicon, size}) => {\n    const words = lexicon.randomShuffledWords(size);\n    return <div>\n        <Board\n            words={words}\n            wordChecker={lexicon.wordChecker()}\n            Solution={GameSolution}\n        />\n    </div>;\n};\n\ninterface StartGameOptions {\n    readonly again: boolean;\n    readonly lexiconHandle: LexiconHandle;\n    readonly size?: number;\n}\n\nconst NewGameChooser: FC<{\n    options?: GameOptions,\n    setOptions: (options: GameOptions) => void,\n}> = ({options, setOptions}) => {\n    const starting = ((): StartGameOptions => {\n        if (options) {\n            return {\n                again: true,\n                ...options,\n                lexiconHandle: options.lexicon.handle,\n            };\n        } else {\n            return {\n                again: false,\n                lexiconHandle: lexicons.default(),\n            };\n        }\n    })();\n    \n    const [lexiconHandle, setLexiconHandle] = useState(starting.lexiconHandle);\n    const [lexicon, setLexicon] = useState(starting.lexiconHandle.getCached());\n    const [size, setSize] = useState(starting.size);\n    \n    useEffect(() => {\n        // so that an old chosen size doesn't go chosen with a wrong lexicon\n        setSize(undefined);\n        \n        const newLexicon = lexiconHandle.get();\n        if (newLexicon instanceof Promise) {\n            newLexicon.then(setLexicon);\n        } else {\n            setLexicon(newLexicon);\n        }\n    }, [lexiconHandle]);\n    \n    useEffect(() => {\n        if (lexicon) {\n            lexicons.tryUpdateDefault(lexicon);\n        }\n    }, [lexicon]);\n    \n    return <div>\n        <button\n            disabled={!(lexicon && size !== undefined)}\n            onClick={() => {\n                if (lexicon && size !== undefined) {\n                    setOptions({lexicon, size});\n                } else {\n                    throw new Error(`impossible`);\n                }\n            }}>\n            {`Play${starting.again ? \" Again\" : \"\"}!`}\n        </button>\n        <br/>\n        <label>Lexicon</label>\n        <Dropdown\n            options={lexicons.iter().map(e => ({value: e.name, label: e.label()})).toArray()}\n            value={lexiconHandle.name}\n            onChange={e => setLexiconHandle(lexicons.tryGet(e.value))}\n        />\n        {lexicon && <>\n            <label>Size</label>\n            <Dropdown\n                options={lexicon.consecutiveLengths().map(e => e.toString()).toArray()}\n                value={size?.toString()}\n                onChange={e => setSize(parseInt(e.value))}\n            />\n        </>}\n    </div>;\n};\n\nexport const Games: FC = () => {\n    const [options, setOptions] = useState<GameOptions | undefined>();\n    return <div>\n        {options && <Game lexicon={options.lexicon} size={options.size}/>}\n        <NewGameChooser options={options} setOptions={setOptions}/>\n    </div>;\n};\n","import {ReportHandler} from \"web-vitals\";\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    // noinspection SuspiciousTypeOfGuard\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n","import {FC} from \"react\";\n\nexport const Instructions: FC = () => {\n    return <div>\n        <h1 style={{\n            textAlign: \"center\"\n        }}>\n            Scramble\n        </h1>\n        <div style={{\n            marginLeft: \"20%\",\n            marginRight: \"20%\",\n            minWidth: \"20vw\",\n        }}>\n            <h3>Instructions</h3>\n            <p>\n                Swap letters by tapping on a pair one by one\n                in an effort to make a word on each line of the board.\n            </p>\n            <p>\n                Note that you can select which lexicon (dictionary) the game will use.\n            </p>\n            <p>\n                And don't forget to select the size of your board to start.\n            </p>\n        </div>\n    </div>;\n};\n","import {FC} from \"react\";\nimport {Games} from \"./game\";\nimport {Instructions} from \"./instructions\";\n\nexport const Scramble: FC = () => {\n    return <div>\n        <div style={{\n            textAlign: \"center\",\n        }}>\n            <Games/>\n        </div>\n        <Instructions/>\n    </div>;\n};\n","import {FC} from \"react\";\nimport \"./App.css\";\nimport {Scramble} from \"./main/scramble\";\n\nexport const App: FC = () => {\n    return <Scramble/>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport \"./index.css\";\nimport {reportWebVitals} from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.querySelector(\"#root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}